let ShaderGLSL=function(a){let b=this;this['ShadingLanguage']=undefined,this['ShadingLanguage_v1']={'Basic':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_normal;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','#ifdef\x20SHADING_TRIPLANAR','varying\x20vec3\x20vWorldPos;','#endif','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20\x20\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','#ifdef\x20SHADING_TRIPLANAR','\x20\x20\x20vWorldPos\x20=\x20updatePosition;','#endif','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20float\x20fShininess;','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','#ifdef\x20SHADING_TRIPLANAR','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','varying\x20vec3\x20vWorldPos;','#endif','uniform\x20bool\x20ubUseGraySacle;','float\x20dfd(vec2\x20p)\x20{\x20','return\x20p.x\x20*\x20p.x\x20-\x20p.y;','}','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','\x09float\x20shininess\x20=\x20mix(0.1,\x201.0,\x20fShininess);','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09if(normal.z\x20<\x200.0)','\x09\x09normal\x20*=\x20-1.0;','\x09vec3\x20lightDir\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09vec3\x20texColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','#ifdef\x20SHADING_TRIPLANAR','\x20\x20\x20vec3\x20world_normal\x20=\x20vWorldPos;','if(world_normal.x\x20>=\x201527208.5\x20&&\x20world_normal.y\x20>=\x202773888.0\x20&&','\x20\x20\x20\x20world_normal.x\x20<=\x203825013.25\x20&&\x20world_normal.y\x20<=\x205606348.5\x20)\x20{','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20-\x201527208.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20/\x202297804.75);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20(world_normal.y\x20-\x202773888.0);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20-(world_normal.y\x20/\x202832460.5);','}','if(world_normal.x\x20>=\x203823475.5\x20&&\x20world_normal.y\x20>=\x202778586.5\x20&&','\x20\x20\x20\x20world_normal.x\x20<=\x206012677.0\x20&&\x20world_normal.y\x20<=\x205612678.5\x20)\x20{','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20-\x203823475.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20/\x202189201.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20(world_normal.y\x20-\x202778586.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20-(world_normal.y\x20/\x202834092.0);','}','if(world_normal.x\x20>=\x203833331.5\x20&&\x20world_normal.y\x20>=\x2058852.18\x20&&','\x20\x20\x20\x20world_normal.x\x20<=\x206020032.0\x20&&\x20world_normal.y\x20<=\x202780283.25\x20)\x20{','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20-\x203833331.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20/\x202186700.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20(world_normal.y\x20-\x2058852.18);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20-(world_normal.y\x20/\x202721431.0);','}','if(world_normal.x\x20>=\x201534491.75\x20&&\x20world_normal.y\x20>=\x2051843.3\x20&&','\x20\x20\x20\x20world_normal.x\x20<=\x203834849.75\x20&&\x20world_normal.y\x20<=\x202780290.75\x20)\x20{','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20-\x201534491.75);','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20/\x202300357.25);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20(world_normal.y\x20-\x2051843.3);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20-(world_normal.y\x20/\x202728447.5);','}','\x20\x20\x20world_normal.z\x20=\x200.0;','\x09vec3\x20blending\x20=\x20world_normal;','\x20\x20\x20vec3\x20uvs\x20=\x20blending;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture2D(u_Texture,\x20uvs.xy);','\x09\x20\x20\x20\x20texColor\x20=\x20texColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20texNormal\x20=\x20texture2D(u_texNormal,\x20uvs.xy).rgb;','\x09\x20\x20\x20\x20texNormal\x20=\x20normalize((texNormal*2.0)\x20-\x201.0);','\x09\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(','\x09\x20\x20\x20\x20\x091.0,\x200.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x201.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x200.0,\x201.0','\x09\x20\x20\x20\x20);','\x09\x20\x20\x20\x20vec3\x20tangent\x20=\x20normalize(texNormal\x20-\x20normal\x20*\x20dot(texNormal,\x20normal));','\x09\x20\x20\x20\x20vec3\x20bitangent\x20=\x20cross(normal,\x20tangent);','\x09\x20\x20\x20\x20TBN\x20=\x20mat3(tangent,\x20bitangent,\x20normal);','\x09\x20\x20\x20\x20lightDir\x20=\x20TBN*lightDir;','\x09\x20\x20\x20\x20normal\x20=\x20texNormal;','\x20\x20\x20}','#endif','\x09float\x20lambertian\x20=\x20max(dot(lightDir,\x20normal),\x200.0);','\x09float\x20specular\x20=\x200.0;','\x09if\x20(lambertian\x20>\x200.0)','\x09{','\x09\x09vec3\x20viewDir\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09\x09vec3\x20halfDir\x20=\x20normalize(lightDir\x20+\x20viewDir);','\x09\x09float\x20specAngle\x20=\x20max(dot(halfDir,\x20normal),\x200.0);','\x09\x09specular\x20=\x20pow(specAngle,\x20shininess\x20*\x20128.0);','\x09}','\x09vec3\x20colorLinear\x20=\x20vAmbientColor\x20+','\x09\x09clamp((lambertian*1.0)\x20*\x20vDirectionalLightColor,\x200.0,\x201.0);','\x09vec3\x20colorGammaCorrected\x20=\x20colorLinear\x20*\x20texColor.rgb;','\x09colorGammaCorrected\x20=\x20clamp(colorGammaCorrected,\x200.0,\x201.0);','\x09colorGammaCorrected\x20=\x20colorGammaCorrected\x20+','\x09\x09vSpecColor\x20*\x20specular\x20*\x200.5;','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(colorGammaCorrected.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x20\x20\x20gl_FragColor\x20=\x20vec4(colorGammaCorrected,\x20baseAlpha);','}']['join']('\x0a')},'BasicUtil':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_normal;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20float\x20fShininess;','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseGraySacle;','void\x20main()\x20{','\x09float\x20shininess\x20=\x20mix(0.1,\x201.0,\x20fShininess);','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09if(normal.z\x20<\x200.0)','\x09\x09normal\x20*=\x20-1.0;','\x09vec3\x20lightDir\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09vec3\x20texColor\x20=\x20vec3(1.0,\x201.0,\x201.0);','\x09texColor\x20=\x20u_color.rgb;','\x09float\x20lambertian\x20=\x20max(dot(lightDir,\x20normal),\x200.0);','\x09float\x20specular\x20=\x200.0;','\x09if\x20(lambertian\x20>\x200.0)','\x09{','\x09\x09vec3\x20viewDir\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09\x09vec3\x20halfDir\x20=\x20normalize(lightDir\x20+\x20viewDir);','\x09\x09float\x20specAngle\x20=\x20max(dot(halfDir,\x20normal),\x200.0);','\x09\x09specular\x20=\x20pow(specAngle,\x20shininess\x20*\x20128.0);','\x09}','\x09vec3\x20colorLinear\x20=\x20vAmbientColor\x20+','\x09\x09clamp((lambertian*1.0)\x20*\x20vDirectionalLightColor,\x200.0,\x201.0);','\x09vec3\x20colorGammaCorrected\x20=\x20colorLinear\x20*\x20texColor.rgb;','\x09colorGammaCorrected\x20=\x20clamp(colorGammaCorrected,\x200.0,\x201.0);','\x09colorGammaCorrected\x20=\x20colorGammaCorrected\x20+','\x09\x09vSpecColor\x20*\x20specular\x20*\x200.5;','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(colorGammaCorrected.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x20\x20\x20gl_FragColor\x20=\x20vec4(colorGammaCorrected,\x20u_color.a);','}']['join']('\x0a')},'PBR':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_normal;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','varying\x20vec2\x20vUV;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPosition;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vGLPosition\x20=\x20vec3(position)/\x20position.w;','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20float\x20ubPerspectiveView;','uniform\x20int\x20ubUsePrevDpeth;','uniform\x20sampler2D\x20u_PrevDpeth;','\x0a#ifdef\x20SHADING_ENVIRONMENT','uniform\x20samplerCube\x20utexCubeMapLod0;','uniform\x20samplerCube\x20utexCubeMapLod1;','uniform\x20float\x20fRoughnessLod;','\x0a#endif','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','uniform\x20float\x20fShininess;','uniform\x20float\x20u_Roughness;','uniform\x20float\x20u_Metallic;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','uniform\x20mat4\x20u_NormalPmatrix;','varying\x20vec2\x20vUV;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPosition;','uniform\x20bool\x20ubUseGraySacle;','const\x20float\x20SH_PI\x20=\x203.14159265359;','const\x20float\x20SH_INV_PI\x20=\x200.31830988618;','vec3\x20fresnelSchlickRoughness(float\x20cosTheta,\x20vec3\x20F0,\x20float\x20roughness)','{','\x09return\x20F0\x20+\x20(max(vec3(1.0\x20-\x20roughness),\x20F0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelSchlick(float\x20cosTheta,\x20vec3\x20F0)','{','\x09\x20return\x20F0\x20+\x20(vec3(1.0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','float\x20DisneyDiffuse(float\x20NdV,\x20float\x20NdL,\x20float\x20LdH,\x20float\x20roughness)','{','\x09float\x20fd90\x20=\x200.5\x20+\x202.0\x20*\x20LdH\x20*\x20LdH\x20*\x20roughness;','\x09float\x20lightScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdL,\x205.0));','\x09float\x20viewScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdV,\x205.0));','\x09return\x20lightScatter\x20*\x20viewScatter;','}','float\x20GGXTerm(float\x20NdH,\x20float\x20roughness)','{','\x09float\x20a2\x20=\x20roughness\x20*\x20roughness\x20*\x20roughness\x20*\x20roughness;','\x09float\x20d\x20=\x20(NdH\x20*\x20a2\x20-\x20NdH)\x20*\x20NdH\x20+\x201.0;','\x09return\x20SH_INV_PI\x20*\x20a2\x20/\x20(d\x20*\x20d\x20+\x200.00000001);','}','float\x20SmithJointGGXVisibilityTerm(float\x20NdotL,\x20float\x20NdotV,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness*roughness;','\x09float\x20lambdaV\x20=\x20NdotL\x20*\x20(NdotV\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09float\x20lambdaL\x20=\x20NdotV\x20*\x20(NdotL\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09return\x200.5\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x200.0001);','}','\x0a#ifdef\x20SHADING_ENVIRONMENT','vec3\x20ComputeEnvColor(float\x20roughness_lod,\x20vec3\x20refl)','{','\x09float\x20a\x20=\x20roughness_lod\x20*\x20roughness_lod;','\x09vec3\x20lod0\x20=\x20textureCube(utexCubeMapLod0,\x20refl).rgb;','\x09vec3\x20lod1\x20=\x20textureCube(utexCubeMapLod1,\x20refl).rgb;','\x09return\x20mix(lod1,\x20lod0,\x20a);','}','\x0a#endif','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','\x20\x20\x20if(ubUsePrevDpeth\x20==\x201)\x20{','\x20\x20\x20\x20\x20\x20\x20vec2\x20depthCoord\x20=\x20vec2(vGLPosition.x\x20*\x200.5\x20+\x200.5,\x20vGLPosition.y\x20*\x200.5\x20+\x200.5);','\x09\x20\x20\x20\x20vec4\x20prevDepth\x20=\x20texture2D(u_PrevDpeth,\x20depthCoord);','\x20\x20\x20\x20\x20\x20\x20float\x20srcD1\x20=\x20(vGLPosition.z\x20*\x200.5\x20+\x200.5)\x20*\x20step(ubPerspectiveView,\x200.5);','\x20\x20\x20\x20\x20\x20\x20float\x20srcD2\x20=\x20vGLPosition.z\x20*\x20step(0.5,\x20ubPerspectiveView);','\x20\x20\x20\x20\x20\x20\x20if(prevDepth.a\x20!=\x200.0)\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(srcD1\x20+\x20srcD2\x20>=\x20prevDepth.a)','\x09\x20\x20\x20\x20\x20\x20\x20\x20{','\x09\x20\x20\x20\x20\x20\x20\x20\x20\x09discard;','\x09\x20\x20\x20\x20\x20\x20\x20\x20\x09return;','\x09\x20\x20\x20\x20\x20\x20\x20\x20}','\x09\x20\x20\x20\x20}','\x20\x20\x20}','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09float\x20shininess\x20=\x20mix(0.1,\x201.0,\x20fShininess);','\x09float\x20roughness\x20=\x20mix(0.1,\x201.0,\x20u_Roughness);','\x09float\x20metallic\x20=\x20mix(0.1,\x200.98,\x20u_Metallic);','\x09float\x20smoothness\x20=\x201.0\x20-\x20roughness;','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09if(normal.z\x20<\x200.0)','\x09\x09normal\x20*=\x20-1.0;','\x09vec3\x20L\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09vec3\x20baseColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture2D(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20baseColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20texNormal\x20=\x20normalize((texture2D(u_texNormal,\x20vUV.xy).rgb\x20*\x202.0)\x20-\x201.0);','\x09\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(','\x09\x20\x20\x20\x20\x091.0,\x200.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x201.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x200.0,\x201.0','\x09\x20\x20\x20\x20);','\x09\x20\x20\x20\x20vec3\x20tangent\x20=\x20normalize(texNormal\x20-\x20normal\x20*\x20dot(texNormal,\x20normal));','\x09\x20\x20\x20\x20vec3\x20bitangent\x20=\x20cross(normal,\x20tangent);','\x09\x20\x20\x20\x20TBN\x20=\x20mat3(tangent,\x20bitangent,\x20normal);','\x09\x20\x20\x20\x20L\x20=\x20TBN*L;','\x09\x20\x20\x20\x20normal\x20=\x20texNormal;','\x20\x20\x20}','\x20\x20\x20vec3\x20V\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09vec3\x20N\x20=\x20normal;','\x09vec3\x20F0\x20=\x20vec3(shininess)\x20*\x200.08;','\x09F0\x20=\x20F0\x20*\x20(1.0\x20-\x20metallic)\x20+\x20baseColor.rgb\x20*\x20metallic;','\x09float\x20NdV\x20=\x20max(0.000,\x20dot(N,\x20V));','\x09float\x20AO\x20=\x201.0;','\x09vec3\x20ambient\x20=\x20vAmbientColor;','\x09vec3\x20diffuse\x20=\x20mix(baseColor.rgb,\x20vec3(0.0),\x20metallic);','\x09vec3\x20kSA\x20=\x20fresnelSchlickRoughness(NdV,\x20F0,\x20roughness);','\x09vec3\x20kDA\x20=\x20vec3(1.0)\x20-\x20kSA;','\x09vec3\x20envSpecular\x20=\x20vec3(0.0);','\x0a#ifdef\x20SHADING_ENVIRONMENT','\x09vec3\x20R\x20=\x20reflect(V\x20*\x20-1.0,\x20N);','\x09vec3\x20envColor\x20=\x20ComputeEnvColor(fRoughnessLod,\x20R);','\x09envSpecular\x20=\x20envColor\x20*\x20kSA;','\x20\x20\x20ambient\x20=\x20envColor;','\x0a#endif','\x09vec3\x20Lo\x20=\x20vec3(0.0);','\x09{','\x09\x09vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x09\x09float\x20specColorAlpha\x20=\x201.0;','\x09\x09float\x20oneMinusReflectivity\x20=\x20specColorAlpha\x20-\x20specColorAlpha\x20*\x20metallic;','\x09\x09vec3\x20diffColor\x20=\x20baseColor.rgb\x20*\x20oneMinusReflectivity;','\x09\x09float\x20diffuseTerm\x20=\x20DisneyDiffuse(NdV,\x20NdL,\x20LdH,\x20roughness)\x20*\x20NdL;','\x09\x09vec3\x20F\x20=\x20fresnelSchlick(HdV,\x20F0);','\x09\x09vec3\x20kS\x20=\x20F;','\x09\x09vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x09\x09float\x20V\x20=\x20SmithJointGGXVisibilityTerm(NdL,\x20NdV,\x20roughness);','\x09\x09float\x20D\x20=\x20GGXTerm(NdH,\x20roughness);','\x09\x09float\x20specularTerm\x20=\x20V\x20*\x20D\x20*\x20SH_PI;','\x09\x09specularTerm\x20=\x20max(0.0,\x20specularTerm\x20*\x20NdL);','\x09\x09float\x20surfaceReduction\x20=\x201.0\x20/\x20(roughness*roughness*roughness*roughness\x20+\x201.0);','\x09\x09if(F0.x\x20+\x20F0.y\x20+\x20F0.z\x20<=\x200.0)','\x09\x09\x09specularTerm\x20*=\x200.0;','\x09\x09float\x20grazingTerm\x20=\x20smoothness\x20*\x20smoothness\x20+\x20(1.0\x20-\x20oneMinusReflectivity);','\x09\x09grazingTerm\x20=\x20max(min(grazingTerm,\x201.0),\x200.0);','\x09\x09Lo\x20=\x20kD\x20*\x20diffColor\x20*\x20vDirectionalLightColor\x20*\x20NdL','\x09\x09\x09+\x20vDirectionalLightColor\x20*\x20vSpecColor\x20*\x20specularTerm\x20*\x20fresnelSchlick(LdH,\x20F0);','\x09}','\x09ambient\x20=\x20(kDA\x20*\x20ambient\x20*\x20diffuse\x20+\x20envSpecular)\x20*\x20AO;','\x09vec3\x20fragColor\x20=\x20ambient','\x09+\x20Lo;','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(fragColor.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20fragColor\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x09gl_FragColor\x20=\x20vec4(fragColor,\x20baseAlpha);','}']['join']('\x0a')},'AnimationPBR':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_normal;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','varying\x20vec2\x20vUV;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPosition;','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec4\x20a_bipedIdx;','attribute\x20vec4\x20a_bipedWeight;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20vec3(0,\x200,\x200);','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20bipedIdx[4];\x20bipedIdx[0]\x20=\x20int(a_bipedIdx.x);\x20bipedIdx[1]\x20=\x20int(a_bipedIdx.y);\x20bipedIdx[2]\x20=\x20int(a_bipedIdx.z);\x20bipedIdx[3]\x20=\x20int(a_bipedIdx.w);','\x20\x20\x20\x20\x20\x20\x20float\x20bipedWeight[4];\x20bipedWeight[0]\x20=\x20a_bipedWeight.x;\x20bipedWeight[1]\x20=\x20a_bipedWeight.y;\x20bipedWeight[2]\x20=\x20a_bipedWeight.z;\x20bipedWeight[3]\x20=\x20a_bipedWeight.w;','\x20\x20\x20\x20\x20\x20\x20for(int\x20w\x20=\x200;\x20w\x20<\x204;\x20w++)\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(bipedWeight[w]\x20==\x200.0)\x20continue;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20bipedIdx[w]\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(a_position,\x201.0);','\x09\x20\x20\x20\x20\x20\x20\x20\x20updatePosition\x20+=\x20vec3(vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w)\x20*\x20bipedWeight[w];','\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20}','\x20\x20\x20else\x20{','\x20\x20\x20\x20\x20\x20\x20updatePosition\x20=\x20a_position;','\x20\x20\x20}','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vGLPosition\x20=\x20vec3(position)\x20/\x20position.w;','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20float\x20ubPerspectiveView;','uniform\x20int\x20ubUsePrevDpeth;','uniform\x20sampler2D\x20u_PrevDpeth;','\x0a#ifdef\x20SHADING_ENVIRONMENT','uniform\x20samplerCube\x20utexCubeMapLod0;','uniform\x20samplerCube\x20utexCubeMapLod1;','uniform\x20float\x20fRoughnessLod;','\x0a#endif','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','uniform\x20float\x20fShininess;','uniform\x20float\x20u_Roughness;','uniform\x20float\x20u_Metallic;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','uniform\x20mat4\x20u_NormalPmatrix;','varying\x20vec2\x20vUV;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPosition;','uniform\x20bool\x20ubUseGraySacle;','const\x20float\x20SH_PI\x20=\x203.14159265359;','const\x20float\x20SH_INV_PI\x20=\x200.31830988618;','vec3\x20fresnelSchlickRoughness(float\x20cosTheta,\x20vec3\x20F0,\x20float\x20roughness)','{','\x09return\x20F0\x20+\x20(max(vec3(1.0\x20-\x20roughness),\x20F0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelSchlick(float\x20cosTheta,\x20vec3\x20F0)','{','\x09\x20return\x20F0\x20+\x20(vec3(1.0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','float\x20DisneyDiffuse(float\x20NdV,\x20float\x20NdL,\x20float\x20LdH,\x20float\x20roughness)','{','\x09float\x20fd90\x20=\x200.5\x20+\x202.0\x20*\x20LdH\x20*\x20LdH\x20*\x20roughness;','\x09float\x20lightScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdL,\x205.0));','\x09float\x20viewScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdV,\x205.0));','\x09return\x20lightScatter\x20*\x20viewScatter;','}','float\x20GGXTerm(float\x20NdH,\x20float\x20roughness)','{','\x09float\x20a2\x20=\x20roughness\x20*\x20roughness\x20*\x20roughness\x20*\x20roughness;','\x09float\x20d\x20=\x20(NdH\x20*\x20a2\x20-\x20NdH)\x20*\x20NdH\x20+\x201.0;','\x09return\x20SH_INV_PI\x20*\x20a2\x20/\x20(d\x20*\x20d\x20+\x200.00000001);','}','float\x20SmithJointGGXVisibilityTerm(float\x20NdotL,\x20float\x20NdotV,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness*roughness;','\x09float\x20lambdaV\x20=\x20NdotL\x20*\x20(NdotV\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09float\x20lambdaL\x20=\x20NdotV\x20*\x20(NdotL\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09return\x200.5\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x200.0001);','}','\x0a#ifdef\x20SHADING_ENVIRONMENT','vec3\x20ComputeEnvColor(float\x20roughness_lod,\x20vec3\x20refl)','{','\x09float\x20a\x20=\x20roughness_lod\x20*\x20roughness_lod;','\x09vec3\x20lod0\x20=\x20textureCube(utexCubeMapLod0,\x20refl).rgb;','\x09vec3\x20lod1\x20=\x20textureCube(utexCubeMapLod1,\x20refl).rgb;','\x09return\x20mix(lod1,\x20lod0,\x20a);','}','\x0a#endif','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09float\x20shininess\x20=\x20mix(0.1,\x201.0,\x20fShininess);','\x09float\x20roughness\x20=\x20mix(0.1,\x201.0,\x20u_Roughness);','\x09float\x20metallic\x20=\x20mix(0.1,\x200.98,\x20u_Metallic);','\x09float\x20smoothness\x20=\x201.0\x20-\x20roughness;','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09vec3\x20L\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09vec3\x20baseColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture2D(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20baseColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20texNormal\x20=\x20normalize((texture2D(u_texNormal,\x20vUV.xy).rgb\x20*\x202.0)\x20-\x201.0);','\x09\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(','\x09\x20\x20\x20\x20\x091.0,\x200.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x201.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x200.0,\x201.0','\x09\x20\x20\x20\x20);','\x09\x20\x20\x20\x20vec3\x20tangent\x20=\x20normalize(texNormal\x20-\x20normal\x20*\x20dot(texNormal,\x20normal));','\x09\x20\x20\x20\x20vec3\x20bitangent\x20=\x20cross(normal,\x20tangent);','\x09\x20\x20\x20\x20TBN\x20=\x20mat3(tangent,\x20bitangent,\x20normal);','\x09\x20\x20\x20\x20L\x20=\x20TBN*L;','\x09\x20\x20\x20\x20normal\x20=\x20texNormal;','\x20\x20\x20}','\x20\x20\x20vec3\x20V\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09vec3\x20N\x20=\x20normal;','\x09vec3\x20F0\x20=\x20vec3(shininess)\x20*\x200.08;','\x09F0\x20=\x20F0\x20*\x20(1.0\x20-\x20metallic)\x20+\x20baseColor.rgb\x20*\x20metallic;','\x09float\x20NdV\x20=\x20max(0.000,\x20dot(N,\x20V));','\x09float\x20AO\x20=\x201.0;','\x09vec3\x20ambient\x20=\x20vAmbientColor;','\x09vec3\x20diffuse\x20=\x20mix(baseColor.rgb,\x20vec3(0.0),\x20metallic);','\x09vec3\x20kSA\x20=\x20fresnelSchlickRoughness(NdV,\x20F0,\x20roughness);','\x09vec3\x20kDA\x20=\x20vec3(1.0)\x20-\x20kSA;','\x09vec3\x20envSpecular\x20=\x20vec3(0.0);','\x0a#ifdef\x20SHADING_ENVIRONMENT','\x09vec3\x20R\x20=\x20reflect(V\x20*\x20-1.0,\x20N);','\x09vec3\x20envColor\x20=\x20ComputeEnvColor(fRoughnessLod,\x20R);','\x09envSpecular\x20=\x20envColor\x20*\x20kSA;','\x20\x20\x20ambient\x20=\x20envColor;','\x0a#endif','\x09vec3\x20Lo\x20=\x20vec3(0.0);','\x09{','\x09\x09vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x09\x09float\x20specColorAlpha\x20=\x201.0;','\x09\x09float\x20oneMinusReflectivity\x20=\x20specColorAlpha\x20-\x20specColorAlpha\x20*\x20metallic;','\x09\x09vec3\x20diffColor\x20=\x20baseColor.rgb\x20*\x20oneMinusReflectivity;','\x09\x09float\x20diffuseTerm\x20=\x20DisneyDiffuse(NdV,\x20NdL,\x20LdH,\x20roughness)\x20*\x20NdL;','\x09\x09vec3\x20F\x20=\x20fresnelSchlick(HdV,\x20F0);','\x09\x09vec3\x20kS\x20=\x20F;','\x09\x09vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x09\x09float\x20V\x20=\x20SmithJointGGXVisibilityTerm(NdL,\x20NdV,\x20roughness);','\x09\x09float\x20D\x20=\x20GGXTerm(NdH,\x20roughness);','\x09\x09float\x20specularTerm\x20=\x20V\x20*\x20D\x20*\x20SH_PI;','\x09\x09specularTerm\x20=\x20max(0.0,\x20specularTerm\x20*\x20NdL);','\x09\x09float\x20surfaceReduction\x20=\x201.0\x20/\x20(roughness*roughness*roughness*roughness\x20+\x201.0);','\x09\x09if(F0.x\x20+\x20F0.y\x20+\x20F0.z\x20<=\x200.0)','\x09\x09\x09specularTerm\x20*=\x200.0;','\x09\x09float\x20grazingTerm\x20=\x20smoothness\x20*\x20smoothness\x20+\x20(1.0\x20-\x20oneMinusReflectivity);','\x09\x09grazingTerm\x20=\x20max(min(grazingTerm,\x201.0),\x200.0);','\x09\x09Lo\x20=\x20kD\x20*\x20diffColor\x20*\x20vDirectionalLightColor\x20*\x20NdL','\x09\x09\x09+\x20vDirectionalLightColor\x20*\x20vSpecColor\x20*\x20specularTerm\x20*\x20fresnelSchlick(LdH,\x20F0);','\x09}','\x09ambient\x20=\x20(kDA\x20*\x20ambient\x20*\x20diffuse\x20+\x20envSpecular)\x20*\x20AO;','\x09vec3\x20fragColor\x20=\x20ambient','\x09+\x20Lo;','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(fragColor.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20fragColor\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x09gl_FragColor\x20=\x20vec4(fragColor,\x20baseAlpha);','}']['join']('\x0a')},'Picking':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec4\x20a_color;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20float\x20u_PointSize;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','varying\x20vec4\x20vColor;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x20\x20\x20vColor\x20=\x20vec4(float(a_color.x)\x20/\x20255.0,\x20float(a_color.y)\x20/\x20255.0,\x20float(a_color.z)\x20/\x20255.0,\x20float(a_color.w)\x20/\x20255.0);','\x20\x20\x20gl_PointSize\x20=\x20u_PointSize;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','varying\x20vec3\x20vVertPos;','varying\x20vec4\x20vColor;','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','\x20\x20\x20gl_FragColor\x20=\x20vColor;','}']['join']('\x0a')},'Texture2D':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20vec4\x20u_color;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20tex\x20=\x20texture2D(u_Texture,\x20vUV.xy);','\x20\x20\x20gl_FragColor\x20=\x20u_color\x20*\x20tex;','}']['join']('\x0a')},'Texture2DColor':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec4\x20a_color;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','varying\x20vec4\x20vColor;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','\x20\x20\x20vColor\x20=\x20a_color;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20vec4\x20u_color;','varying\x20vec2\x20vUV;','varying\x20vec4\x20vColor;','void\x20main()\x20{','\x09vec4\x20tex\x20=\x20texture2D(u_Texture,\x20vUV.xy);','\x20\x20\x20gl_FragColor\x20=\x20u_color\x20*\x20vColor\x20*\x20tex;','}']['join']('\x0a')},'Basic2D':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20float\x20u_PointSize;','uniform\x20mat4\x20u_MVPmatrix;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20gl_PointSize\x20=\x20u_PointSize;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec4\x20u_color;','void\x20main()\x20{','\x20\x20\x20gl_FragColor\x20=\x20u_color;','}']['join']('\x0a')},'AnimationBasic2D':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','varying\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec4\x20a_bipedIdx;','attribute\x20vec4\x20a_bipedWeight;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20vec3(0,\x200,\x200);','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20bipedIdx[4];\x20bipedIdx[0]\x20=\x20int(a_bipedIdx.x);\x20bipedIdx[1]\x20=\x20int(a_bipedIdx.y);\x20bipedIdx[2]\x20=\x20int(a_bipedIdx.z);\x20bipedIdx[3]\x20=\x20int(a_bipedIdx.w);','\x20\x20\x20\x20\x20\x20\x20float\x20bipedWeight[4];\x20bipedWeight[0]\x20=\x20a_bipedWeight.x;\x20bipedWeight[1]\x20=\x20a_bipedWeight.y;\x20bipedWeight[2]\x20=\x20a_bipedWeight.z;\x20bipedWeight[3]\x20=\x20a_bipedWeight.w;','\x20\x20\x20\x20\x20\x20\x20for(int\x20w\x20=\x200;\x20w\x20<\x204;\x20w++)\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(bipedWeight[w]\x20==\x200.0)\x20continue;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20bipedIdx[w]\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(a_position,\x201.0);','\x09\x20\x20\x20\x20\x20\x20\x20\x20updatePosition\x20+=\x20vec3(vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w)\x20*\x20bipedWeight[w];','\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20}','\x20\x20\x20else\x20{','\x20\x20\x20\x20\x20\x20\x20updatePosition\x20=\x20a_position;','\x20\x20\x20}','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20vec4\x20u_color;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09gl_FragColor\x20=\x20u_color;','}']['join']('\x0a')},'Basic2DColor':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec4\x20a_color;','uniform\x20float\x20u_PointSize;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec4\x20vColor;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20gl_PointSize\x20=\x20u_PointSize;','\x20\x20\x20vColor\x20=\x20a_color;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','varying\x20vec4\x20vColor;','void\x20main()\x20{','\x20\x20\x20gl_FragColor\x20=\x20vColor;','}']['join']('\x0a')},'Basic3D':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20float\x20u_PointSize;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20gl_PointSize\x20=\x20u_PointSize;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec4\x20u_color;','varying\x20vec3\x20vVertPos;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x20\x20\x20gl_FragColor\x20=\x20u_color;','}']['join']('\x0a')},'BasicLines2D':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_nextPosition;','attribute\x20vec3\x20a_normal;','uniform\x20float\x20u_Tickness;','uniform\x20vec2\x20u_Resolution;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_ProjectionMatrix;','void\x20main()\x20{','\x20\x20\x20float\x20miter\x20=\x201.0;','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','\x20\x20\x20updatePosition\x20=\x20updatePosition\x20+\x20(a_normal\x20*\x20u_Tickness\x20*\x200.5\x20*\x20miter);','\x09vec4\x20vPos\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20vPos;','\x20\x20\x20return;','\x09vec4\x20vPosition\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20vec4\x20vNextPosition\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position\x20+\x20(a_normal\x20*\x20u_Tickness\x20*\x200.5\x20*\x20miter),\x201.0);','\x20\x20\x20vec2\x20v1\x20=\x20vec2(vPosition.xy\x20/\x20vPosition.w);','\x20\x20\x20vec2\x20v2\x20=\x20vec2(vNextPosition.xy\x20/\x20vNextPosition.w);','\x20\x20\x20float\x20aspect\x20=\x20u_Resolution.x\x20/\x20u_Resolution.y;','\x20\x20\x20v1.x\x20/=\x20aspect;','\x20\x20\x20v2.x\x20/=\x20aspect;','\x20\x20\x20float\x20len\x20=\x20length(v2\x20-\x20v1);','\x20\x20\x20if(len\x20>\x200.0)\x20{','\x20\x20\x20vec2\x20vDir\x20=\x20normalize(v2\x20-\x20v1);','\x20\x20\x20vec2\x20normal\x20=\x20vec2(-vDir.y,\x20vDir.x);','\x20\x20\x20normal\x20=\x20normal\x20*\x20u_Tickness\x20*\x200.5;','\x20\x20\x20normal.x\x20/=\x20aspect;','\x20\x20\x20vec4\x20offset\x20=\x20vec4(normal,\x200.0,\x200.0);','\x20\x20\x20vPosition\x20=\x20vPosition\x20+\x20offset;','\x20\x20\x20}','\x20\x20\x20gl_Position\x20=\x20vPosition;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec4\x20u_color;','uniform\x20vec2\x20u_Resolution;','float\x20DistToLine(vec2\x20pt1,\x20vec2\x20pt2,\x20vec2\x20vPt)','{','\x20\x20\x20\x20vec2\x20lineDir\x20=\x20pt2\x20-\x20pt1;','\x20\x20\x20\x20vec2\x20perpDir\x20=\x20vec2(lineDir.y,\x20-lineDir.x);','\x20\x20\x20\x20vec2\x20dirToPt1\x20=\x20pt1\x20-\x20vPt;','\x20\x20\x20\x20return\x20abs(dot(normalize(perpDir),\x20dirToPt1));','}','void\x20main()\x20{','\x20\x20\x20gl_FragColor\x20=\x20u_color;','}']['join']('\x0a')},'FXAA':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec2\x20uTexScale;','uniform\x20sampler2D\x20u_Texture;','varying\x20vec2\x20vUV;','const\x20float\x20FXAA_SPAN_MAX\x20=\x208.0;','const\x20float\x20FXAA_REDUCE_MUL\x20=\x201.0\x20/\x208.0;','const\x20float\x20FXAA_REDUCE_MIN\x20=\x201.0\x20/\x20128.0;','void\x20main()\x20{','\x09vec3\x20rgbNW\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20(vec2(-1.0,-1.0)\x20/\x20uTexScale)).rgb;','\x09vec3\x20rgbNE\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20(vec2(1.0,-1.0)\x20/\x20uTexScale)).rgb;','\x09vec3\x20rgbSW\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20(vec2(-1.0,1.0)\x20/\x20uTexScale)).rgb;','\x09vec3\x20rgbSE\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20(vec2(1.0,1.0)\x20/\x20uTexScale)).rgb;','\x09vec3\x20rgbM\x20=\x20texture2D(u_Texture,\x20vUV).rgb;','\x09vec3\x20luma\x20=\x20vec3(0.299,\x200.587,\x200.114);','\x09float\x20lumaNW\x20=\x20dot(rgbNW,\x20luma);','\x09float\x20lumaNE\x20=\x20dot(rgbNE,\x20luma);','\x09float\x20lumaSW\x20=\x20dot(rgbSW,\x20luma);','\x09float\x20lumaSE\x20=\x20dot(rgbSE,\x20luma);','\x09float\x20lumaM\x20=\x20dot(rgbM,\x20\x20luma);','\x09float\x20lumaMin\x20=\x20min(lumaM,\x20min(min(lumaNW,\x20lumaNE),\x20min(lumaSW,\x20lumaSE)));','\x09float\x20lumaMax\x20=\x20max(lumaM,\x20max(max(lumaNW,\x20lumaNE),\x20max(lumaSW,\x20lumaSE)));','\x09vec2\x20dir;','\x09dir.x\x20=\x20-((lumaNW\x20+\x20lumaNE)\x20-\x20(lumaSW\x20+\x20lumaSE));','\x09dir.y\x20=\x20((lumaNW\x20+\x20lumaSW)\x20-\x20(lumaNE\x20+\x20lumaSE));','\x09float\x20dirReduce\x20=\x20max(','\x09\x09(lumaNW\x20+\x20lumaNE\x20+\x20lumaSW\x20+\x20lumaSE)\x20*\x20(0.25\x20*\x20FXAA_REDUCE_MUL),','\x09\x09FXAA_REDUCE_MIN);','\x09float\x20rcpDirMin\x20=\x201.0\x20/\x20(min(abs(dir.x),\x20abs(dir.y))\x20+\x20dirReduce);','\x09dir\x20=\x20min(vec2(FXAA_SPAN_MAX,\x20\x20FXAA_SPAN_MAX),','\x09\x09max(vec2(-FXAA_SPAN_MAX,\x20-FXAA_SPAN_MAX),','\x09\x09\x09dir\x20*\x20rcpDirMin))\x20/\x20uTexScale;','\x09vec3\x20rgbA\x20=\x20(1.0\x20/\x202.0)\x20*\x20(','\x09\x09texture2D(u_Texture,\x20vUV.xy\x20+\x20dir\x20*\x20(1.0\x20/\x203.0\x20-\x200.5)).rgb\x20+','\x09\x09texture2D(u_Texture,\x20vUV.xy\x20+\x20dir\x20*\x20(2.0\x20/\x203.0\x20-\x200.5)).rgb);','\x09vec3\x20rgbB\x20=\x20rgbA\x20*\x20(1.0\x20/\x202.0)\x20+\x20(1.0\x20/\x204.0)\x20*\x20(','\x09\x09texture2D(u_Texture,\x20vUV.xy\x20+\x20dir\x20*\x20(0.0\x20/\x203.0\x20-\x200.5)).rgb\x20+','\x09\x09texture2D(u_Texture,\x20vUV.xy\x20+\x20dir\x20*\x20(3.0\x20/\x203.0\x20-\x200.5)).rgb);','\x09float\x20lumaB\x20=\x20dot(rgbB,\x20luma);','\x09float\x20alpha\x20=\x20texture2D(u_Texture,\x20vUV).a;','\x09if\x20((lumaB\x20<\x20lumaMin)\x20||\x20(lumaB\x20>\x20lumaMax))\x20{','\x09\x09gl_FragColor\x20=\x20vec4(rgbA.rgb,\x20alpha);','\x09}','\x09else\x20{','\x09\x09gl_FragColor\x20=\x20vec4(rgbB.rgb,\x20alpha);','\x09}','}']['join']('\x0a')},'Depth':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPosition;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vGLPosition\x20=\x20vec3(position)\x20/\x20position.w;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4.xyz)\x20/\x20vertPos4.w;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPosition;','uniform\x20float\x20ubPerspectiveView;','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','\x20\x20\x20const\x20float\x20DEPTH_MAX\x20=\x2016777215.0;','\x20\x20\x20float\x20d1\x20=\x20(vGLPosition.z\x20*\x200.5\x20+\x200.5)\x20*\x20step(ubPerspectiveView,\x200.5);','\x20\x20\x20float\x20d2\x20=\x20vGLPosition.z\x20*\x20step(0.5,\x20ubPerspectiveView);','\x20\x20\x20float\x20d\x20=\x20floor((d1+d2)\x20*\x20DEPTH_MAX);','\x20\x20\x20float\x20depth1\x20=\x20shMod(d,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth2\x20=\x20shMod(d\x20/\x20256.0,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth3\x20=\x20shMod((d\x20/\x20256.0)\x20/\x20256.0,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth4\x20=\x20d1\x20+\x20d2;','\x20\x20\x20gl_FragColor\x20=\x20vec4(depth1,\x20depth2,\x20depth3,\x20depth4);','}']['join']('\x0a')},'Edge':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20vec2\x20uTexScale;','uniform\x20vec4\x20u_color;','varying\x20vec2\x20vUV;','void\x20main()\x20{','vec2\x20invSize\x20=\x20vec2(\x201.0\x20/\x20uTexScale.x,\x201.0\x20/\x20uTexScale.y);','float\x20dxtex\x20=\x20invSize.x;','float\x20dytex\x20=\x20invSize.y;','\x09mat3\x20matEdgeX\x20=\x20mat3(','\x09\x090.0,\x20-1.0,\x200.0,','\x09\x090.0,\x201.0,\x200.0,','\x09\x090.0,\x200.0,\x200.0','\x09);','\x09mat3\x20matEdgeY\x20=\x20mat3(','\x09\x090.0,\x200.0,\x200.0,','\x09\x09-1.0,\x201.0,\x200.0,','\x09\x090.0,\x200.0,\x200.0','\x09);','mat3\x20matSample\x20=\x20mat3(','\x090.0,\x200.0,\x200.0,','\x090.0,\x200.0,\x200.0,','\x090.0,\x200.0,\x200.0',');','for\x20(int\x20i\x20=\x20-1;\x20i<2;\x20i++)','{','\x09for\x20(int\x20j\x20=\x20-1;\x20j<2;\x20j++)','\x09{','\x09\x09vec3\x20sample\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20vec2(float(i)\x20*\x20dxtex,\x20float(j)\x20*\x20dytex)).rgb;','\x09\x09matSample[i\x20+\x201][j\x20+\x201]\x20=\x20length(sample);','\x09}','}','float\x20gx\x20=\x20dot(matEdgeX[0],\x20matSample[0])\x20+\x20dot(matEdgeX[1],\x20matSample[1])\x20+\x20dot(matEdgeX[2],\x20matSample[2]);','float\x20gy\x20=\x20dot(matEdgeY[0],\x20matSample[0])\x20+\x20dot(matEdgeY[1],\x20matSample[1])\x20+\x20dot(matEdgeY[2],\x20matSample[2]);','float\x20g\x20=\x20sqrt(pow(gx,\x202.0)\x20+\x20pow(gy,\x202.0));','if(\x20g\x20>\x200.0){','\x20\x20\x20gl_FragColor\x20=\x20u_color;','}','else','{','\x09gl_FragColor\x20=\x20vec4(0.0,\x200.0,\x200.0,\x200.0);','}','}']['join']('\x0a')},'Background':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec4\x20a_color;','varying\x20vec4\x20vColor;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vColor\x20=\x20a_color;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','varying\x20vec4\x20vColor;','void\x20main()\x20{','\x20\x20\x20gl_FragColor\x20=\x20vColor;','}']['join']('\x0a')},'SkyBox':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vVertPos\x20=\x20a_position;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20samplerCube\x20utexCubeMap;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec3\x20N\x20=\x20normalize(vVertPos);','\x09vec4\x20color\x20=\x20textureCube(utexCubeMap,\x20N);','\x09gl_FragColor\x20=\x20color;','}']['join']('\x0a')},'PreFilteredEnvironment':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vVertPos\x20=\x20a_position;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20samplerCube\x20utexCubeMap;','uniform\x20float\x20fRoughness;','varying\x20vec3\x20vVertPos;','const\x20float\x20PI\x20=\x203.14159265359;','float\x20VanDerCorpus(int\x20n,\x20int\x20base)','{','\x09float\x20invBase\x20=\x201.0\x20/\x20float(base);','\x09float\x20denom\x20=\x201.0;','\x09float\x20result\x20=\x200.0;','\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x2032;\x20++i)','\x09{\x20','\x09\x09if\x20(n\x20>\x200)','\x09\x09{','\x09\x09\x09denom\x20=\x20mod(float(n),\x202.0);','\x09\x09\x09result\x20+=\x20denom\x20*\x20invBase;','\x09\x09\x09invBase\x20=\x20invBase\x20/\x202.0;','\x09\x09\x09n\x20=\x20int(float(n)\x20/\x202.0);','\x09\x09}','\x09}','\x09return\x20result;','}','vec2\x20HammersleyNoBitOps(int\x20i,\x20int\x20N)','{','\x09return\x20vec2(float(i)/float(N),\x20VanDerCorpus(i,\x202));','}','vec3\x20importanceSampleGGX(vec2\x20Xi,\x20vec3\x20N,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness\x20*\x20roughness;','\x09float\x20phi\x20=\x202.0\x20*\x20PI\x20*\x20Xi.x;','\x09float\x20cosTheta\x20=\x20sqrt((1.0\x20-\x20Xi.y)\x20/\x20(1.0\x20+\x20(a\x20*\x20a\x20-\x201.0)\x20*\x20Xi.y));','\x09float\x20sinTheta\x20=\x20sqrt(1.0\x20-\x20cosTheta\x20*\x20cosTheta);','\x09vec3\x20H;','\x09H.x\x20=\x20cos(phi)\x20*\x20sinTheta;','\x09H.y\x20=\x20sin(phi)\x20*\x20sinTheta;','\x09H.z\x20=\x20cosTheta;','\x09vec3\x20up\x20=\x20abs(N.z)\x20<\x200.999\x20?\x20vec3(0.0,\x200.0,\x201.0)\x20:\x20vec3(1.0,\x200.0,\x200.0);','\x09vec3\x20tangent\x20=\x20normalize(cross(up,\x20N));','\x09vec3\x20bitangent\x20=\x20cross(N,\x20tangent);','\x09vec3\x20sampleVec\x20=\x20H.x\x20*\x20tangent\x20+\x20H.y\x20*\x20bitangent\x20+\x20H.z\x20*\x20N;','\x09return\x20normalize(sampleVec);','}','void\x20main()','{','\x09vec3\x20N\x20=\x20normalize(vVertPos);','\x09vec3\x20V\x20=\x20N;','\x09const\x20int\x20sampleCount\x20=\x201024;','\x09float\x20totalWeight\x20=\x200.0;','\x09vec3\x20prefilteredColor\x20=\x20vec3(0.0,\x200.0,\x200.0);','\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20sampleCount;\x20++i)','\x09{','\x09\x09vec2\x20Xi\x20=\x20HammersleyNoBitOps(i,\x20sampleCount);','\x09\x09vec3\x20H\x20=\x20importanceSampleGGX(Xi,\x20N,\x20fRoughness);','\x09\x09vec3\x20L\x20=\x20normalize(2.0\x20*\x20dot(V,\x20H)\x20*\x20H\x20-\x20V);','\x09\x09float\x20NdotL\x20=\x20max(dot(N,\x20L),\x200.0);','\x09\x09if\x20(NdotL\x20>\x200.0);','\x09\x09{','\x09\x09\x09prefilteredColor\x20+=\x20textureCube(utexCubeMap,\x20L).rgb\x20*\x20NdotL;','\x09\x09\x09totalWeight\x20+=\x20NdotL;','\x09\x09}','\x09}','\x09prefilteredColor\x20=\x20prefilteredColor\x20/\x20totalWeight;','\x09gl_FragColor\x20=\x20vec4(prefilteredColor.rgb,\x201.0);','}']['join']('\x0a')},'FramebufferMarge':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20sampler2D\x20u_DepthTexture;','uniform\x20sampler2D\x20u_margeTexture;','uniform\x20sampler2D\x20u_margeDepthTexture;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09float\x20depth0\x20=\x20texture2D(u_DepthTexture,\x20vUV.xy).r;','\x09float\x20depth1\x20=\x20texture2D(u_margeDepthTexture,\x20vUV.xy).r;','if(depth0\x20<\x20depth1)\x20{','\x20\x20\x20\x20\x20gl_FragColor\x20=\x20texture2D(u_Texture,\x20vUV.xy);','}\x20else\x20{','\x20\x20\x20\x20\x20gl_FragColor\x20=\x20texture2D(u_margeTexture,\x20vUV.xy);','}','}']['join']('\x0a')},'Marge':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20sampler2D\x20u_margeTexture;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x20\x20\x20\x20\x20vec4\x20col1\x20=\x20texture2D(u_Texture,\x20vUV.xy);','\x20\x20\x20\x20\x20vec4\x20col2\x20=\x20texture2D(u_margeTexture,\x20vUV.xy);','\x20\x20\x20\x20\x20gl_FragColor\x20=\x20col1\x20*\x20col2;','}']['join']('\x0a')},'Blur':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20vec2\x20uTexScale;','uniform\x20int\x20uBlurType;','uniform\x20vec2\x20uDirection;','uniform\x20float\x20uSigma;','varying\x20vec2\x20vUV;','vec4\x20ssaoBlur_v2(vec2\x20uv)\x20{','\x20\x20\x20\x20vec4\x20result\x20=\x200.0;','\x20\x20\x20\x20vec2\x20texelSize\x20=\x201.0\x20/\x20uTexScale;','\x20\x20\x20\x20for(int\x20x\x20=\x20-1;\x20x<\x201;\x20++x)\x20','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20y\x20=\x20-1;\x20y\x20<\x201;\x20++y)','\x20\x20\x20\x20\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20offset\x20=\x20vec2(float(x),\x20float(y))\x20*\x20texelSize;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20+=\x20texture2D(u_Texture,\x20uv\x20+\x20offset);','\x20\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20\x20}','\x20\x20\x20\x20return\x20result\x20/\x209.0;','}','vec4\x20Gaussian_Blur_v2(vec2\x20uv)\x20{','\x20\x20\x20\x20vec4\x20color\x20=\x20vec4(0.0);','\x20\x20\x20\x20vec2\x20off1\x20=\x20vec2(uSigma\x20*\x201.33)\x20*\x20uDirection;','\x20\x20\x20\x20vec2\x20off2\x20=\x20vec2(uSigma\x20*\x203.23)\x20*\x20uDirection;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv)\x20*\x200.2270270270;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20+\x20(off1\x20/\x20uTexScale))\x20*\x200.3162162162;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20-\x20(off1\x20/\x20uTexScale))\x20*\x200.3162162162;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20+\x20(off2\x20/\x20uTexScale))\x20*\x200.0702702703;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20-\x20(off2\x20/\x20uTexScale))\x20*\x200.0702702703;','\x20\x20\x20\x20return\x20color;','}','void\x20main()\x20{','\x20\x20\x20vec4\x20col;','\x20\x20\x20if(uBlurType\x20==\x200)','\x20\x20\x20\x20\x20\x20col\x20=\x20Gaussian_Blur_v2(vUV);','\x20\x20\x20else\x20if(uBlurType\x20==\x201)','\x20\x20\x20\x20\x20\x20col\x20=\x20ssaoBlur_v2(vUV);','\x20\x20\x20gl_FragColor\x20=\x20col;','}']['join']('\x0a')},'SSAO_v3':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_PositionTexture;','uniform\x20sampler2D\x20u_NormalTexture;','uniform\x20sampler2D\x20u_NoiseTexture;','uniform\x20mat4\x20u_ProjectionInverseMatrix;','uniform\x20mat4\x20u_ProjectionMatrix;','uniform\x20vec2\x20uNoiseTexScale;','uniform\x20vec3\x20uSamples[128];','uniform\x20float\x20uSigma;','uniform\x20float\x20uBias;','#define\x20kernelSize\x20128','varying\x20vec2\x20vUV;','vec3\x20getPosition(vec2\x20fragCoord)\x20{','\x20\x20\x20vec4\x20pos4\x20=\x20texture2D(u_PositionTexture,\x20fragCoord);','\x20\x20\x20pos4.xyz\x20=\x20pos4.xyz\x20*\x202.0\x20-\x201.0;','\x09pos4\x20=\x20u_ProjectionInverseMatrix\x20*\x20pos4;','\x20\x20\x20vec3\x20pos\x20=\x20vec3(pos4.xyz)\x20/\x20pos4.w;','\x09return\x20pos;','\x20\x20\x20\x20return\x20vec3(pos4.xyz);','}','void\x20main()\x20{','\x20\x20\x20\x20vec2\x20fragCoord\x20=\x20vUV;','\x20\x20\x20\x20vec3\x20position\x20=\x20getPosition(fragCoord);','\x20\x20\x20\x20vec3\x20normal\x20=\x20texture2D(u_NormalTexture,\x20fragCoord).xyz;','\x20\x20\x20normal\x20=\x20normalize(normal\x20*\x202.0\x20-\x201.0);','\x20\x20\x20\x20vec3\x20rand\x20=\x20texture2D(u_NoiseTexture,\x20fragCoord\x20*\x20uNoiseTexScale).xyz;','\x20\x20\x20\x20rand\x20=\x20rand\x20*\x202.0\x20-\x201.0;','\x20\x20\x20\x20rand\x20=\x20normalize(rand);','\x20\x20\x20vec3\x20tangent\x20=\x20normalize(rand\x20-\x20normal\x20*\x20dot(rand,\x20normal));','\x20\x20\x20vec3\x20bitangent\x20=\x20cross(normal,\x20tangent);','\x20\x20\x20mat3\x20TBN\x20=\x20mat3(tangent,\x20bitangent,\x20normal);\x20','\x20\x20\x20\x20float\x20kernelRadius\x20=\x20uSigma;','\x20\x20\x20float\x20occlusion\x20=\x200.0;','\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x20kernelSize;\x20++i)','\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20vec3\x20samplePos\x20=\x20TBN\x20*\x20uSamples[i];','\x20\x20\x20\x20\x20\x20\x20samplePos\x20=\x20position\x20+\x20samplePos\x20*\x20kernelRadius;','\x20\x20\x20\x20\x20\x20\x20vec4\x20offset\x20=\x20vec4(samplePos,\x201.0);','\x20\x20\x20\x20\x20\x20\x20offset\x20\x20\x20\x20\x20\x20=\x20u_ProjectionMatrix\x20*\x20offset;','\x20\x20\x20\x20\x20\x20\x20offset.xyz\x20/=\x20offset.w;','\x20\x20\x20\x20\x20\x20\x20offset.xyz\x20=\x20offset.xyz\x20*\x200.5\x20+\x200.5;','\x20\x20\x20\x20\x20\x20\x20vec3\x20sampleDepth\x20=\x20getPosition(offset.xy);','\x20\x20\x20\x20\x20\x20\x20vec4\x20screenSampleDepth\x20=\x20u_ProjectionMatrix\x20*\x20vec4(sampleDepth,\x201.0);','\x20\x20\x20\x20\x20\x20\x20float\x20rangeCheck\x20=\x20smoothstep(0.0,\x201.0,\x20kernelRadius\x20/\x20abs(position.z\x20-\x20sampleDepth.z));','\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20(sampleDepth.z\x20>=\x20samplePos.z\x20+\x20uBias\x20?\x201.0\x20:\x200.0)\x20*\x20rangeCheck;','\x20\x20\x20\x20}','\x20\x20\x20occlusion\x20=\x201.0\x20-\x20(occlusion\x20/\x20float(kernelSize));','\x20\x20\x20gl_FragColor\x20=\x20vec4(occlusion);','}']['join']('\x0a')},'Texture2D_SSAO':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20sampler2D\x20u_subTexture;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x20\x20\x20\x20vec2\x20fragCoord\x20=\x20vUV;','\x20\x20\x20\x20vec4\x20fragColor\x20=\x20texture2D(u_Texture,\x20fragCoord);','\x20\x20\x20\x20vec4\x20sub\x20=\x20texture2D(u_subTexture,\x20fragCoord);','\x20\x20\x20vec3\x20color\x20=\x20fragColor.rgb*(0.7\x20+\x20sub.r\x20*\x200.3);','\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(color,\x20fragColor.a);','}']['join']('\x0a')},'Normal':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_normal;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20\x20\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x20\x20\x20normal\x20=\x20normal\x20*\x200.5\x20+\x200.5;','\x20\x20\x20gl_FragColor\x20=\x20vec4(normal,\x201.0);','}']['join']('\x0a')},'Position':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','varying\x20vec3\x20vVertPos;','varying\x20vec4\x20vGLPos;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vGLPos\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','varying\x20vec3\x20vVertPos;','varying\x20vec4\x20vGLPos;','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','\x20\x20\x20vec4\x20posColor\x20=\x20vGLPos;','\x20\x20\x20posColor\x20=\x20posColor\x20*\x200.5\x20+\x200.5;','\x20\x20\x20gl_FragColor\x20=\x20posColor;','}']['join']('\x0a')},'PerlinNoise':{'vertex':['attribute\x20vec3\x20a_position;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec2\x20u_Resolution;','uniform\x20float\x20fTimer;','vec3\x20mod289(vec3\x20x)\x20{','\x20\x20\x20\x20return\x20x\x20-\x20floor(x\x20*\x20(1.0\x20/\x20289.0))\x20*\x20289.0;','}','vec4\x20mod289(vec4\x20x)\x20{','\x20\x20\x20\x20return\x20x\x20-\x20floor(x\x20*\x20(1.0\x20/\x20289.0))\x20*\x20289.0;','}','vec4\x20permute(vec4\x20x)\x20{','\x20\x20\x20\x20return\x20mod289(((x*34.0)+10.0)*x);','}','vec4\x20taylorInvSqrt(vec4\x20r)','{','\x20\x20\x20\x20return\x201.79284291400159\x20-\x200.85373472095314\x20*\x20r;','}','float\x20snoise(vec3\x20v)','{\x20','\x20\x20\x20\x20const\x20vec2\x20C\x20=\x20vec2(1.0/6.0,\x201.0/3.0);','\x20\x20\x20\x20const\x20vec4\x20D\x20=\x20vec4(0.0,\x200.5,\x201.0,\x202.0);','\x20\x20\x20\x20vec3\x20i\x20\x20=\x20floor(v\x20+\x20dot(v,\x20C.yyy)\x20);','\x20\x20\x20\x20vec3\x20x0\x20=\x20v\x20-\x20i\x20+\x20dot(i,\x20C.xxx);','\x20\x20\x20\x20vec3\x20g\x20=\x20step(x0.yzx,\x20x0.xyz);','\x20\x20\x20\x20vec3\x20l\x20=\x201.0\x20-\x20g;','\x20\x20\x20\x20vec3\x20i1\x20=\x20min(\x20g.xyz,\x20l.zxy\x20);','\x20\x20\x20\x20vec3\x20i2\x20=\x20max(\x20g.xyz,\x20l.zxy\x20);','\x20\x20\x20\x20//\x20\x20\x20x0\x20=\x20x0\x20-\x200.0\x20+\x200.0\x20*\x20C.xxx;','\x20\x20\x20\x20//\x20\x20\x20x1\x20=\x20x0\x20-\x20i1\x20\x20+\x201.0\x20*\x20C.xxx;','\x20\x20\x20\x20//\x20\x20\x20x2\x20=\x20x0\x20-\x20i2\x20\x20+\x202.0\x20*\x20C.xxx;','\x20\x20\x20\x20//\x20\x20\x20x3\x20=\x20x0\x20-\x201.0\x20+\x203.0\x20*\x20C.xxx;','\x20\x20\x20\x20vec3\x20x1\x20=\x20x0\x20-\x20i1\x20+\x20C.xxx;','\x20\x20\x20\x20vec3\x20x2\x20=\x20x0\x20-\x20i2\x20+\x20C.yyy;','\x20\x20\x20\x20vec3\x20x3\x20=\x20x0\x20-\x20D.yyy;','\x20\x20\x20\x20i\x20=\x20mod289(i);\x20','\x20\x20\x20\x20vec4\x20p\x20=\x20permute(\x20permute(\x20permute(\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20i.z\x20+\x20vec4(0.0,\x20i1.z,\x20i2.z,\x201.0\x20))','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20+\x20i.y\x20+\x20vec4(0.0,\x20i1.y,\x20i2.y,\x201.0\x20))\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20+\x20i.x\x20+\x20vec4(0.0,\x20i1.x,\x20i2.x,\x201.0\x20));','\x20\x20\x20\x20float\x20n_\x20=\x200.142857142857;\x20//\x201.0/7.0','\x20\x20\x20\x20vec3\x20ns\x20=\x20n_\x20*\x20D.wyz\x20-\x20D.xzx;','\x20\x20\x20\x20vec4\x20j\x20=\x20p\x20-\x2049.0\x20*\x20floor(p\x20*\x20ns.z\x20*\x20ns.z);','\x20\x20\x20\x20vec4\x20x_\x20=\x20floor(j\x20*\x20ns.z);','\x20\x20\x20\x20vec4\x20y_\x20=\x20floor(j\x20-\x207.0\x20*\x20x_\x20);','\x20\x20\x20\x20vec4\x20x\x20=\x20x_\x20*\x20ns.x\x20+\x20ns.yyyy;','\x20\x20\x20\x20vec4\x20y\x20=\x20y_\x20*\x20ns.x\x20+\x20ns.yyyy;','\x20\x20\x20\x20vec4\x20h\x20=\x201.0\x20-\x20abs(x)\x20-\x20abs(y);','\x20\x20\x20\x20vec4\x20b0\x20=\x20vec4(\x20x.xy,\x20y.xy\x20);','\x20\x20\x20\x20vec4\x20b1\x20=\x20vec4(\x20x.zw,\x20y.zw\x20);','\x20\x20\x20\x20//vec4\x20s0\x20=\x20vec4(lessThan(b0,0.0))*2.0\x20-\x201.0;','\x20\x20\x20\x20//vec4\x20s1\x20=\x20vec4(lessThan(b1,0.0))*2.0\x20-\x201.0;','\x20\x20\x20\x20vec4\x20s0\x20=\x20floor(b0)*2.0\x20+\x201.0;','\x20\x20\x20\x20vec4\x20s1\x20=\x20floor(b1)*2.0\x20+\x201.0;','\x20\x20\x20\x20vec4\x20sh\x20=\x20-step(h,\x20vec4(0.0));','\x20\x20\x20\x20vec4\x20a0\x20=\x20b0.xzyw\x20+\x20s0.xzyw*sh.xxyy;','\x20\x20\x20\x20vec4\x20a1\x20=\x20b1.xzyw\x20+\x20s1.xzyw*sh.zzww;','\x20\x20\x20\x20vec3\x20p0\x20=\x20vec3(a0.xy,h.x);','\x20\x20\x20\x20vec3\x20p1\x20=\x20vec3(a0.zw,h.y);','\x20\x20\x20\x20vec3\x20p2\x20=\x20vec3(a1.xy,h.z);','\x20\x20\x20\x20vec3\x20p3\x20=\x20vec3(a1.zw,h.w);','\x20\x20\x20\x20vec4\x20norm\x20=\x20taylorInvSqrt(vec4(dot(p0,p0),\x20dot(p1,p1),\x20dot(p2,\x20p2),\x20dot(p3,p3)));','\x20\x20\x20\x20p0\x20*=\x20norm.x;','\x20\x20\x20\x20p1\x20*=\x20norm.y;','\x20\x20\x20\x20p2\x20*=\x20norm.z;','\x20\x20\x20\x20p3\x20*=\x20norm.w;','\x20\x20\x20\x20vec4\x20m\x20=\x20max(0.5\x20-\x20vec4(dot(x0,x0),\x20dot(x1,x1),\x20dot(x2,x2),\x20dot(x3,x3)),\x200.0);','\x20\x20\x20\x20m\x20=\x20m\x20*\x20m;','\x20\x20\x20\x20return\x20105.0\x20*\x20dot(\x20m*m,\x20vec4(\x20dot(p0,x0),\x20dot(p1,x1),\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20dot(p2,x2),\x20dot(p3,x3)\x20)\x20);','}','float\x20color(vec2\x20xy)\x20{\x20return\x200.7\x20*\x20snoise(vec3(xy,\x200.3\x20*\x20fTimer));\x20}','void\x20mainImage(out\x20vec4\x20fragColor,\x20in\x20vec2\x20fragCoord)\x20{','\x20\x20\x20\x20vec2\x20p\x20=\x20(fragCoord.xy/u_Resolution.y)\x20*\x202.0\x20-\x201.0;','\x20\x20\x20\x20vec3\x20xyz\x20=\x20vec3(p,\x200);','\x20\x20\x20\x20vec2\x20step\x20=\x20vec2(1.3,\x201.7);','\x20\x20\x20\x20float\x20n\x20=\x20color(xyz.xy);','\x20\x20\x20\x20n\x20+=\x200.5\x20*\x20color(xyz.xy\x20*\x202.0\x20-\x20step);','\x20\x20\x20\x20n\x20+=\x200.25\x20*\x20color(xyz.xy\x20*\x204.0\x20-\x202.0\x20*\x20step);','\x20\x20\x20\x20n\x20+=\x200.125\x20*\x20color(xyz.xy\x20*\x208.0\x20-\x203.0\x20*\x20step);','\x20\x20\x20\x20n\x20+=\x200.0625\x20*\x20color(xyz.xy\x20*\x2016.0\x20-\x204.0\x20*\x20step);','\x20\x20\x20\x20n\x20+=\x200.03125\x20*\x20color(xyz.xy\x20*\x2032.0\x20-\x205.0\x20*\x20step);','\x20\x20\x20\x20fragColor.xyz\x20=\x20vec3(0.5\x20+\x200.5\x20*\x20vec3(n,\x20n,\x20n));','}','void\x20main()\x20{','\x20\x20\x20gl_FragColor\x20=\x20vec4(1.0);','\x20\x20\x20mainImage(gl_FragColor,\x20gl_FragCoord.xy);','}']['join']('\x0a')}},this['ShadingLanguage_v2']={'Basic':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_normal;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','#ifdef\x20SHADING_TRIPLANAR','varying\x20vec3\x20vWorldPos;','#endif','#ifdef\x20SHADING_SHADOW','uniform\x20mat4\x20u_MVPShadowMatrix;','uniform\x20mat4\x20u_MVShadowMatrix;','varying\x20vec4\x20vShadowCoord;','varying\x20vec4\x20vShadowVert;','#endif','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20\x20\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','#ifdef\x20SHADING_TRIPLANAR','\x20\x20\x20vWorldPos\x20=\x20updatePosition;','#endif','\x20\x20\x20#ifdef\x20SHADING_SHADOW','\x20\x20\x20vec4\x20shadowPosition\x20=\x20u_MVPShadowMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord\x20=\x20shadowPosition;','\x20\x20\x20#endif','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20float\x20fShininess;','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','#ifdef\x20SHADING_TRIPLANAR','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','varying\x20vec3\x20vWorldPos;','#endif','#ifdef\x20SHADING_SHADOW','uniform\x20sampler2D\x20uShadowPositionTexture;','uniform\x20float\x20uBias;','uniform\x20mat4\x20u_ProjectionShadowMatrix;','varying\x20vec4\x20vShadowCoord;','#endif','uniform\x20bool\x20ubUseGraySacle;','float\x20dfd(vec2\x20p)\x20{\x20','\x20\x20\x20return\x20p.x\x20*\x20p.x\x20-\x20p.y;','}','#ifdef\x20SHADING_SHADOW','float\x20ShadowVSM()\x20{','\x20\x20\x20vec3\x20projectedTexcoord\x20=\x20vShadowCoord.xyz\x20/\x20vShadowCoord.w;','\x20\x20\x20float\x20currentDepth\x20=\x20projectedTexcoord.z;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20bool\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','\x20\x20\x20vec4\x20prevViewPos\x20=\x20texture2D(uShadowPositionTexture,\x20projectedTexcoord.xy);','\x20\x20\x20float\x20prevViewPosDepth\x20=\x20prevViewPos.z;','\x20\x20\x20float\x20shadowLight\x20=\x20(inRange\x20&&\x20prevViewPosDepth\x20<=\x20currentDepth\x20+\x20uBias)\x20?\x200.8\x20:\x201.0;','\x20\x20\x20return\x20shadowLight;','}','#endif','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','\x09float\x20shininess\x20=\x20mix(0.1,\x201.0,\x20fShininess);','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09if(normal.z\x20<\x200.0)','\x09\x09normal\x20*=\x20-1.0;','\x09vec3\x20lightDir\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09vec3\x20texColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','#ifdef\x20SHADING_TRIPLANAR','\x20\x20\x20vec3\x20world_normal\x20=\x20vWorldPos;','if(world_normal.x\x20>=\x201527208.5\x20&&\x20world_normal.y\x20>=\x202773888.0\x20&&','\x20\x20\x20\x20world_normal.x\x20<=\x203825013.25\x20&&\x20world_normal.y\x20<=\x205606348.5\x20)\x20{','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20-\x201527208.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20/\x202297804.75);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20(world_normal.y\x20-\x202773888.0);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20-(world_normal.y\x20/\x202832460.5);','}','if(world_normal.x\x20>=\x203823475.5\x20&&\x20world_normal.y\x20>=\x202778586.5\x20&&','\x20\x20\x20\x20world_normal.x\x20<=\x206012677.0\x20&&\x20world_normal.y\x20<=\x205612678.5\x20)\x20{','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20-\x203823475.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20/\x202189201.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20(world_normal.y\x20-\x202778586.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20-(world_normal.y\x20/\x202834092.0);','}','if(world_normal.x\x20>=\x203833331.5\x20&&\x20world_normal.y\x20>=\x2058852.18\x20&&','\x20\x20\x20\x20world_normal.x\x20<=\x206020032.0\x20&&\x20world_normal.y\x20<=\x202780283.25\x20)\x20{','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20-\x203833331.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20/\x202186700.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20(world_normal.y\x20-\x2058852.18);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20-(world_normal.y\x20/\x202721431.0);','}','if(world_normal.x\x20>=\x201534491.75\x20&&\x20world_normal.y\x20>=\x2051843.3\x20&&','\x20\x20\x20\x20world_normal.x\x20<=\x203834849.75\x20&&\x20world_normal.y\x20<=\x202780290.75\x20)\x20{','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20-\x201534491.75);','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20/\x202300357.25);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20(world_normal.y\x20-\x2051843.3);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20-(world_normal.y\x20/\x202728447.5);','}','\x20\x20\x20world_normal.z\x20=\x200.0;','\x09vec3\x20blending\x20=\x20world_normal;','\x20\x20\x20vec3\x20uvs\x20=\x20blending;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture2D(u_Texture,\x20uvs.xy);','\x09\x20\x20\x20\x20texColor\x20=\x20texColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20texNormal\x20=\x20texture2D(u_texNormal,\x20uvs.xy).rgb;','\x09\x20\x20\x20\x20texNormal\x20=\x20normalize((texNormal*2.0)\x20-\x201.0);','\x09\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(','\x09\x20\x20\x20\x20\x091.0,\x200.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x201.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x200.0,\x201.0','\x09\x20\x20\x20\x20);','\x09\x20\x20\x20\x20vec3\x20tangent\x20=\x20normalize(texNormal\x20-\x20normal\x20*\x20dot(texNormal,\x20normal));','\x09\x20\x20\x20\x20vec3\x20bitangent\x20=\x20cross(normal,\x20tangent);','\x09\x20\x20\x20\x20TBN\x20=\x20mat3(tangent,\x20bitangent,\x20normal);','\x09\x20\x20\x20\x20lightDir\x20=\x20TBN*lightDir;','\x09\x20\x20\x20\x20normal\x20=\x20texNormal;','\x20\x20\x20}','#endif','#ifdef\x20SHADING_HDR','\x20\x20\x20texColor\x20=\x20pow(texColor,\x20vec3(2.2));\x20','#endif','\x09float\x20lambertian\x20=\x20max(dot(lightDir,\x20normal),\x200.0);','\x09float\x20specular\x20=\x200.0;','\x09if\x20(lambertian\x20>\x200.0)','\x09{','\x09\x09vec3\x20viewDir\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09\x09vec3\x20halfDir\x20=\x20normalize(lightDir\x20+\x20viewDir);','\x09\x09float\x20specAngle\x20=\x20max(dot(halfDir,\x20normal),\x200.0);','\x09\x09specular\x20=\x20pow(specAngle,\x20shininess\x20*\x20128.0);','\x09}','\x09vec3\x20colorLinear\x20=\x20vAmbientColor\x20+','\x09\x09clamp((lambertian*1.0)\x20*\x20vDirectionalLightColor,\x200.0,\x201.0);','\x09vec3\x20colorGammaCorrected\x20=\x20colorLinear\x20*\x20texColor.rgb;','\x09colorGammaCorrected\x20=\x20clamp(colorGammaCorrected,\x200.0,\x201.0);','\x09colorGammaCorrected\x20=\x20colorGammaCorrected\x20+','\x09\x09vSpecColor\x20*\x20specular\x20*\x200.5;','#ifdef\x20SHADING_SHADOW','\x20\x20\x20float\x20fShadow\x20=\x20ShadowVSM();','\x20\x20\x20colorGammaCorrected\x20=\x20colorGammaCorrected\x20*\x20fShadow;','#endif','#ifdef\x20SHADING_HDR','\x20\x20\x20colorGammaCorrected\x20=\x20colorGammaCorrected\x20/\x20(colorGammaCorrected\x20+\x20vec3(1.0));','\x20\x20\x20colorGammaCorrected\x20=\x20pow(colorGammaCorrected,\x20vec3(1.0\x20/\x202.2));\x20','#endif','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(colorGammaCorrected.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x20\x20\x20gl_FragColor\x20=\x20vec4(colorGammaCorrected,\x20baseAlpha);','}']['join']('\x0a')},'BasicUtil':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_normal;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20float\x20fShininess;','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseGraySacle;','void\x20main()\x20{','\x09float\x20shininess\x20=\x20mix(0.1,\x201.0,\x20fShininess);','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09if(normal.z\x20<\x200.0)','\x09\x09normal\x20*=\x20-1.0;','\x09vec3\x20lightDir\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09vec3\x20texColor\x20=\x20vec3(1.0,\x201.0,\x201.0);','\x09texColor\x20=\x20u_color.rgb;','#ifdef\x20SHADING_HDR','\x20\x20\x20texColor\x20=\x20pow(texColor,\x20vec3(2.2));\x20','#endif','\x09float\x20lambertian\x20=\x20max(dot(lightDir,\x20normal),\x200.0);','\x09float\x20specular\x20=\x200.0;','\x09if\x20(lambertian\x20>\x200.0)','\x09{','\x09\x09vec3\x20viewDir\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09\x09vec3\x20halfDir\x20=\x20normalize(lightDir\x20+\x20viewDir);','\x09\x09float\x20specAngle\x20=\x20max(dot(halfDir,\x20normal),\x200.0);','\x09\x09specular\x20=\x20pow(specAngle,\x20shininess\x20*\x20128.0);','\x09}','\x09vec3\x20colorLinear\x20=\x20vAmbientColor\x20+','\x09\x09clamp((lambertian*1.0)\x20*\x20vDirectionalLightColor,\x200.0,\x201.0);','\x09vec3\x20colorGammaCorrected\x20=\x20colorLinear\x20*\x20texColor.rgb;','\x09colorGammaCorrected\x20=\x20clamp(colorGammaCorrected,\x200.0,\x201.0);','\x09colorGammaCorrected\x20=\x20colorGammaCorrected\x20+','\x09\x09vSpecColor\x20*\x20specular\x20*\x200.5;','#ifdef\x20SHADING_HDR','\x20\x20\x20colorGammaCorrected\x20=\x20colorGammaCorrected\x20/\x20(colorGammaCorrected\x20+\x20vec3(1.0));','\x20\x20\x20colorGammaCorrected\x20=\x20pow(colorGammaCorrected,\x20vec3(1.0\x20/\x202.2));\x20','#endif','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(colorGammaCorrected.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x20\x20\x20gl_FragColor\x20=\x20vec4(colorGammaCorrected,\x20u_color.a);','}']['join']('\x0a')},'PBR':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_normal;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','varying\x20vec2\x20vUV;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','#ifdef\x20SHADING_SHADOW','uniform\x20mat4\x20u_MVPShadowMatrix;','varying\x20vec4\x20vShadowCoord;','#endif','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','\x20\x20\x20vUV.y\x20=\x201.0\x20-\x20vUV.y;','\x20\x20\x20#ifdef\x20SHADING_SHADOW','\x20\x20\x20vec4\x20shadowPosition\x20=\x20u_MVPShadowMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord\x20=\x20shadowPosition;','\x20\x20\x20#endif','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20float\x20ubPerspectiveView;','\x0a#ifdef\x20SHADING_ENVIRONMENT','uniform\x20samplerCube\x20utexCubeMapLod0;','uniform\x20samplerCube\x20utexCubeMapLod1;','uniform\x20float\x20fRoughnessLod;','\x0a#endif','#ifdef\x20SHADING_SHADOW','uniform\x20sampler2D\x20uShadowPositionTexture;','uniform\x20float\x20uBias;','varying\x20vec4\x20vShadowCoord;','#endif','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','uniform\x20float\x20fShininess;','uniform\x20float\x20u_Roughness;','uniform\x20float\x20u_Metallic;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20int\x20useTextureRoughness;','uniform\x20sampler2D\x20u_texRoughness;','uniform\x20int\x20useTextureMetalness;','uniform\x20sampler2D\x20u_texMetalness;','uniform\x20int\x20useTextureSpecluar;','uniform\x20sampler2D\x20u_texSpecluar;','varying\x20vec2\x20vUV;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseGraySacle;','const\x20float\x20SH_PI\x20=\x203.14159265359;','const\x20float\x20SH_INV_PI\x20=\x200.31830988618;','vec3\x20lerp(vec3\x20a,\x20vec3\x20b,\x20float\x20w)','{','\x20\x20return\x20a\x20+\x20vec3(w*(b-a));','}','vec3\x20fresnelSchlickRoughness(float\x20cosTheta,\x20vec3\x20F0,\x20float\x20roughness)','{','\x09return\x20F0\x20+\x20(max(vec3(1.0\x20-\x20roughness),\x20F0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelSchlick(float\x20cosTheta,\x20vec3\x20F0)','{','\x09\x20return\x20F0\x20+\x20(vec3(1.0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelLerp\x20(float\x20cosA,\x20vec3\x20F0,\x20vec3\x20F90)','{','\x20\x20\x20\x20float\x20t\x20=\x20\x20pow(1.0\x20-\x20cosA,\x205.0);','\x20\x20\x20\x20return\x20lerp\x20(F0,\x20F90,\x20t);','}','float\x20DisneyDiffuse(float\x20NdV,\x20float\x20NdL,\x20float\x20LdH,\x20float\x20roughness)','{','\x09float\x20fd90\x20=\x200.5\x20+\x202.0\x20*\x20LdH\x20*\x20LdH\x20*\x20roughness;','\x09float\x20lightScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdL,\x205.0));','\x09float\x20viewScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdV,\x205.0));','\x09return\x20lightScatter\x20*\x20viewScatter;','}','float\x20GGXTerm(float\x20NdH,\x20float\x20roughness)','{','\x09float\x20a2\x20=\x20roughness\x20*\x20roughness\x20*\x20roughness\x20*\x20roughness;','\x09float\x20d\x20=\x20(NdH\x20*\x20a2\x20-\x20NdH)\x20*\x20NdH\x20+\x201.0;','\x09return\x20SH_INV_PI\x20*\x20a2\x20/\x20(d\x20*\x20d\x20+\x200.00000001);','}','float\x20SmithJointGGXVisibilityTerm(float\x20NdotL,\x20float\x20NdotV,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness*roughness;','\x09float\x20lambdaV\x20=\x20NdotL\x20*\x20(NdotV\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09float\x20lambdaL\x20=\x20NdotV\x20*\x20(NdotL\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09return\x200.5\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x200.0001);','}','\x0a#ifdef\x20SHADING_ENVIRONMENT','vec3\x20ComputeEnvColor(float\x20roughness_lod,\x20vec3\x20refl)','{','\x09float\x20a\x20=\x20roughness_lod\x20*\x20roughness_lod;','\x09vec3\x20lod0\x20=\x20textureCube(utexCubeMapLod0,\x20refl).rgb;','\x09vec3\x20lod1\x20=\x20textureCube(utexCubeMapLod1,\x20refl).rgb;','\x09return\x20mix(lod1,\x20lod0,\x20a);','}','\x0a#endif','#ifdef\x20SHADING_SHADOW','float\x20ShadowVSM()\x20{','\x20\x20\x20vec3\x20projectedTexcoord\x20=\x20vShadowCoord.xyz\x20/\x20vShadowCoord.w;','\x20\x20\x20float\x20currentDepth\x20=\x20projectedTexcoord.z;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20bool\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','\x20\x20\x20vec4\x20prevViewPos\x20=\x20texture2D(uShadowPositionTexture,\x20projectedTexcoord.xy);','\x20\x20\x20float\x20prevViewPosDepth\x20=\x20prevViewPos.z;','\x20\x20\x20float\x20shadowLight\x20=\x20(inRange\x20&&\x20prevViewPosDepth\x20<=\x20currentDepth\x20+\x20uBias)\x20?\x200.8\x20:\x201.0;','\x20\x20\x20return\x20shadowLight;','}','#endif','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09float\x20shini\x20=\x20fShininess;\x20','\x09float\x20rough\x20=\x20u_Roughness;','\x09float\x20metal\x20=\x20u_Metallic;','\x20\x20\x20if(useTextureRoughness\x20==\x201)\x20{','\x09\x20\x20\x20rough\x20=\x20texture2D(u_texRoughness,\x20vUV.xy).r;','\x20\x20\x20}','\x20\x20\x20if(useTextureMetalness\x20==\x201)\x20{','\x09\x20\x20\x20\x20metal\x20=\x20texture2D(u_texMetalness,\x20vUV.xy).r;','\x20\x20\x20}','\x09float\x20shininess\x20=\x20mix(0.1,\x201.0,\x20shini);','\x09float\x20roughness\x20=\x20mix(0.1,\x201.0,\x20rough);','\x09float\x20metallic\x20=\x20mix(0.1,\x200.98,\x20metal);','\x09float\x20smoothness\x20=\x201.0\x20-\x20roughness;','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09if(normal.z\x20<\x200.0)','\x09\x09normal\x20*=\x20-1.0;','\x09vec3\x20L\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09vec3\x20baseColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture2D(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20baseColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','#ifdef\x20SHADING_HDR','\x09baseColor\x20=\x20pow(baseColor,\x20vec3(2.2));','#endif','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20texNormal\x20=\x20normalize((texture2D(u_texNormal,\x20vUV.xy).rgb\x20*\x202.0)\x20-\x201.0);','\x09\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(','\x09\x20\x20\x20\x20\x091.0,\x200.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x201.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x200.0,\x201.0','\x09\x20\x20\x20\x20);','\x09\x20\x20\x20\x20vec3\x20tangent\x20=\x20normalize(texNormal\x20-\x20normal\x20*\x20dot(texNormal,\x20normal));','\x09\x20\x20\x20\x20vec3\x20bitangent\x20=\x20cross(normal,\x20tangent);','\x09\x20\x20\x20\x20TBN\x20=\x20mat3(tangent,\x20bitangent,\x20normal);','\x09\x20\x20\x20\x20L\x20=\x20TBN*L;','\x09\x20\x20\x20\x20normal\x20=\x20texNormal;','\x20\x20\x20}','\x20\x20\x20vec3\x20V\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09vec3\x20N\x20=\x20normal;','\x09vec3\x20F0\x20=\x20vec3(shininess);','\x09F0\x20=\x20F0\x20*\x200.08;','\x09F0\x20=\x20F0\x20*\x20(1.0\x20-\x20metallic)\x20+\x20baseColor.rgb\x20*\x20metallic;','\x09float\x20NdV\x20=\x20max(0.000,\x20dot(N,\x20V));','\x09float\x20AO\x20=\x201.0;','\x09vec3\x20ambient\x20=\x20vAmbientColor;','\x09vec3\x20diffuse\x20=\x20mix(baseColor.rgb,\x20vec3(0.0),\x20metallic);','\x09vec3\x20kSA\x20=\x20fresnelSchlickRoughness(NdV,\x20F0,\x20roughness);','\x09vec3\x20kDA\x20=\x20vec3(1.0)\x20-\x20kSA;','\x09vec3\x20envSpecular\x20=\x20vec3(0.0);','\x0a#ifdef\x20SHADING_ENVIRONMENT','\x09vec3\x20R\x20=\x20reflect(V\x20*\x20-1.0,\x20N);','\x09vec3\x20envColor\x20=\x20ComputeEnvColor(fRoughnessLod,\x20R);','\x09envSpecular\x20=\x20envColor\x20*\x20kSA;','\x20\x20\x20ambient\x20=\x20envColor;','\x0a#endif','\x20\x20\x20vec3\x20colSpec\x20=\x20vSpecColor;','\x20\x20\x20if(useTextureSpecluar\x20==\x201)\x20{','\x09\x20\x20\x20\x20vec3\x20colSpecular\x20=\x20texture2D(u_texSpecluar,\x20vUV.xy).rgb;','\x20\x20\x20\x20\x20\x20\x20colSpec\x20=\x20colSpec\x20*\x20colSpecular;','\x20\x20\x20}','\x09vec3\x20Lo\x20=\x20vec3(0.0);','\x09vec3\x20LoSpec\x20=\x20vec3(0.0);','\x09{','\x09\x09vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x09\x09float\x20specColorAlpha\x20=\x201.0;','\x09\x09float\x20oneMinusReflectivity\x20=\x20specColorAlpha\x20-\x20specColorAlpha\x20*\x20metallic;','\x09\x09vec3\x20diffColor\x20=\x20baseColor.rgb\x20*\x20oneMinusReflectivity;','\x09\x09float\x20diffuseTerm\x20=\x20DisneyDiffuse(NdV,\x20NdL,\x20LdH,\x20roughness)\x20*\x20NdL;','\x09\x09vec3\x20F\x20=\x20fresnelSchlick(HdV,\x20F0);','\x09\x09vec3\x20kS\x20=\x20F;','\x09\x09vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x09\x09float\x20V\x20=\x20SmithJointGGXVisibilityTerm(NdL,\x20NdV,\x20roughness);','\x09\x09float\x20D\x20=\x20GGXTerm(NdH,\x20roughness);','\x09\x09float\x20specularTerm\x20=\x20V\x20*\x20D\x20*\x20SH_PI;','\x09\x09specularTerm\x20=\x20max(0.0,\x20specularTerm\x20*\x20NdL);','\x09\x09float\x20surfaceReduction\x20=\x201.0\x20/\x20(roughness*roughness*roughness*roughness\x20+\x201.0);','\x09\x09if(F0.x\x20+\x20F0.y\x20+\x20F0.z\x20<=\x200.0)','\x09\x09\x09specularTerm\x20*=\x200.0;','\x09\x09float\x20grazingTerm\x20=\x20smoothness\x20*\x20smoothness\x20+\x20(1.0\x20-\x20oneMinusReflectivity);','\x09\x09grazingTerm\x20=\x20max(min(grazingTerm,\x201.0),\x200.0);','\x09\x09Lo\x20=\x20kD\x20*\x20diffColor\x20*\x20vDirectionalLightColor\x20*\x20NdL;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20vDirectionalLightColor\x20*\x20specularTerm\x20*\x20fresnelSchlick(LdH,\x20F0);','\x20\x20\x20\x20\x20\x20\x20LoSpec\x20=\x20diffColor\x20*\x20surfaceReduction\x20*\x20fresnelLerp(NdV,\x20F0,\x20vec3(grazingTerm));','\x09}','\x09ambient\x20=\x20(kDA\x20*\x20ambient\x20*\x20diffuse\x20+\x20envSpecular)\x20*\x20AO;','\x09vec3\x20fragColor\x20=\x20ambient','\x09+\x20Lo\x20+\x20LoSpec;','#ifdef\x20SHADING_SHADOW','\x20\x20\x20float\x20fShadow\x20=\x20ShadowVSM();','\x20\x20\x20fragColor\x20=\x20fragColor\x20*\x20fShadow;','#endif','#ifdef\x20SHADING_HDR','\x20\x20\x20fragColor\x20=\x20fragColor\x20/\x20(fragColor\x20+\x20vec3(1.0));','\x20\x20\x20fragColor\x20=\x20pow(fragColor,\x20vec3(1.0\x20/\x202.2));\x20','#endif','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(fragColor.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20fragColor\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x09gl_FragColor\x20=\x20vec4(fragColor,\x20baseAlpha);','}']['join']('\x0a')},'PBR_v2':{'vertex':['in\x20vec3\x20a_position;','in\x20vec3\x20a_normal;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','out\x20vec2\x20vUV;','out\x20vec3\x20vNormalInterp;','out\x20vec3\x20vVertPos;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','in\x20vec3\x20a_matrixIdx;','#endif','#ifdef\x20SHADING_SHADOW','uniform\x20mat4\x20u_MVPShadowMatrix;','out\x20vec4\x20vShadowCoord;','#endif','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','\x20\x20\x20vUV.y\x20=\x201.0\x20-\x20vUV.y;','\x20\x20\x20#ifdef\x20SHADING_SHADOW','\x20\x20\x20vec4\x20shadowPosition\x20=\x20u_MVPShadowMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord\x20=\x20shadowPosition;','\x20\x20\x20#endif','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20float\x20ubPerspectiveView;','\x0a#ifdef\x20SHADING_SHADOW','uniform\x20sampler2D\x20uShadowPositionTexture;','uniform\x20float\x20uBias;','uniform\x20float\x20u_ShadowRatio;','in\x20vec4\x20vShadowCoord;','\x0a#endif','\x0a#ifdef\x20SHADING_UV_ANIMATION','uniform\x20int\x20useUVAnimation;','uniform\x20vec2\x20u_UV_Direction;','uniform\x20float\x20u_UVTime;','\x0a#endif','\x0a#ifdef\x20SHADING_FOG','uniform\x20vec4\x20u_fogColor;','uniform\x20vec3\x20u_fogCenter;','uniform\x20float\x20u_fogNear;','uniform\x20float\x20u_fogFar;','\x0a#endif','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20float\x20fShininess;','uniform\x20float\x20u_Roughness;','uniform\x20float\x20u_Metallic;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20int\x20useTextureRoughness;','uniform\x20sampler2D\x20u_texRoughness;','uniform\x20int\x20useTextureMetalness;','uniform\x20sampler2D\x20u_texMetalness;','uniform\x20int\x20useTextureAO;','uniform\x20sampler2D\x20u_texAO;','uniform\x20int\x20useTextureAlpha;','uniform\x20sampler2D\x20u_texAlpha;','uniform\x20int\x20useTextureSpecluar;','\x0a#ifdef\x20SHADING_ENVIRONMENT','uniform\x20samplerCube\x20u_texIrradianceMap;','uniform\x20samplerCube\x20u_texPrefilterMap;','uniform\x20sampler2D\x20\x20u_texbrdfLUT;','\x0a#endif','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','uniform\x20int\x20uLightNum;','uniform\x20vec3\x20vLightPos[4];','uniform\x20vec3\x20vLightColor[4];','in\x20vec2\x20vUV;','in\x20vec3\x20vNormalInterp;','in\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseGraySacle;','const\x20float\x20SH_PI\x20=\x203.14159265359;','const\x20float\x20SH_INV_PI\x20=\x200.31830988618;','out\x20vec4\x20o_FragColor;','vec3\x20lerp(vec3\x20a,\x20vec3\x20b,\x20float\x20w)','{','\x20\x20return\x20a\x20+\x20vec3(w*(b-a));','}','vec3\x20fresnelSchlickRoughness(float\x20cosTheta,\x20vec3\x20F0,\x20float\x20roughness)','{','\x09return\x20F0\x20+\x20(max(vec3(1.0\x20-\x20roughness),\x20F0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelSchlick(float\x20cosTheta,\x20vec3\x20F0)','{','\x09\x20return\x20F0\x20+\x20(vec3(1.0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelLerp\x20(float\x20cosA,\x20vec3\x20F0,\x20vec3\x20F90)','{','\x20\x20\x20\x20float\x20t\x20=\x20\x20pow(1.0\x20-\x20cosA,\x205.0);','\x20\x20\x20\x20return\x20lerp\x20(F0,\x20F90,\x20t);','}','float\x20GeometrySchlickGGX(float\x20NdotV,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20r\x20=\x20(roughness\x20+\x201.0);','\x20\x20\x20\x20float\x20k\x20=\x20(r*r)\x20/\x208.0;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20NdotV;','\x20\x20\x20\x20float\x20denom\x20=\x20NdotV\x20*\x20(1.0\x20-\x20k)\x20+\x20k;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20GeometrySmith(vec3\x20N,\x20vec3\x20V,\x20vec3\x20L,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20NdotV\x20=\x20max(dot(N,\x20V),\x200.0);','\x20\x20\x20\x20float\x20NdotL\x20=\x20max(dot(N,\x20L),\x200.0);','\x20\x20\x20\x20float\x20ggx2\x20=\x20GeometrySchlickGGX(NdotV,\x20roughness);','\x20\x20\x20\x20float\x20ggx1\x20=\x20GeometrySchlickGGX(NdotL,\x20roughness);','\x20\x20\x20\x20return\x20ggx1\x20*\x20ggx2;','}','float\x20DistributionGGX(vec3\x20N,\x20vec3\x20H,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20a\x20=\x20roughness*roughness;','\x20\x20\x20\x20float\x20a2\x20=\x20a*a;','\x20\x20\x20\x20float\x20NdotH\x20=\x20max(dot(N,\x20H),\x200.0);','\x20\x20\x20\x20float\x20NdotH2\x20=\x20NdotH*NdotH;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20a2;','\x20\x20\x20\x20float\x20denom\x20=\x20(NdotH2\x20*\x20(a2\x20-\x201.0)\x20+\x201.0);','\x20\x20\x20\x20denom\x20=\x20SH_PI\x20*\x20denom\x20*\x20denom;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20DisneyDiffuse(float\x20NdV,\x20float\x20NdL,\x20float\x20LdH,\x20float\x20roughness)','{','\x09float\x20fd90\x20=\x200.5\x20+\x202.0\x20*\x20LdH\x20*\x20LdH\x20*\x20roughness;','\x09float\x20lightScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdL,\x205.0));','\x09float\x20viewScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdV,\x205.0));','\x09return\x20lightScatter\x20*\x20viewScatter;','}','float\x20GGXTerm(float\x20NdH,\x20float\x20roughness)','{','\x09float\x20a2\x20=\x20roughness\x20*\x20roughness\x20*\x20roughness\x20*\x20roughness;','\x09float\x20d\x20=\x20(NdH\x20*\x20a2\x20-\x20NdH)\x20*\x20NdH\x20+\x201.0;','\x09return\x20SH_INV_PI\x20*\x20a2\x20/\x20(d\x20*\x20d\x20+\x200.00000001);','}','float\x20SmithJointGGXVisibilityTerm(float\x20NdotL,\x20float\x20NdotV,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness*roughness;','\x09float\x20lambdaV\x20=\x20NdotL\x20*\x20(NdotV\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09float\x20lambdaL\x20=\x20NdotV\x20*\x20(NdotL\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09return\x200.5\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x200.0001);','}','#ifdef\x20SHADING_SHADOW','float\x20ShadowVSM()\x20{','\x20\x20\x20vec3\x20projectedTexcoord\x20=\x20vShadowCoord.xyz\x20/\x20vShadowCoord.w;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20float\x20currentDepth\x20=\x20projectedTexcoord.z;','\x20\x20\x20bool\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','\x20\x20\x20vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture,\x20projectedTexcoord.xy);','\x20\x20\x20float\x20prevViewPosDepth\x20=\x20prevViewPos.z\x20/\x20prevViewPos.w;','\x09prevViewPosDepth\x20=\x20prevViewPosDepth\x20*\x200.5\x20+\x200.5;','\x20\x20\x20float\x20shadowLight\x20=\x20(inRange\x20&&\x20prevViewPosDepth\x20<=\x20currentDepth\x20+\x20uBias)\x20?\x20u_ShadowRatio\x20:\x201.0;','\x20\x20\x20return\x20shadowLight;','}','#endif','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09float\x20shini\x20=\x20fShininess;\x20','\x09float\x20rough\x20=\x20u_Roughness;','\x09float\x20metal\x20=\x20u_Metallic;','\x20\x20\x20if(useTextureRoughness\x20==\x201)\x20{','\x09\x20\x20\x20rough\x20=\x20texture(u_texRoughness,\x20vUV.xy).r;','\x20\x20\x20}','\x20\x20\x20if(useTextureMetalness\x20==\x201)\x20{','\x09\x20\x20\x20\x20metal\x20=\x20texture(u_texMetalness,\x20vUV.xy).g;','\x20\x20\x20}','\x09float\x20shininess\x20=\x20mix(0.0,\x201.0,\x20shini);','\x09float\x20roughness\x20=\x20mix(0.0,\x201.0,\x20rough);','\x09float\x20metallic\x20=\x20mix(0.0,\x201.0,\x20metal);','\x09float\x20smoothness\x20=\x201.0\x20-\x20roughness;','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x0a#ifdef\x20SHADING_FLAT','vec3\x20vVertPosU\x20=\x20dFdx(vVertPos);','vec3\x20vVertPosV\x20=\x20dFdy(vVertPos);','normal\x20=\x20normalize(cross(vVertPosU,vVertPosV));','\x0a#endif','\x09vec3\x20baseColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20baseColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x0a#ifdef\x20SHADING_HDR','\x09baseColor\x20=\x20pow(baseColor,\x20vec3(2.2));','\x0a#endif','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20tangentNormal\x20=\x20normalize((texture(u_texNormal,\x20vUV.xy).rgb\x20*\x202.0)\x20-\x201.0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q1\x20\x20=\x20dFdx(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q2\x20\x20=\x20dFdy(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st1\x20=\x20dFdx(vUV);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st2\x20=\x20dFdy(vUV);','\x20\x20\x20\x20\x20\x20\x20vec3\x20N\x20\x20\x20=\x20normal;','\x20\x20\x20\x20\x20\x20\x20vec3\x20T\x20\x20=\x20normalize(Q1*st2.t\x20-\x20Q2*st1.t);','\x20\x20\x20\x20\x20\x20\x20vec3\x20B\x20\x20=\x20-normalize(cross(N,\x20T));','\x20\x20\x20\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(T,\x20B,\x20N);','\x20\x20\x20\x20\x20\x20\x20normal\x20=\x20normalize(TBN\x20*\x20tangentNormal);','\x20\x20\x20}','\x20\x20\x20vec3\x20V\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09vec3\x20N\x20=\x20normalize(normal);','\x20\x20\x20vec3\x20R\x20=\x20reflect(-V,\x20N);\x20','\x09vec3\x20F0\x20=\x20vec3(shininess);','\x09F0\x20=\x20F0\x20*\x200.08;','\x09F0\x20=\x20F0\x20*\x20(1.0\x20-\x20metallic)\x20+\x20baseColor.rgb\x20*\x20metallic;','\x09float\x20NdV\x20=\x20max(dot(N,\x20V),\x200.0);','\x09vec3\x20diffuse\x20=\x20baseColor.rgb;','\x09vec3\x20Lo\x20=\x20vec3(0.0);','\x20\x20\x20for(int\x20i\x20=\x200\x20;\x20i\x20<\x20uLightNum\x20;\x20++i)','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20length(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20attenuation\x20=\x201.0\x20/\x20(distance\x20*\x20distance);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20radiance\x20=\x20vLightColor[i]\x20*\x20attenuation\x20*\x20100.0\x20*\x20100.0;','\x20\x20\x20\x20\x20\x20\x20\x20float\x20NDF\x20=\x20DistributionGGX(N,\x20H,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20G\x20\x20\x20=\x20GeometrySmith(N,\x20V,\x20L,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20F\x20\x20\x20\x20=\x20fresnelSchlick(HdV,\x20F0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20numerator\x20\x20\x20\x20=\x20NDF\x20*\x20G\x20*\x20F;','\x20\x20\x20\x20\x20\x20\x20float\x20denominator\x20=\x204.0\x20*\x20NdV\x20*\x20NdL\x20+\x200.0001;','\x20\x20\x20\x20\x20\x20\x20vec3\x20specular\x20=\x20numerator\x20/\x20denominator;','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20kS\x20=\x20F;','\x20\x20\x20\x20\x20\x20\x20vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20(kD\x20*\x20diffuse\x20/\x20SH_PI\x20+\x20specular)\x20*\x20radiance\x20*\x20NdL;','\x09}','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09\x09vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x09\x09float\x20specColorAlpha\x20=\x200.5;','\x09\x09float\x20oneMinusReflectivity\x20=\x20specColorAlpha\x20-\x20specColorAlpha\x20*\x20metallic;','\x09\x09vec3\x20diffColor\x20=\x20diffuse\x20*\x20oneMinusReflectivity;','\x09\x09float\x20diffuseTerm\x20=\x20DisneyDiffuse(NdV,\x20NdL,\x20LdH,\x20roughness)\x20*\x20NdL;','\x09\x09vec3\x20F\x20=\x20fresnelSchlick(HdV,\x20F0);','\x09\x09vec3\x20kS\x20=\x20F;','\x09\x09vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x09\x09float\x20V\x20=\x20SmithJointGGXVisibilityTerm(NdL,\x20NdV,\x20roughness);','\x09\x09float\x20D\x20=\x20GGXTerm(NdH,\x20roughness);','\x09\x09float\x20specularTerm\x20=\x20V\x20*\x20D\x20*\x20SH_PI;','\x09\x09specularTerm\x20=\x20max(0.0,\x20specularTerm\x20*\x20NdL);','\x09\x09float\x20surfaceReduction\x20=\x201.0\x20/\x20(roughness*roughness*roughness*roughness\x20+\x201.0);','\x09\x09if(F0.x\x20+\x20F0.y\x20+\x20F0.z\x20<=\x200.0)','\x09\x09\x09specularTerm\x20*=\x200.0;','\x09\x09float\x20grazingTerm\x20=\x20smoothness\x20*\x20smoothness\x20+\x20(1.0\x20-\x20oneMinusReflectivity);','\x09\x09grazingTerm\x20=\x20max(min(grazingTerm,\x201.0),\x200.0);','\x09\x09Lo\x20+=\x20kD\x20*\x20diffColor\x20*\x20vDirectionalLightColor\x20*\x20diffuseTerm;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20vDirectionalLightColor\x20*\x20specularTerm\x20*\x20fresnelSchlick(LdH,\x20F0);','\x09}','\x09float\x20AO\x20=\x201.0;','\x20\x20\x20if(useTextureAO\x20==\x201){','\x09\x20\x20\x20\x20AO\x20=\x20texture(u_texAO,\x20vUV.xy).r;','\x20\x20\x20}','\x09vec3\x20ambient\x20=\x20vAmbientColor;','\x20\x20\x20vec3\x20specular\x20=\x20vec3(0.0);','\x09vec3\x20kSA\x20=\x20fresnelSchlickRoughness(NdV,\x20F0,\x20roughness);','\x09vec3\x20kDA\x20=\x20vec3(1.0)\x20-\x20kSA;','\x09kDA\x20*=\x201.0\x20-\x20metallic;','#ifdef\x20SHADING_ENVIRONMENT','\x20\x20\x20vec3\x20irradiance\x20=\x20texture(u_texIrradianceMap,\x20N).rgb;','\x20\x20\x20diffuse\x20=\x20irradiance\x20*\x20diffuse;','\x20\x20\x20const\x20float\x20MAX_REFLECTION_LOD\x20=\x204.0;','\x20\x20\x20vec3\x20prefilteredColor\x20=\x20textureLod(u_texPrefilterMap,\x20R,\x20\x20roughness\x20*\x20MAX_REFLECTION_LOD).rgb;','\x20\x20\x20vec2\x20brdf\x20=\x20texture(u_texbrdfLUT,\x20vec2(NdV,\x20roughness)).xy;','\x20\x20\x20specular\x20=\x20prefilteredColor\x20*\x20(kSA\x20*\x20brdf.x\x20+\x20brdf.y);','#endif','\x09ambient\x20=\x20(kDA\x20*\x20ambient\x20*\x20diffuse\x20+\x20specular)\x20*\x20AO;','\x09vec3\x20fragColor\x20=\x20ambient','\x09+\x20Lo;','#ifdef\x20SHADING_SHADOW','\x20\x20\x20float\x20fShadow\x20=\x20ShadowVSM();','\x20\x20\x20fragColor\x20=\x20fragColor\x20*\x20fShadow;','#endif','\x0a#ifdef\x20SHADING_HDR','\x0a#ifdef\x20SHADING_FURSYS_HDR','\x20\x20\x20fragColor\x20=\x20fragColor\x20/\x204.0;','\x0a#else','\x20\x20\x20fragColor\x20=\x20fragColor\x20/\x20(fragColor\x20+\x20vec3(1.0));','\x0a#endif','\x20\x20\x20fragColor\x20=\x20pow(fragColor,\x20vec3(1.0\x20/\x202.2));\x20','\x0a#endif','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(fragColor.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20fragColor\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x20\x20\x20if(useTextureAlpha\x20==\x201)\x20{','\x20\x20\x20\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20texture(u_texAlpha,\x20vUV.xy).r;','\x20\x20\x20}','\x20\x20\x20vec4\x20glslColor\x20=\x20vec4(fragColor,\x20baseAlpha);','\x0a#ifdef\x20SHADING_FOG','\x20\x20\x20float\x20fogAmount\x20=\x201.0;','\x20\x20\x20float\x20fogDepth\x20=\x20length(u_fogCenter\x20-\x20vVertPos);','\x20\x20\x20fogAmount\x20=\x20smoothstep(u_fogNear,\x20u_fogFar,\x20fogDepth);','\x20\x20\x20glslColor\x20=\x20glslColor\x20*\x20(1.0\x20-\x20fogAmount)\x20+\x20u_fogColor\x20*\x20fogAmount;','\x0a#endif','\x09o_FragColor\x20=\x20glslColor;','\x20\x20\x20if(o_FragColor.a\x20<\x200.003)','\x20\x20\x20\x20discard;','}']['join']('\x0a')},'PBR_v3':{'vertex':['\x0ain\x20vec3\x20a_position;','in\x20vec3\x20a_normal;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_IMVmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_Pmatrix;','uniform\x20mat4\x20u_Mmatrix;','uniform\x20mat4\x20u_Vmatrix;','uniform\x20mat4\x20u_Imatrix;','uniform\x20float\x20uFar;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','out\x20vec2\x20vUV;','out\x20vec3\x20vNormalInterp;','out\x20vec3\x20vVertPos;','#ifdef\x20LOG_DEPTH','out\x20float\x20flogz;','#endif','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','in\x20vec3\x20a_matrixIdx;','#endif','#ifdef\x20SHADING_SHADOW','uniform\x20mat4\x20u_MVPShadowMatrix;','out\x20vec4\x20vShadowCoord;','#endif','#ifdef\x20CC_SHADING_SHADOW','uniform\x20mat4\x20u_MVPShadowMatrix1;','uniform\x20mat4\x20u_MVPShadowMatrix2;','uniform\x20mat4\x20u_MVPShadowMatrix3;','uniform\x20mat4\x20u_MVPShadowMatrix4;','uniform\x20mat4\x20u_MVPShadowMatrix5;','out\x20vec4\x20vShadowCoord1;','out\x20vec4\x20vShadowCoord2;','out\x20vec4\x20vShadowCoord3;','out\x20vec4\x20vShadowCoord4;','out\x20vec4\x20vShadowCoord5;','out\x20vec3\x20FragPos;','#endif','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x0a#ifdef\x20LOG_DEPTH','\x20\x20\x20float\x20Fcoef\x20=\x202.0\x20/\x20log2(uFar+1.0);','\x20\x20\x20gl_Position.z\x20=\x20log2(max(1e-6,\x201.0\x20+\x20gl_Position.w))\x20*\x20Fcoef\x20-\x201.0;','\x20\x20\x20flogz\x20=\x201.0\x20+\x20gl_Position.w;','\x20\x20\x20#endif','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','\x20\x20\x20vUV.y\x20=\x201.0\x20-\x20vUV.y;','\x20\x20\x20#ifdef\x20SHADING_SHADOW','\x20\x20\x20vec4\x20shadowPosition\x20=\x20u_MVPShadowMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord\x20=\x20shadowPosition;','\x20\x20\x20#endif','\x20\x20\x20#ifdef\x20CC_SHADING_SHADOW','\x20\x20\x20vec4\x20shadowPosition\x20=\x20u_MVPShadowMatrix1\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord1\x20=\x20shadowPosition;','\x20\x20\x20vec4\x20shadowPosition2\x20=\x20u_MVPShadowMatrix2\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord2\x20=\x20shadowPosition2;','\x20\x20\x20vec4\x20shadowPosition3\x20=\x20u_MVPShadowMatrix3\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord3\x20=\x20shadowPosition3;','\x20\x20\x20vec4\x20shadowPosition4\x20=\x20u_MVPShadowMatrix4\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord4\x20=\x20shadowPosition4;','\x20\x20\x20vec4\x20shadowPosition5\x20=\x20u_MVPShadowMatrix5\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord5\x20=\x20shadowPosition5;','\x20\x20\x20vec3\x20FragPos\x20=\x20vec3(u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0));','\x20\x20\x20#endif','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20float\x20ubPerspectiveView;','uniform\x20float\x20uFar;','\x0a#ifdef\x20SHADING_SHADOW','uniform\x20sampler2D\x20uShadowPositionTexture;','uniform\x20float\x20uBias;','uniform\x20float\x20u_ShadowRatio;','in\x20vec4\x20vShadowCoord;','\x0a#endif','\x0a#ifdef\x20CC_SHADING_SHADOW','uniform\x20sampler2D\x20uShadowPositionTexture1;','uniform\x20sampler2D\x20uShadowPositionTexture2;','uniform\x20sampler2D\x20uShadowPositionTexture3;','uniform\x20sampler2D\x20uShadowPositionTexture4;','uniform\x20sampler2D\x20uShadowPositionTexture5;','uniform\x20float\x20uBias;','uniform\x20float\x20u_ShadowRatio;','in\x20vec4\x20vShadowCoord1;','in\x20vec4\x20vShadowCoord2;','in\x20vec4\x20vShadowCoord3;','in\x20vec4\x20vShadowCoord4;','in\x20vec4\x20vShadowCoord5;','uniform\x20mat4\x20u_MVPShadowMatrix1;','uniform\x20mat4\x20u_MVPShadowMatrix2;','uniform\x20mat4\x20u_MVPShadowMatrix3;','uniform\x20mat4\x20u_MVPShadowMatrix4;','uniform\x20mat4\x20u_MVPShadowMatrix5;','in\x20vec3\x20FragPos;','uniform\x20mat4\x20u_Vmatrix;','uniform\x20float\x20cascadePlaneDistances[4];','int\x20cascadeCount\x20=\x204;','\x0a#endif','\x0a#ifdef\x20SHADING_UV_ANIMATION','uniform\x20int\x20useUVAnimation;','uniform\x20vec2\x20u_UV_Direction;','uniform\x20float\x20u_UVTime;','\x0a#endif','\x0a#ifdef\x20SHADING_FOG','uniform\x20vec4\x20u_fogColor;','uniform\x20vec3\x20u_fogCenter;','uniform\x20float\x20u_fogNear;','uniform\x20float\x20u_fogFar;','\x0a#endif','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20float\x20fShininess;','uniform\x20float\x20u_Roughness;','uniform\x20float\x20u_Metallic;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20int\x20useTextureRoughness;','uniform\x20sampler2D\x20u_texRoughness;','uniform\x20int\x20useTextureMetalness;','uniform\x20sampler2D\x20u_texMetalness;','uniform\x20int\x20useTextureAO;','uniform\x20sampler2D\x20u_texAO;','uniform\x20int\x20useTextureAlpha;','uniform\x20sampler2D\x20u_texAlpha;','uniform\x20int\x20useTextureSpecluar;','\x0a#ifdef\x20SHADING_ENVIRONMENT','uniform\x20samplerCube\x20u_texIrradianceMap;','uniform\x20samplerCube\x20u_texPrefilterMap;','uniform\x20sampler2D\x20\x20u_texbrdfLUT;','\x0a#endif','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','uniform\x20int\x20uLightNum;','uniform\x20vec3\x20vLightPos[4];','uniform\x20vec3\x20vLightColor[4];','in\x20vec2\x20vUV;','in\x20vec3\x20vNormalInterp;','in\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseGraySacle;','const\x20float\x20SH_PI\x20=\x203.14159265359;','const\x20float\x20SH_INV_PI\x20=\x200.31830988618;','out\x20vec4\x20o_FragColor;','\x0a#ifdef\x20LOG_DEPTH','in\x20float\x20flogz;','\x0a#endif','vec3\x20lerp(vec3\x20a,\x20vec3\x20b,\x20float\x20w)','{','\x20\x20return\x20a\x20+\x20vec3(w*(b-a));','}','vec3\x20fresnelSchlickRoughness(float\x20cosTheta,\x20vec3\x20F0,\x20float\x20roughness)','{','\x09return\x20F0\x20+\x20(max(vec3(1.0\x20-\x20roughness),\x20F0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelSchlick(float\x20cosTheta,\x20vec3\x20F0)','{','\x09\x20return\x20F0\x20+\x20(vec3(1.0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelLerp\x20(float\x20cosA,\x20vec3\x20F0,\x20vec3\x20F90)','{','\x20\x20\x20\x20float\x20t\x20=\x20\x20pow(1.0\x20-\x20cosA,\x205.0);','\x20\x20\x20\x20return\x20lerp\x20(F0,\x20F90,\x20t);','}','float\x20GeometrySchlickGGX(float\x20NdotV,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20r\x20=\x20(roughness\x20+\x201.0);','\x20\x20\x20\x20float\x20k\x20=\x20(r*r)\x20/\x208.0;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20NdotV;','\x20\x20\x20\x20float\x20denom\x20=\x20NdotV\x20*\x20(1.0\x20-\x20k)\x20+\x20k;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20GeometrySmith(vec3\x20N,\x20vec3\x20V,\x20vec3\x20L,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20NdotV\x20=\x20max(dot(N,\x20V),\x200.0);','\x20\x20\x20\x20float\x20NdotL\x20=\x20max(dot(N,\x20L),\x200.0);','\x20\x20\x20\x20float\x20ggx2\x20=\x20GeometrySchlickGGX(NdotV,\x20roughness);','\x20\x20\x20\x20float\x20ggx1\x20=\x20GeometrySchlickGGX(NdotL,\x20roughness);','\x20\x20\x20\x20return\x20ggx1\x20*\x20ggx2;','}','float\x20DistributionGGX(vec3\x20N,\x20vec3\x20H,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20a\x20=\x20roughness*roughness;','\x20\x20\x20\x20float\x20a2\x20=\x20a*a;','\x20\x20\x20\x20float\x20NdotH\x20=\x20max(dot(N,\x20H),\x200.0);','\x20\x20\x20\x20float\x20NdotH2\x20=\x20NdotH*NdotH;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20a2;','\x20\x20\x20\x20float\x20denom\x20=\x20(NdotH2\x20*\x20(a2\x20-\x201.0)\x20+\x201.0);','\x20\x20\x20\x20denom\x20=\x20SH_PI\x20*\x20denom\x20*\x20denom;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20DisneyDiffuse(float\x20NdV,\x20float\x20NdL,\x20float\x20LdH,\x20float\x20roughness)','{','\x09float\x20fd90\x20=\x200.5\x20+\x202.0\x20*\x20LdH\x20*\x20LdH\x20*\x20roughness;','\x09float\x20lightScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdL,\x205.0));','\x09float\x20viewScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdV,\x205.0));','\x09return\x20lightScatter\x20*\x20viewScatter;','}','float\x20GGXTerm(float\x20NdH,\x20float\x20roughness)','{','\x09float\x20a2\x20=\x20roughness\x20*\x20roughness\x20*\x20roughness\x20*\x20roughness;','\x09float\x20d\x20=\x20(NdH\x20*\x20a2\x20-\x20NdH)\x20*\x20NdH\x20+\x201.0;','\x09return\x20SH_INV_PI\x20*\x20a2\x20/\x20(d\x20*\x20d\x20+\x200.00000001);','}','float\x20SmithJointGGXVisibilityTerm(float\x20NdotL,\x20float\x20NdotV,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness*roughness;','\x09float\x20lambdaV\x20=\x20NdotL\x20*\x20(NdotV\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09float\x20lambdaL\x20=\x20NdotV\x20*\x20(NdotL\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09return\x200.5\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x200.0001);','}','#ifdef\x20SHADING_SHADOW','float\x20random(vec3\x20seed,\x20int\x20i){\x20vec4\x20seed4\x20=\x20vec4(seed,i);\x20float\x20dot_product\x20=\x20dot(seed4,\x20vec4(12.9898,78.233,45.164,94.673));\x20return\x20fract(sin(dot_product)\x20*\x2043758.5453);}','const\x20vec2\x20poissonDisk[64]\x20=\x20vec2[](','\x20\x20vec2(\x200.282571,\x200.023957\x20),','\x20\x20vec2(\x200.792657,\x200.945738\x20),','\x20\x20vec2(\x200.922361,\x200.411756\x20),','\x20\x20vec2(\x200.165838,\x200.552995\x20),','\x20\x20vec2(\x200.566027,\x200.216651\x20),','\x20\x20vec2(\x200.335398,\x200.783654\x20),','\x20\x20vec2(\x200.0190741,\x200.318522\x20),','\x20\x20vec2(\x200.647572,\x200.581896\x20),','\x20\x20vec2(\x200.916288,\x200.0120243\x20),','\x20\x20vec2(\x200.0278329,\x200.866634\x20),','\x20\x20vec2(\x200.398053,\x200.4214\x20),','\x20\x20vec2(\x200.00289926,\x200.051149\x20),','\x20\x20vec2(\x200.517624,\x200.989044\x20),','\x20\x20vec2(\x200.963744,\x200.719901\x20),','\x20\x20vec2(\x200.76867,\x200.018128\x20),','\x20\x20vec2(\x200.684194,\x200.167302\x20),','\x20\x20vec2(\x200.727103,\x200.410871\x20),','\x20\x20vec2(\x200.557482,\x200.724143\x20),','\x20\x20vec2(\x200.483352,\x200.0527055\x20),','\x20\x20vec2(\x200.162877,\x200.351482\x20),','\x20\x20vec2(\x200.959716,\x200.180578\x20),','\x20\x20vec2(\x200.140355,\x200.112003\x20),','\x20\x20vec2(\x200.796228,\x200.223365\x20),','\x20\x20vec2(\x200.187048,\x200.787225\x20),','\x20\x20vec2(\x200.55446,\x200.35612\x20),','\x20\x20vec2(\x200.449965,\x200.640522\x20),','\x20\x20vec2(\x200.438917,\x200.194769\x20),','\x20\x20vec2(\x200.791253,\x200.565325\x20),','\x20\x20vec2(\x200.719718,\x200.794794\x20),','\x20\x20vec2(\x200.0651875,\x200.708609\x20),','\x20\x20vec2(\x200.641987,\x200.0233772\x20),','\x20\x20vec2(\x200.376415,\x200.944243\x20),','\x20\x20vec2(\x200.827723,\x200.723258\x20),','\x20\x20vec2(\x200.968627,\x200.884518\x20),','\x20\x20vec2(\x200.263405,\x200.458968\x20),','\x20\x20vec2(\x200.985717,\x200.559587\x20),','\x20\x20vec2(\x200.0616169,\x200.468612\x20),','\x20\x20vec2(\x200.159154,\x200.934782\x20),','\x20\x20vec2(\x200.287301,\x200.284768\x20),','\x20\x20vec2(\x200.550066,\x200.849391\x20),','\x20\x20vec2(\x200.353587,\x200.003296\x20),','\x20\x20vec2(\x200.000671407,\x200.582507\x20),','\x20\x20vec2(\x200.850459,\x200.461989\x20),','\x20\x20vec2(\x200.526139,\x200.640126\x20),','\x20\x20vec2(\x200.786889,\x200.487686\x20),','\x20\x20vec2(\x200.164129,\x200.02472\x20),','\x20\x20vec2(\x200.517075,\x200.90933\x20),','\x20\x20vec2(\x200.316111,\x200.663564\x20),','\x20\x20vec2(\x200.09476,\x200.895749\x20),','\x20\x20vec2(\x200.298288,\x200.195318\x20),','\x20\x20vec2(\x200.427229,\x200.7828\x20),','\x20\x20vec2(\x200.734764,\x200.266152\x20),','\x20\x20vec2(\x200.0816065,\x200.965972\x20),','\x20\x20vec2(\x200.698935,\x200.646352\x20),','\x20\x20vec2(\x200.281899,\x200.355144\x20),','\x20\x20vec2(\x200.871334,\x200.303171\x20),','\x20\x20vec2(\x200.138249,\x200.661214\x20),','\x20\x20vec2(\x200.202399,\x200.252449\x20),','\x20\x20vec2(\x200.0734275,\x200.399853\x20),','\x20\x20vec2(\x200.786767,\x200.660268\x20),','\x20\x20vec2(\x200.933744,\x200.508621\x20),','\x20\x20vec2(\x200.398236,\x200.0509049\x20),','\x20\x20vec2(\x200.500473,\x200.130253\x20),','\x20\x20vec2(\x200.0332957,\x200.526292\x20)',');','float\x20ShadowVSM()\x20{','\x20\x20\x20vec3\x20projectedTexcoord\x20=\x20vShadowCoord.xyz\x20/\x20vShadowCoord.w;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20float\x20currentDepth\x20=\x20projectedTexcoord.z;','\x20\x20\x20bool\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','vec3\x20normal\x20=\x20normalize(vNormalInterp);','vec3\x20lightDir\x20=\x20normalize(vDirectionalLightPos);','float\x20cosAngle\x20=\x20clamp(1.0f\x20-\x20dot(lightDir,\x20normal),0.0,1.0);','float\x20bias\x20=\x20-0.001;//-max(0.050\x20*\x20(1.0\x20-\x20dot(normal,\x20lightDir)),\x200.010);','float\x20shadow\x20=\x200.0;','vec2\x20texelSize\x20=\x201.0\x20/\x20vec2(textureSize(uShadowPositionTexture,\x200));','int\x20randomIter=1;','int\x20kernelSize=3;','for\x20(int\x20i=0;i<randomIter;i++){','for(int\x20x\x20=\x20-kernelSize;\x20x\x20<=\x20kernelSize;\x20++x)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{','for(int\x20y\x20=\x20-kernelSize;\x20y\x20<=\x20kernelSize;\x20++y)\x20{','vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture,\x20projectedTexcoord.xy\x20+\x20vec2(x,\x20y)\x20*\x20texelSize\x20);','float\x20prevViewPosDepth\x20=\x20prevViewPos.z\x20/\x20prevViewPos.w;','prevViewPosDepth\x20=\x20prevViewPosDepth\x20*\x200.5\x20+\x200.5;','shadow\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<\x20currentDepth\x20+\x20bias)\x20?\x20u_ShadowRatio\x20:\x201.0;','}','}','}','shadow\x20/=\x20(float(kernelSize*2+1)*float(kernelSize*2+1)*float(randomIter));','if(projectedTexcoord.z\x20>\x201.0)','shadow\x20=\x200.0;','return\x20shadow;','float\x20shadow2\x20=\x200.0;','for(int\x20x\x20=\x20-1;\x20x\x20<=\x201;\x20++x)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{','for(int\x20y\x20=\x20-1;\x20y\x20<=\x201;\x20++y)\x20{','vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture,\x20projectedTexcoord.xy\x20+\x20vec2(x,\x20y)\x20*\x20texelSize);','float\x20prevViewPosDepth\x20=\x20prevViewPos.z\x20/\x20prevViewPos.w;','prevViewPosDepth\x20=\x20prevViewPosDepth\x20*\x200.5\x20+\x200.5;','int\x20tmp=abs(x)+abs(y);','if(tmp==0)','shadow2\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<=\x20currentDepth\x20+\x20uBias)\x20?\x20u_ShadowRatio*4.0\x20\x20:\x201.0*4.0\x20;','if(tmp==1)','shadow2\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<=\x20currentDepth\x20+\x20uBias)\x20?\x20u_ShadowRatio*2.0\x20:\x201.0*2.0;','if(tmp==2)','\x20\x20\x20shadow2\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<=\x20currentDepth\x20+\x20uBias)\x20?\x20u_ShadowRatio\x20:\x201.0;','}','}','shadow2\x20/=\x2016.0;','if(projectedTexcoord.z\x20>\x201.0)','shadow2\x20=\x200.0;','}','#endif','#ifdef\x20CC_SHADING_SHADOW','float\x20random(vec3\x20seed,\x20int\x20i){\x20vec4\x20seed4\x20=\x20vec4(seed,i);\x20float\x20dot_product\x20=\x20dot(seed4,\x20vec4(12.9898,78.233,45.164,94.673));\x20return\x20fract(sin(dot_product)\x20*\x2043758.5453);}','const\x20vec2\x20poissonDisk[64]\x20=\x20vec2[](','\x20\x20vec2(\x200.282571,\x200.023957\x20),','\x20\x20vec2(\x200.792657,\x200.945738\x20),','\x20\x20vec2(\x200.922361,\x200.411756\x20),','\x20\x20vec2(\x200.165838,\x200.552995\x20),','\x20\x20vec2(\x200.566027,\x200.216651\x20),','\x20\x20vec2(\x200.335398,\x200.783654\x20),','\x20\x20vec2(\x200.0190741,\x200.318522\x20),','\x20\x20vec2(\x200.647572,\x200.581896\x20),','\x20\x20vec2(\x200.916288,\x200.0120243\x20),','\x20\x20vec2(\x200.0278329,\x200.866634\x20),','\x20\x20vec2(\x200.398053,\x200.4214\x20),','\x20\x20vec2(\x200.00289926,\x200.051149\x20),','\x20\x20vec2(\x200.517624,\x200.989044\x20),','\x20\x20vec2(\x200.963744,\x200.719901\x20),','\x20\x20vec2(\x200.76867,\x200.018128\x20),','\x20\x20vec2(\x200.684194,\x200.167302\x20),','\x20\x20vec2(\x200.727103,\x200.410871\x20),','\x20\x20vec2(\x200.557482,\x200.724143\x20),','\x20\x20vec2(\x200.483352,\x200.0527055\x20),','\x20\x20vec2(\x200.162877,\x200.351482\x20),','\x20\x20vec2(\x200.959716,\x200.180578\x20),','\x20\x20vec2(\x200.140355,\x200.112003\x20),','\x20\x20vec2(\x200.796228,\x200.223365\x20),','\x20\x20vec2(\x200.187048,\x200.787225\x20),','\x20\x20vec2(\x200.55446,\x200.35612\x20),','\x20\x20vec2(\x200.449965,\x200.640522\x20),','\x20\x20vec2(\x200.438917,\x200.194769\x20),','\x20\x20vec2(\x200.791253,\x200.565325\x20),','\x20\x20vec2(\x200.719718,\x200.794794\x20),','\x20\x20vec2(\x200.0651875,\x200.708609\x20),','\x20\x20vec2(\x200.641987,\x200.0233772\x20),','\x20\x20vec2(\x200.376415,\x200.944243\x20),','\x20\x20vec2(\x200.827723,\x200.723258\x20),','\x20\x20vec2(\x200.968627,\x200.884518\x20),','\x20\x20vec2(\x200.263405,\x200.458968\x20),','\x20\x20vec2(\x200.985717,\x200.559587\x20),','\x20\x20vec2(\x200.0616169,\x200.468612\x20),','\x20\x20vec2(\x200.159154,\x200.934782\x20),','\x20\x20vec2(\x200.287301,\x200.284768\x20),','\x20\x20vec2(\x200.550066,\x200.849391\x20),','\x20\x20vec2(\x200.353587,\x200.003296\x20),','\x20\x20vec2(\x200.000671407,\x200.582507\x20),','\x20\x20vec2(\x200.850459,\x200.461989\x20),','\x20\x20vec2(\x200.526139,\x200.640126\x20),','\x20\x20vec2(\x200.786889,\x200.487686\x20),','\x20\x20vec2(\x200.164129,\x200.02472\x20),','\x20\x20vec2(\x200.517075,\x200.90933\x20),','\x20\x20vec2(\x200.316111,\x200.663564\x20),','\x20\x20vec2(\x200.09476,\x200.895749\x20),','\x20\x20vec2(\x200.298288,\x200.195318\x20),','\x20\x20vec2(\x200.427229,\x200.7828\x20),','\x20\x20vec2(\x200.734764,\x200.266152\x20),','\x20\x20vec2(\x200.0816065,\x200.965972\x20),','\x20\x20vec2(\x200.698935,\x200.646352\x20),','\x20\x20vec2(\x200.281899,\x200.355144\x20),','\x20\x20vec2(\x200.871334,\x200.303171\x20),','\x20\x20vec2(\x200.138249,\x200.661214\x20),','\x20\x20vec2(\x200.202399,\x200.252449\x20),','\x20\x20vec2(\x200.0734275,\x200.399853\x20),','\x20\x20vec2(\x200.786767,\x200.660268\x20),','\x20\x20vec2(\x200.933744,\x200.508621\x20),','\x20\x20vec2(\x200.398236,\x200.0509049\x20),','\x20\x20vec2(\x200.500473,\x200.130253\x20),','\x20\x20vec2(\x200.0332957,\x200.526292\x20)',');','float\x20ShadowCCVSM()\x20{','vec4\x20fragPosViewSpace\x20=\x20u_Vmatrix*vec4(vVertPos,\x201.0);','float\x20depthValue\x20=\x20abs(fragPosViewSpace.z);','int\x20layer\x20=\x20-1;','for\x20(int\x20i\x20=\x200;\x20i\x20<\x20cascadeCount;\x20++i)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{','if\x20(depthValue\x20<\x20cascadePlaneDistances[i]){','\x20\x20\x20layer\x20=\x20i;','\x20\x20\x20break;','}','}','if\x20(layer\x20==\x20-1)\x20{','layer\x20=\x20cascadeCount;','}','vec3\x20projectedTexcoord;','float\x20currentDepth;','bool\x20inRange;','int\x20kernelSize=1;','int\x20randomIter=1;','vec3\x20normal\x20=\x20normalize(vNormalInterp);','vec3\x20lightDir\x20=\x20normalize(vDirectionalLightPos);','float\x20cosAngle\x20=\x20clamp(1.0f\x20-\x20dot(lightDir,\x20normal),0.0,1.0);','float\x20bias\x20=\x20-0.00085;','const\x20float\x20biasModifier\x20=\x200.5f;','float\x20shadow\x20=\x200.0;','vec2\x20texelSize\x20=\x201.0\x20/\x20vec2(textureSize(uShadowPositionTexture1,\x200));','float\x20thr=0.0;','if\x20(layer\x20==\x200)\x20{','if(shadow<=0.0\x20||\x20shadow>=1.0-thr){','\x20\x20\x20projectedTexcoord\x20=\x20vShadowCoord1.xyz\x20/\x20vShadowCoord1.w;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20currentDepth\x20=\x20projectedTexcoord.z;','\x20\x20shadow\x20=\x200.0;','\x20\x20float\x20nbias=bias;','\x20\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','for\x20(int\x20i=0;i<randomIter;i++){','for(int\x20x\x20=\x20-kernelSize;\x20x\x20<=\x20kernelSize;\x20++x)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{','for(int\x20y\x20=\x20-kernelSize;\x20y\x20<=\x20kernelSize;\x20++y)\x20{','int\x20index\x20=\x20int(128.0*random(floor(vVertPos.yxz),\x20i))%64;','vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture1,\x20projectedTexcoord.xy\x20+\x20vec2(x,\x20y)\x20*\x20texelSize\x20);','float\x20prevViewPosDepth\x20=\x20prevViewPos.z\x20/\x20prevViewPos.w;','prevViewPosDepth\x20=\x20prevViewPosDepth\x20*\x200.5\x20+\x200.5;','shadow\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<\x20currentDepth\x20+\x20nbias)\x20?\x20u_ShadowRatio\x20:\x201.0;','}','}','}','shadow\x20/=\x20(float(kernelSize*2+1)*float(kernelSize*2+1)*float(randomIter));','if(projectedTexcoord.z\x20>\x201.0)','shadow\x20=\x200.0;','}','shadow=smoothstep(-0.0,u_ShadowRatio*2.60,shadow);','return\x20shadow;','}','if\x20(layer\x20==\x201)\x20{','kernelSize=1;','randomIter=1;','thr=0.00;','texelSize\x20=\x201.0\x20/\x20vec2(textureSize(uShadowPositionTexture2,\x200));','if(shadow<=0.0\x20||\x20shadow>=1.0-thr){','\x20\x20\x20projectedTexcoord\x20=\x20vShadowCoord2.xyz\x20/\x20vShadowCoord2.w;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20currentDepth\x20=\x20projectedTexcoord.z;','shadow\x20=\x200.0;','\x20\x20float\x20nbias=bias*2.0;','\x20\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','for\x20(int\x20i=0;i<randomIter;i++){','for(int\x20x\x20=\x20-kernelSize;\x20x\x20<=\x20kernelSize;\x20++x)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{','for(int\x20y\x20=\x20-kernelSize;\x20y\x20<=\x20kernelSize;\x20++y)\x20{','int\x20index\x20=\x20int(128.0*random(floor(vVertPos.yxz),\x20i))%64;','vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture2,\x20projectedTexcoord.xy\x20+\x20vec2(x,\x20y)\x20*\x20texelSize\x20);','float\x20prevViewPosDepth\x20=\x20prevViewPos.z\x20/\x20prevViewPos.w;','prevViewPosDepth\x20=\x20prevViewPosDepth\x20*\x200.5\x20+\x200.5;','shadow\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<\x20currentDepth\x20+\x20nbias)\x20?\x20u_ShadowRatio\x20:\x201.0;','}','}','}','shadow\x20/=\x20(float(kernelSize*2+1)*float(kernelSize*2+1)*float(randomIter));','if(projectedTexcoord.z\x20>\x201.0)','shadow\x20=\x200.0;','}','shadow=smoothstep(-0.0,u_ShadowRatio*2.60,shadow);','return\x20shadow;','}','if\x20(layer\x20==\x202)\x20{','kernelSize=1;','randomIter=1;','thr=0.00;','texelSize\x20=\x201.0\x20/\x20vec2(textureSize(uShadowPositionTexture3,\x200));','if(shadow<=0.0\x20||\x20shadow>=1.0-thr){','\x20\x20\x20projectedTexcoord\x20=\x20vShadowCoord3.xyz\x20/\x20vShadowCoord3.w;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20currentDepth\x20=\x20projectedTexcoord.z;','shadow\x20=\x200.0;','\x20\x20float\x20nbias=bias*1.0;','\x20\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','for\x20(int\x20i=0;i<randomIter;i++){','for(int\x20x\x20=\x20-kernelSize;\x20x\x20<=\x20kernelSize;\x20++x)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{','for(int\x20y\x20=\x20-kernelSize;\x20y\x20<=\x20kernelSize;\x20++y)\x20{','int\x20index\x20=\x20int(128.0*random(floor(vVertPos.yxz),\x20i))%64;','vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture3,\x20projectedTexcoord.xy\x20+\x20vec2(x,\x20y)\x20*\x20texelSize\x20);','float\x20prevViewPosDepth\x20=\x20prevViewPos.z\x20/\x20prevViewPos.w;','prevViewPosDepth\x20=\x20prevViewPosDepth\x20*\x200.5\x20+\x200.5;','shadow\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<\x20currentDepth\x20+\x20nbias)\x20?\x20u_ShadowRatio\x20:\x201.0;','}','}','}','shadow\x20/=\x20(float(kernelSize*2+1)*float(kernelSize*2+1)*float(randomIter));','if(projectedTexcoord.z\x20>\x201.0)','shadow\x20=\x200.0;','}','shadow=smoothstep(-0.0,u_ShadowRatio*2.60,shadow);','return\x20shadow;','}','if\x20(layer\x20==\x203)\x20{','kernelSize=1;','randomIter=1;','thr=0.00;','texelSize\x20=\x201.0\x20/\x20vec2(textureSize(uShadowPositionTexture4,\x200));','if(shadow<=0.0\x20||\x20shadow>=1.0-thr){','\x20\x20\x20projectedTexcoord\x20=\x20vShadowCoord4.xyz\x20/\x20vShadowCoord4.w;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20currentDepth\x20=\x20projectedTexcoord.z;','shadow\x20=\x200.0;','\x20\x20float\x20nbias=bias*1.5;','\x20\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','for\x20(int\x20i=0;i<randomIter;i++){','for(int\x20x\x20=\x20-kernelSize;\x20x\x20<=\x20kernelSize;\x20++x)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{','for(int\x20y\x20=\x20-kernelSize;\x20y\x20<=\x20kernelSize;\x20++y)\x20{','int\x20index\x20=\x20int(128.0*random(floor(vVertPos.yxz),\x20i))%64;','vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture4,\x20projectedTexcoord.xy\x20+\x20vec2(x,\x20y)\x20*\x20texelSize\x20);','float\x20prevViewPosDepth\x20=\x20prevViewPos.z\x20/\x20prevViewPos.w;','prevViewPosDepth\x20=\x20prevViewPosDepth\x20*\x200.5\x20+\x200.5;','shadow\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<\x20currentDepth\x20+\x20nbias)\x20?\x20u_ShadowRatio\x20:\x201.0;','}','}','}','shadow\x20/=\x20(float(kernelSize*2+1)*float(kernelSize*2+1)*float(randomIter));','if(projectedTexcoord.z\x20>\x201.0)','shadow\x20=\x200.0;','}','shadow=smoothstep(-0.0,u_ShadowRatio*2.60,shadow);','return\x20shadow;','}','if\x20(layer\x20==\x204)\x20{','kernelSize=1;','randomIter=1;','thr=0.00;','texelSize\x20=\x201.0\x20/\x20vec2(textureSize(uShadowPositionTexture5,\x200));','if(shadow<=0.0\x20||\x20shadow>=1.0-thr){','\x20\x20\x20projectedTexcoord\x20=\x20vShadowCoord5.xyz\x20/\x20vShadowCoord5.w;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20currentDepth\x20=\x20projectedTexcoord.z;','shadow\x20=\x200.0;','\x20\x20float\x20nbias=bias*1.00;','\x20\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','for\x20(int\x20i=0;i<randomIter;i++){','for(int\x20x\x20=\x20-kernelSize;\x20x\x20<=\x20kernelSize;\x20++x)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{','for(int\x20y\x20=\x20-kernelSize;\x20y\x20<=\x20kernelSize;\x20++y)\x20{','int\x20index\x20=\x20int(128.0*random(floor(vVertPos.yxz),\x20i))%64;','vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture5,\x20projectedTexcoord.xy\x20+\x20vec2(x,\x20y)\x20*\x20texelSize\x20);','float\x20prevViewPosDepth\x20=\x20prevViewPos.z\x20/\x20prevViewPos.w;','prevViewPosDepth\x20=\x20prevViewPosDepth\x20*\x200.5\x20+\x200.5;','shadow\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<\x20currentDepth\x20+\x20nbias)\x20?\x20u_ShadowRatio\x20:\x201.0;','}','}','}','shadow\x20/=\x20(float(kernelSize*2+1)*float(kernelSize*2+1)*float(randomIter));','if(projectedTexcoord.z\x20>\x201.0)','shadow\x20=\x200.0;','}','shadow=smoothstep(-0.0,u_ShadowRatio*2.60,shadow);','return\x20shadow;','}','return\x20shadow;','}','#endif','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09float\x20shini\x20=\x20fShininess;\x20','\x09float\x20rough\x20=\x20u_Roughness;','\x09float\x20metal\x20=\x20u_Metallic;','\x20\x20\x20if(useTextureRoughness\x20==\x201)\x20{','\x09\x20\x20\x20rough\x20=\x20texture(u_texRoughness,\x20vUV.xy).r;','\x20\x20\x20}','\x20\x20\x20if(useTextureMetalness\x20==\x201)\x20{','\x09\x20\x20\x20\x20metal\x20=\x20texture(u_texMetalness,\x20vUV.xy).g;','\x20\x20\x20}','\x09float\x20shininess\x20=\x20mix(0.0,\x201.0,\x20shini);','\x09float\x20roughness\x20=\x20mix(0.0,\x201.0,\x20rough);','\x09float\x20metallic\x20=\x20mix(0.0,\x201.0,\x20metal);','\x09float\x20smoothness\x20=\x201.0\x20-\x20roughness;','\x0a#ifdef\x20SHADING_FLAT','vec3\x20vVertPosU\x20=\x20dFdx(vVertPos);','vec3\x20vVertPosV\x20=\x20dFdy(vVertPos);','normal\x20=\x20normalize(cross(vVertPosU,vVertPosV));','\x0a#endif','\x09vec3\x20baseColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20baseColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x0a#ifdef\x20SHADING_HDR','\x09baseColor\x20=\x20pow(baseColor,\x20vec3(2.2));','\x0a#endif','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20tangentNormal\x20=\x20normalize((texture(u_texNormal,\x20vUV.xy).rgb\x20*\x202.0)\x20-\x201.0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q1\x20\x20=\x20dFdx(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q2\x20\x20=\x20dFdy(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st1\x20=\x20dFdx(vUV);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st2\x20=\x20dFdy(vUV);','\x20\x20\x20\x20\x20\x20\x20vec3\x20N\x20\x20\x20=\x20normal;','\x20\x20\x20\x20\x20\x20\x20vec3\x20T\x20\x20=\x20normalize(Q1*st2.t\x20-\x20Q2*st1.t);','\x20\x20\x20\x20\x20\x20\x20vec3\x20B\x20\x20=\x20-normalize(cross(N,\x20T));','\x20\x20\x20\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(T,\x20B,\x20N);','\x20\x20\x20\x20\x20\x20\x20normal\x20=\x20normalize(TBN\x20*\x20tangentNormal);','\x20\x20\x20}','\x20\x20\x20vec3\x20V\x20=\x20normalize(vEyePos\x20\x20-\x20vVertPos);','\x09vec3\x20N\x20=\x20normalize(normal);','\x20\x20\x20vec3\x20R\x20=\x20reflect(-V,\x20N);\x20','\x09vec3\x20F0\x20=\x20vec3(shininess);','\x09F0\x20=\x20F0\x20*\x200.08;','\x09F0\x20=\x20F0\x20*\x20(1.0\x20-\x20metallic)\x20+\x20baseColor.rgb\x20*\x20metallic;','\x09float\x20NdV\x20=\x20dot(N,\x20V);','\x20if(NdV<=0.0){','\x20\x20\x20\x20NdV*=-1.0;','\x20\x20\x20\x20N*=-1.0;','}','\x09vec3\x20diffuse\x20=\x20baseColor.rgb;','\x09vec3\x20Lo\x20=\x20vec3(0.0);','\x20\x20\x20for(int\x20i\x20=\x200\x20;\x20i\x20<\x20uLightNum\x20;\x20++i)','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20length(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20attenuation\x20=\x201.0\x20/\x20(distance\x20*\x20distance);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20radiance\x20=\x20vLightColor[i]\x20*\x20attenuation\x20*\x20100.0\x20*\x20100.0;','\x20\x20\x20\x20\x20\x20\x20\x20float\x20NDF\x20=\x20DistributionGGX(N,\x20H,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20G\x20\x20\x20=\x20GeometrySmith(N,\x20V,\x20L,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20F\x20\x20\x20\x20=\x20fresnelSchlick(HdV,\x20F0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20numerator\x20\x20\x20\x20=\x20NDF\x20*\x20G\x20*\x20F;','\x20\x20\x20\x20\x20\x20\x20float\x20denominator\x20=\x204.0\x20*\x20NdV\x20*\x20NdL\x20+\x200.0001;','\x20\x20\x20\x20\x20\x20\x20vec3\x20specular\x20=\x20numerator\x20/\x20denominator;','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20kS\x20=\x20F;','\x20\x20\x20\x20\x20\x20\x20vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20(kD\x20*\x20diffuse\x20/\x20SH_PI\x20+\x20specular)\x20*\x20radiance\x20*\x20NdL;','\x09}','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09\x09vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x09\x09float\x20specColorAlpha\x20=\x200.5;','\x09\x09float\x20oneMinusReflectivity\x20=\x20specColorAlpha\x20-\x20specColorAlpha\x20*\x20metallic;','\x09\x09vec3\x20diffColor\x20=\x20diffuse\x20*\x20oneMinusReflectivity;','\x09\x09float\x20diffuseTerm\x20=\x20DisneyDiffuse(NdV,\x20NdL,\x20LdH,\x20roughness)\x20*\x20NdL;','\x09\x09vec3\x20F\x20=\x20fresnelSchlick(HdV,\x20F0);','\x09\x09vec3\x20kS\x20=\x20F;','\x09\x09vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x09\x09float\x20V\x20=\x20SmithJointGGXVisibilityTerm(NdL,\x20NdV,\x20roughness);','\x09\x09float\x20D\x20=\x20GGXTerm(NdH,\x20roughness);','\x09\x09float\x20specularTerm\x20=\x20V\x20*\x20D\x20*\x20SH_PI;','\x09\x09specularTerm\x20=\x20max(0.0,\x20specularTerm\x20*\x20NdL);','\x09\x09float\x20surfaceReduction\x20=\x201.0\x20/\x20(roughness*roughness*roughness*roughness\x20+\x201.0);','\x09\x09if(F0.x\x20+\x20F0.y\x20+\x20F0.z\x20<=\x200.0)','\x09\x09\x09specularTerm\x20*=\x200.0;','\x09\x09float\x20grazingTerm\x20=\x20smoothness\x20*\x20smoothness\x20+\x20(1.0\x20-\x20oneMinusReflectivity);','\x09\x09grazingTerm\x20=\x20max(min(grazingTerm,\x201.0),\x200.0);','\x09\x09Lo\x20+=\x20kD\x20*\x20diffColor\x20*\x20vDirectionalLightColor\x20*\x20diffuseTerm;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20vDirectionalLightColor\x20*\x20specularTerm\x20*\x20fresnelSchlick(LdH,\x20F0);','\x09}','\x09float\x20AO\x20=\x201.0;','\x20\x20\x20if(useTextureAO\x20==\x201){','\x09\x20\x20\x20\x20AO\x20=\x20texture(u_texAO,\x20vUV.xy).r;','\x20\x20\x20}','\x09vec3\x20ambient\x20=\x20vAmbientColor;','\x20\x20\x20vec3\x20specular\x20=\x20vec3(0.0);','\x09vec3\x20kSA\x20=\x20fresnelSchlickRoughness(NdV,\x20F0,\x20roughness);','\x09vec3\x20kDA\x20=\x20vec3(1.0)\x20-\x20kSA;','\x09kDA\x20*=\x201.0\x20-\x20metallic;','#ifdef\x20SHADING_ENVIRONMENT','\x20\x20\x20vec3\x20irradiance\x20=\x20texture(u_texIrradianceMap,\x20N).rgb;','\x20\x20\x20diffuse\x20=\x20irradiance\x20*\x20diffuse;','\x20\x20\x20const\x20float\x20MAX_REFLECTION_LOD\x20=\x204.0;','\x20\x20\x20vec3\x20prefilteredColor\x20=\x20textureLod(u_texPrefilterMap,\x20R,\x20\x20roughness\x20*\x20MAX_REFLECTION_LOD).rgb;','\x20\x20\x20vec2\x20brdf\x20=\x20texture(u_texbrdfLUT,\x20vec2(NdV,\x20roughness)).xy;','\x20\x20\x20specular\x20=\x20prefilteredColor\x20*\x20(kSA\x20*\x20brdf.x\x20+\x20brdf.y);','#endif','\x09ambient\x20=\x20(kDA\x20*\x20ambient\x20*\x20diffuse\x20+\x20specular)\x20*\x20AO;','\x09vec3\x20fragColor\x20=\x20ambient','\x09+\x20Lo;','#ifdef\x20SHADING_SHADOW','\x20\x20\x20float\x20fShadow\x20=\x20ShadowVSM();','\x20\x20\x20fragColor\x20=\x20fragColor\x20*\x20fShadow;','#endif','#ifdef\x20CC_SHADING_SHADOW','\x20\x20\x20float\x20fShadow\x20=\x20ShadowCCVSM();','\x20\x20\x20fragColor\x20=\x20fragColor\x20*\x20fShadow;','#endif','\x0a#ifdef\x20SHADING_HDR','\x0a#ifdef\x20SHADING_FURSYS_HDR','\x20\x20\x20fragColor\x20=\x20fragColor\x20/\x204.0;','\x0a#else','\x20\x20\x20fragColor\x20=\x20fragColor\x20/\x20(fragColor\x20+\x20vec3(1.0));','\x0a#endif','\x20\x20\x20fragColor\x20=\x20pow(fragColor,\x20vec3(1.0\x20/\x202.2));\x20','\x0a#endif','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(fragColor.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20fragColor\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x20\x20\x20if(useTextureAlpha\x20==\x201)\x20{','\x20\x20\x20\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20texture(u_texAlpha,\x20vUV.xy).r;','\x20\x20\x20}','\x20\x20\x20vec4\x20glslColor\x20=\x20vec4(fragColor,\x20baseAlpha);','\x0a#ifdef\x20SHADING_FOG','\x20\x20\x20float\x20fogAmount\x20=\x201.0;','\x20\x20\x20float\x20fogDepth\x20=\x20length(u_fogCenter\x20-\x20vVertPos);','\x20\x20\x20fogAmount\x20=\x20smoothstep(u_fogNear,\x20u_fogFar,\x20fogDepth);','\x20\x20\x20glslColor\x20=\x20glslColor\x20*\x20(1.0\x20-\x20fogAmount)\x20+\x20u_fogColor\x20*\x20fogAmount;','\x0a#endif','\x09o_FragColor\x20=\x20glslColor;','\x0a#ifdef\x20LOG_DEPTH','\x20float\x20hFceof\x20=\x201.0\x20/\x20log2(uFar+1.0);','gl_FragDepth\x20=\x20log2(flogz)\x20*\x20hFceof;','\x0a#endif','\x20\x20\x20if(o_FragColor.a\x20<\x200.003)','\x20\x20\x20\x20discard;','}']['join']('\x0a')},'PBR_v4':{'vertex':['\x0ain\x20vec3\x20a_position;','in\x20vec3\x20a_normal;','in\x20vec2\x20a_uv;','in\x20float\x20a_tInd;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_IMVmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_Pmatrix;','uniform\x20mat4\x20u_Mmatrix;','uniform\x20mat4\x20u_Vmatrix;','uniform\x20mat4\x20u_Imatrix;','uniform\x20float\x20uFar;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','out\x20vec2\x20vUV;','out\x20vec3\x20vNormalInterp;','out\x20vec3\x20vVertPos;','out\x20vec2\x20vCUV;','uniform\x20float\x20uColorMapSize;','#ifdef\x20LOG_DEPTH','out\x20float\x20flogz;','#endif','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','in\x20vec3\x20a_matrixIdx;','#endif','#ifdef\x20SHADING_SHADOW','uniform\x20mat4\x20u_MVPShadowMatrix;','out\x20vec4\x20vShadowCoord;','#endif','#ifdef\x20CC_SHADING_SHADOW','uniform\x20mat4\x20u_MVPShadowMatrix1;','uniform\x20mat4\x20u_MVPShadowMatrix2;','uniform\x20mat4\x20u_MVPShadowMatrix3;','uniform\x20mat4\x20u_MVPShadowMatrix4;','uniform\x20mat4\x20u_MVPShadowMatrix5;','out\x20vec4\x20vShadowCoord1;','out\x20vec4\x20vShadowCoord2;','out\x20vec4\x20vShadowCoord3;','out\x20vec4\x20vShadowCoord4;','out\x20vec4\x20vShadowCoord5;','out\x20vec3\x20FragPos;','#endif','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x0a#ifdef\x20LOG_DEPTH','\x20\x20\x20float\x20Fcoef\x20=\x202.0\x20/\x20log2(uFar+1.0);','\x20\x20\x20gl_Position.z\x20=\x20log2(max(1e-6,\x201.0\x20+\x20gl_Position.w))\x20*\x20Fcoef\x20-\x201.0;','\x20\x20\x20flogz\x20=\x201.0\x20+\x20gl_Position.w;','\x20\x20\x20#endif','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','\x20\x20\x20float\x20cInd=a_tInd;','\x20\x20\x20float\x20row\x20=floor(cInd/uColorMapSize);','\x20\x20\x20float\x20col\x20=mod(cInd,uColorMapSize);','\x20\x20\x20vCUV=vec2(col,row);','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','\x20\x20\x20vUV.y\x20=\x201.0\x20-\x20vUV.y;','\x20\x20\x20#ifdef\x20SHADING_SHADOW','\x20\x20\x20vec4\x20shadowPosition\x20=\x20u_MVPShadowMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord\x20=\x20shadowPosition;','\x20\x20\x20#endif','\x20\x20\x20#ifdef\x20CC_SHADING_SHADOW','\x20\x20\x20vec4\x20shadowPosition\x20=\x20u_MVPShadowMatrix1\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord1\x20=\x20shadowPosition;','\x20\x20\x20vec4\x20shadowPosition2\x20=\x20u_MVPShadowMatrix2\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord2\x20=\x20shadowPosition2;','\x20\x20\x20vec4\x20shadowPosition3\x20=\x20u_MVPShadowMatrix3\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord3\x20=\x20shadowPosition3;','\x20\x20\x20vec4\x20shadowPosition4\x20=\x20u_MVPShadowMatrix4\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord4\x20=\x20shadowPosition4;','\x20\x20\x20vec4\x20shadowPosition5\x20=\x20u_MVPShadowMatrix5\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord5\x20=\x20shadowPosition5;','\x20\x20\x20vec3\x20FragPos\x20=\x20vec3(u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0));','\x20\x20\x20#endif','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20float\x20ubPerspectiveView;','uniform\x20float\x20uFar;','in\x20vec2\x20vCUV;','uniform\x20sampler2D\x20u_ColorMap;','uniform\x20float\x20uColorMapSize;','\x0a#ifdef\x20SHADING_SHADOW','uniform\x20sampler2D\x20uShadowPositionTexture;','uniform\x20float\x20uBias;','uniform\x20float\x20u_ShadowRatio;','in\x20vec4\x20vShadowCoord;','\x0a#endif','\x0a#ifdef\x20CC_SHADING_SHADOW','uniform\x20sampler2D\x20uShadowPositionTexture1;','uniform\x20sampler2D\x20uShadowPositionTexture2;','uniform\x20sampler2D\x20uShadowPositionTexture3;','uniform\x20sampler2D\x20uShadowPositionTexture4;','uniform\x20sampler2D\x20uShadowPositionTexture5;','uniform\x20float\x20uBias;','uniform\x20float\x20u_ShadowRatio;','in\x20vec4\x20vShadowCoord1;','in\x20vec4\x20vShadowCoord2;','in\x20vec4\x20vShadowCoord3;','in\x20vec4\x20vShadowCoord4;','in\x20vec4\x20vShadowCoord5;','uniform\x20mat4\x20u_MVPShadowMatrix1;','uniform\x20mat4\x20u_MVPShadowMatrix2;','uniform\x20mat4\x20u_MVPShadowMatrix3;','uniform\x20mat4\x20u_MVPShadowMatrix4;','uniform\x20mat4\x20u_MVPShadowMatrix5;','in\x20vec3\x20FragPos;','uniform\x20mat4\x20u_Vmatrix;','uniform\x20float\x20cascadePlaneDistances[4];','int\x20cascadeCount\x20=\x204;','\x0a#endif','\x0a#ifdef\x20SHADING_UV_ANIMATION','uniform\x20int\x20useUVAnimation;','uniform\x20vec2\x20u_UV_Direction;','uniform\x20float\x20u_UVTime;','\x0a#endif','\x0a#ifdef\x20SHADING_FOG','uniform\x20vec4\x20u_fogColor;','uniform\x20vec3\x20u_fogCenter;','uniform\x20float\x20u_fogNear;','uniform\x20float\x20u_fogFar;','\x0a#endif','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20float\x20fShininess;','uniform\x20float\x20u_Roughness;','uniform\x20float\x20u_Metallic;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20int\x20useTextureRoughness;','uniform\x20sampler2D\x20u_texRoughness;','uniform\x20int\x20useTextureMetalness;','uniform\x20sampler2D\x20u_texMetalness;','uniform\x20int\x20useTextureAO;','uniform\x20sampler2D\x20u_texAO;','uniform\x20int\x20useTextureAlpha;','uniform\x20sampler2D\x20u_texAlpha;','uniform\x20int\x20useTextureSpecluar;','\x0a#ifdef\x20SHADING_ENVIRONMENT','uniform\x20samplerCube\x20u_texIrradianceMap;','uniform\x20samplerCube\x20u_texPrefilterMap;','uniform\x20sampler2D\x20\x20u_texbrdfLUT;','\x0a#endif','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','uniform\x20int\x20uLightNum;','uniform\x20vec3\x20vLightPos[4];','uniform\x20vec3\x20vLightColor[4];','in\x20vec2\x20vUV;','in\x20vec3\x20vNormalInterp;','in\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseGraySacle;','const\x20float\x20SH_PI\x20=\x203.14159265359;','const\x20float\x20SH_INV_PI\x20=\x200.31830988618;','layout(location\x20=\x200)\x20out\x20vec4\x20o_FragColor;','uniform\x20float\x20u_alpha;','uniform\x20float\x20u_isolate;','\x0a#ifdef\x20LOG_DEPTH','in\x20float\x20flogz;','\x0a#endif','vec3\x20lerp(vec3\x20a,\x20vec3\x20b,\x20float\x20w)','{','\x20\x20return\x20a\x20+\x20vec3(w*(b-a));','}','vec3\x20fresnelSchlickRoughness(float\x20cosTheta,\x20vec3\x20F0,\x20float\x20roughness)','{','\x09return\x20F0\x20+\x20(max(vec3(1.0\x20-\x20roughness),\x20F0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelSchlick(float\x20cosTheta,\x20vec3\x20F0)','{','\x09\x20return\x20F0\x20+\x20(vec3(1.0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelLerp\x20(float\x20cosA,\x20vec3\x20F0,\x20vec3\x20F90)','{','\x20\x20\x20\x20float\x20t\x20=\x20\x20pow(1.0\x20-\x20cosA,\x205.0);','\x20\x20\x20\x20return\x20lerp\x20(F0,\x20F90,\x20t);','}','float\x20GeometrySchlickGGX(float\x20NdotV,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20r\x20=\x20(roughness\x20+\x201.0);','\x20\x20\x20\x20float\x20k\x20=\x20(r*r)\x20/\x208.0;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20NdotV;','\x20\x20\x20\x20float\x20denom\x20=\x20NdotV\x20*\x20(1.0\x20-\x20k)\x20+\x20k;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20GeometrySmith(vec3\x20N,\x20vec3\x20V,\x20vec3\x20L,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20NdotV\x20=\x20max(dot(N,\x20V),\x200.0);','\x20\x20\x20\x20float\x20NdotL\x20=\x20max(dot(N,\x20L),\x200.0);','\x20\x20\x20\x20float\x20ggx2\x20=\x20GeometrySchlickGGX(NdotV,\x20roughness);','\x20\x20\x20\x20float\x20ggx1\x20=\x20GeometrySchlickGGX(NdotL,\x20roughness);','\x20\x20\x20\x20return\x20ggx1\x20*\x20ggx2;','}','float\x20DistributionGGX(vec3\x20N,\x20vec3\x20H,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20a\x20=\x20roughness*roughness;','\x20\x20\x20\x20float\x20a2\x20=\x20a*a;','\x20\x20\x20\x20float\x20NdotH\x20=\x20max(dot(N,\x20H),\x200.0);','\x20\x20\x20\x20float\x20NdotH2\x20=\x20NdotH*NdotH;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20a2;','\x20\x20\x20\x20float\x20denom\x20=\x20(NdotH2\x20*\x20(a2\x20-\x201.0)\x20+\x201.0);','\x20\x20\x20\x20denom\x20=\x20SH_PI\x20*\x20denom\x20*\x20denom;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20DisneyDiffuse(float\x20NdV,\x20float\x20NdL,\x20float\x20LdH,\x20float\x20roughness)','{','\x09float\x20fd90\x20=\x200.5\x20+\x202.0\x20*\x20LdH\x20*\x20LdH\x20*\x20roughness;','\x09float\x20lightScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdL,\x205.0));','\x09float\x20viewScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdV,\x205.0));','\x09return\x20lightScatter\x20*\x20viewScatter;','}','float\x20GGXTerm(float\x20NdH,\x20float\x20roughness)','{','\x09float\x20a2\x20=\x20roughness\x20*\x20roughness\x20*\x20roughness\x20*\x20roughness;','\x09float\x20d\x20=\x20(NdH\x20*\x20a2\x20-\x20NdH)\x20*\x20NdH\x20+\x201.0;','\x09return\x20SH_INV_PI\x20*\x20a2\x20/\x20(d\x20*\x20d\x20+\x200.00000001);','}','float\x20SmithJointGGXVisibilityTerm(float\x20NdotL,\x20float\x20NdotV,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness*roughness;','\x09float\x20lambdaV\x20=\x20NdotL\x20*\x20(NdotV\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09float\x20lambdaL\x20=\x20NdotV\x20*\x20(NdotL\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09return\x200.5\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x200.0001);','}','#ifdef\x20SHADING_SHADOW','float\x20random(vec3\x20seed,\x20int\x20i){\x20vec4\x20seed4\x20=\x20vec4(seed,i);\x20float\x20dot_product\x20=\x20dot(seed4,\x20vec4(12.9898,78.233,45.164,94.673));\x20return\x20fract(sin(dot_product)\x20*\x2043758.5453);}','const\x20vec2\x20poissonDisk[64]\x20=\x20vec2[](','\x20\x20vec2(\x200.282571,\x200.023957\x20),','\x20\x20vec2(\x200.792657,\x200.945738\x20),','\x20\x20vec2(\x200.922361,\x200.411756\x20),','\x20\x20vec2(\x200.165838,\x200.552995\x20),','\x20\x20vec2(\x200.566027,\x200.216651\x20),','\x20\x20vec2(\x200.335398,\x200.783654\x20),','\x20\x20vec2(\x200.0190741,\x200.318522\x20),','\x20\x20vec2(\x200.647572,\x200.581896\x20),','\x20\x20vec2(\x200.916288,\x200.0120243\x20),','\x20\x20vec2(\x200.0278329,\x200.866634\x20),','\x20\x20vec2(\x200.398053,\x200.4214\x20),','\x20\x20vec2(\x200.00289926,\x200.051149\x20),','\x20\x20vec2(\x200.517624,\x200.989044\x20),','\x20\x20vec2(\x200.963744,\x200.719901\x20),','\x20\x20vec2(\x200.76867,\x200.018128\x20),','\x20\x20vec2(\x200.684194,\x200.167302\x20),','\x20\x20vec2(\x200.727103,\x200.410871\x20),','\x20\x20vec2(\x200.557482,\x200.724143\x20),','\x20\x20vec2(\x200.483352,\x200.0527055\x20),','\x20\x20vec2(\x200.162877,\x200.351482\x20),','\x20\x20vec2(\x200.959716,\x200.180578\x20),','\x20\x20vec2(\x200.140355,\x200.112003\x20),','\x20\x20vec2(\x200.796228,\x200.223365\x20),','\x20\x20vec2(\x200.187048,\x200.787225\x20),','\x20\x20vec2(\x200.55446,\x200.35612\x20),','\x20\x20vec2(\x200.449965,\x200.640522\x20),','\x20\x20vec2(\x200.438917,\x200.194769\x20),','\x20\x20vec2(\x200.791253,\x200.565325\x20),','\x20\x20vec2(\x200.719718,\x200.794794\x20),','\x20\x20vec2(\x200.0651875,\x200.708609\x20),','\x20\x20vec2(\x200.641987,\x200.0233772\x20),','\x20\x20vec2(\x200.376415,\x200.944243\x20),','\x20\x20vec2(\x200.827723,\x200.723258\x20),','\x20\x20vec2(\x200.968627,\x200.884518\x20),','\x20\x20vec2(\x200.263405,\x200.458968\x20),','\x20\x20vec2(\x200.985717,\x200.559587\x20),','\x20\x20vec2(\x200.0616169,\x200.468612\x20),','\x20\x20vec2(\x200.159154,\x200.934782\x20),','\x20\x20vec2(\x200.287301,\x200.284768\x20),','\x20\x20vec2(\x200.550066,\x200.849391\x20),','\x20\x20vec2(\x200.353587,\x200.003296\x20),','\x20\x20vec2(\x200.000671407,\x200.582507\x20),','\x20\x20vec2(\x200.850459,\x200.461989\x20),','\x20\x20vec2(\x200.526139,\x200.640126\x20),','\x20\x20vec2(\x200.786889,\x200.487686\x20),','\x20\x20vec2(\x200.164129,\x200.02472\x20),','\x20\x20vec2(\x200.517075,\x200.90933\x20),','\x20\x20vec2(\x200.316111,\x200.663564\x20),','\x20\x20vec2(\x200.09476,\x200.895749\x20),','\x20\x20vec2(\x200.298288,\x200.195318\x20),','\x20\x20vec2(\x200.427229,\x200.7828\x20),','\x20\x20vec2(\x200.734764,\x200.266152\x20),','\x20\x20vec2(\x200.0816065,\x200.965972\x20),','\x20\x20vec2(\x200.698935,\x200.646352\x20),','\x20\x20vec2(\x200.281899,\x200.355144\x20),','\x20\x20vec2(\x200.871334,\x200.303171\x20),','\x20\x20vec2(\x200.138249,\x200.661214\x20),','\x20\x20vec2(\x200.202399,\x200.252449\x20),','\x20\x20vec2(\x200.0734275,\x200.399853\x20),','\x20\x20vec2(\x200.786767,\x200.660268\x20),','\x20\x20vec2(\x200.933744,\x200.508621\x20),','\x20\x20vec2(\x200.398236,\x200.0509049\x20),','\x20\x20vec2(\x200.500473,\x200.130253\x20),','\x20\x20vec2(\x200.0332957,\x200.526292\x20)',');','float\x20ShadowVSM()\x20{','\x20\x20\x20vec3\x20projectedTexcoord\x20=\x20vShadowCoord.xyz\x20/\x20vShadowCoord.w;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20float\x20currentDepth\x20=\x20projectedTexcoord.z;','\x20\x20\x20bool\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','vec3\x20normal\x20=\x20normalize(vNormalInterp);','vec3\x20lightDir\x20=\x20normalize(vDirectionalLightPos);','float\x20cosAngle\x20=\x20clamp(1.0f\x20-\x20dot(lightDir,\x20normal),0.0,1.0);','float\x20bias\x20=\x20-0.065;//-max(0.050\x20*\x20(1.0\x20-\x20dot(normal,\x20lightDir)),\x200.010);','float\x20shadow\x20=\x200.0;','vec2\x20texelSize\x20=\x201.0\x20/\x20vec2(textureSize(uShadowPositionTexture,\x200));','int\x20randomIter=2;','int\x20kernelSize=1;','for\x20(int\x20i=0;i<randomIter;i++){','for(int\x20x\x20=\x20-kernelSize;\x20x\x20<=\x20kernelSize;\x20++x)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{','for(int\x20y\x20=\x20-kernelSize;\x20y\x20<=\x20kernelSize;\x20++y)\x20{','int\x20index\x20=\x20int(64.0*random(floor(vVertPos.xyy),\x20i))%64;','vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture,\x20projectedTexcoord.xy\x20+\x20vec2(x,\x20y)\x20*\x20texelSize\x20+\x20poissonDisk[index]*texelSize*1.5);','float\x20prevViewPosDepth\x20=\x20prevViewPos.z\x20/\x20prevViewPos.w;','prevViewPosDepth\x20=\x20prevViewPosDepth\x20*\x200.5\x20+\x200.5;','shadow\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<\x20currentDepth\x20+\x20bias)\x20?\x20u_ShadowRatio\x20:\x201.0;','}','}','}','shadow\x20/=\x20(float(kernelSize*2+1)*float(kernelSize*2+1)*float(randomIter));','if(projectedTexcoord.z\x20>\x201.0)','shadow\x20=\x200.0;','shadow=smoothstep(-u_ShadowRatio*0.5,u_ShadowRatio*2.60,shadow);','return\x20shadow;','float\x20shadow2\x20=\x200.0;','for(int\x20x\x20=\x20-1;\x20x\x20<=\x201;\x20++x)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{','for(int\x20y\x20=\x20-1;\x20y\x20<=\x201;\x20++y)\x20{','vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture,\x20projectedTexcoord.xy\x20+\x20vec2(x,\x20y)\x20*\x20texelSize);','float\x20prevViewPosDepth\x20=\x20prevViewPos.z\x20/\x20prevViewPos.w;','prevViewPosDepth\x20=\x20prevViewPosDepth\x20*\x200.5\x20+\x200.5;','int\x20tmp=abs(x)+abs(y);','if(tmp==0)','shadow2\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<=\x20currentDepth\x20+\x20uBias)\x20?\x20u_ShadowRatio*4.0\x20\x20:\x201.0*4.0\x20;','if(tmp==1)','shadow2\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<=\x20currentDepth\x20+\x20uBias)\x20?\x20u_ShadowRatio*2.0\x20:\x201.0*2.0;','if(tmp==2)','\x20\x20\x20shadow2\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<=\x20currentDepth\x20+\x20uBias)\x20?\x20u_ShadowRatio\x20:\x201.0;','}','}','shadow2\x20/=\x2016.0;','if(projectedTexcoord.z\x20>\x201.0)','shadow2\x20=\x200.0;','}','#endif','#ifdef\x20CC_SHADING_SHADOW','float\x20random(vec3\x20seed,\x20int\x20i){\x20vec4\x20seed4\x20=\x20vec4(seed,i);\x20float\x20dot_product\x20=\x20dot(seed4,\x20vec4(12.9898,78.233,45.164,94.673));\x20return\x20fract(sin(dot_product)\x20*\x2043758.5453);}','const\x20vec2\x20poissonDisk[64]\x20=\x20vec2[](','\x20\x20vec2(\x200.282571,\x200.023957\x20),','\x20\x20vec2(\x200.792657,\x200.945738\x20),','\x20\x20vec2(\x200.922361,\x200.411756\x20),','\x20\x20vec2(\x200.165838,\x200.552995\x20),','\x20\x20vec2(\x200.566027,\x200.216651\x20),','\x20\x20vec2(\x200.335398,\x200.783654\x20),','\x20\x20vec2(\x200.0190741,\x200.318522\x20),','\x20\x20vec2(\x200.647572,\x200.581896\x20),','\x20\x20vec2(\x200.916288,\x200.0120243\x20),','\x20\x20vec2(\x200.0278329,\x200.866634\x20),','\x20\x20vec2(\x200.398053,\x200.4214\x20),','\x20\x20vec2(\x200.00289926,\x200.051149\x20),','\x20\x20vec2(\x200.517624,\x200.989044\x20),','\x20\x20vec2(\x200.963744,\x200.719901\x20),','\x20\x20vec2(\x200.76867,\x200.018128\x20),','\x20\x20vec2(\x200.684194,\x200.167302\x20),','\x20\x20vec2(\x200.727103,\x200.410871\x20),','\x20\x20vec2(\x200.557482,\x200.724143\x20),','\x20\x20vec2(\x200.483352,\x200.0527055\x20),','\x20\x20vec2(\x200.162877,\x200.351482\x20),','\x20\x20vec2(\x200.959716,\x200.180578\x20),','\x20\x20vec2(\x200.140355,\x200.112003\x20),','\x20\x20vec2(\x200.796228,\x200.223365\x20),','\x20\x20vec2(\x200.187048,\x200.787225\x20),','\x20\x20vec2(\x200.55446,\x200.35612\x20),','\x20\x20vec2(\x200.449965,\x200.640522\x20),','\x20\x20vec2(\x200.438917,\x200.194769\x20),','\x20\x20vec2(\x200.791253,\x200.565325\x20),','\x20\x20vec2(\x200.719718,\x200.794794\x20),','\x20\x20vec2(\x200.0651875,\x200.708609\x20),','\x20\x20vec2(\x200.641987,\x200.0233772\x20),','\x20\x20vec2(\x200.376415,\x200.944243\x20),','\x20\x20vec2(\x200.827723,\x200.723258\x20),','\x20\x20vec2(\x200.968627,\x200.884518\x20),','\x20\x20vec2(\x200.263405,\x200.458968\x20),','\x20\x20vec2(\x200.985717,\x200.559587\x20),','\x20\x20vec2(\x200.0616169,\x200.468612\x20),','\x20\x20vec2(\x200.159154,\x200.934782\x20),','\x20\x20vec2(\x200.287301,\x200.284768\x20),','\x20\x20vec2(\x200.550066,\x200.849391\x20),','\x20\x20vec2(\x200.353587,\x200.003296\x20),','\x20\x20vec2(\x200.000671407,\x200.582507\x20),','\x20\x20vec2(\x200.850459,\x200.461989\x20),','\x20\x20vec2(\x200.526139,\x200.640126\x20),','\x20\x20vec2(\x200.786889,\x200.487686\x20),','\x20\x20vec2(\x200.164129,\x200.02472\x20),','\x20\x20vec2(\x200.517075,\x200.90933\x20),','\x20\x20vec2(\x200.316111,\x200.663564\x20),','\x20\x20vec2(\x200.09476,\x200.895749\x20),','\x20\x20vec2(\x200.298288,\x200.195318\x20),','\x20\x20vec2(\x200.427229,\x200.7828\x20),','\x20\x20vec2(\x200.734764,\x200.266152\x20),','\x20\x20vec2(\x200.0816065,\x200.965972\x20),','\x20\x20vec2(\x200.698935,\x200.646352\x20),','\x20\x20vec2(\x200.281899,\x200.355144\x20),','\x20\x20vec2(\x200.871334,\x200.303171\x20),','\x20\x20vec2(\x200.138249,\x200.661214\x20),','\x20\x20vec2(\x200.202399,\x200.252449\x20),','\x20\x20vec2(\x200.0734275,\x200.399853\x20),','\x20\x20vec2(\x200.786767,\x200.660268\x20),','\x20\x20vec2(\x200.933744,\x200.508621\x20),','\x20\x20vec2(\x200.398236,\x200.0509049\x20),','\x20\x20vec2(\x200.500473,\x200.130253\x20),','\x20\x20vec2(\x200.0332957,\x200.526292\x20)',');','float\x20ShadowCCVSM()\x20{','vec4\x20fragPosViewSpace\x20=\x20u_Vmatrix*vec4(vVertPos,\x201.0);','float\x20depthValue\x20=\x20abs(fragPosViewSpace.z);','int\x20layer\x20=\x20-1;','for\x20(int\x20i\x20=\x200;\x20i\x20<\x20cascadeCount;\x20++i)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{','if\x20(depthValue\x20<\x20cascadePlaneDistances[i]){','\x20\x20\x20layer\x20=\x20i;','\x20\x20\x20break;','}','}','if\x20(layer\x20==\x20-1)\x20{','layer\x20=\x20cascadeCount;','}','vec3\x20projectedTexcoord;','float\x20currentDepth;','bool\x20inRange;','int\x20kernelSize=3;','int\x20randomIter=1;','vec3\x20normal\x20=\x20normalize(vNormalInterp);','vec3\x20lightDir\x20=\x20normalize(vDirectionalLightPos);','float\x20cosAngle\x20=\x20clamp(1.0f\x20-\x20dot(lightDir,\x20normal),0.0,1.0);','float\x20bias\x20=\x20-0.00085;','const\x20float\x20biasModifier\x20=\x200.5f;','float\x20shadow\x20=\x200.0;','vec2\x20texelSize\x20=\x201.0\x20/\x20vec2(textureSize(uShadowPositionTexture1,\x200));','float\x20thr=0.0;','if\x20(layer\x20==\x200)\x20{','if(shadow<=0.0\x20||\x20shadow>=1.0-thr){','\x20\x20\x20projectedTexcoord\x20=\x20vShadowCoord1.xyz\x20/\x20vShadowCoord1.w;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20currentDepth\x20=\x20projectedTexcoord.z;','\x20\x20shadow\x20=\x200.0;','\x20\x20float\x20nbias=bias;','\x20\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','for\x20(int\x20i=0;i<randomIter;i++){','for(int\x20x\x20=\x20-kernelSize;\x20x\x20<=\x20kernelSize;\x20++x)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{','for(int\x20y\x20=\x20-kernelSize;\x20y\x20<=\x20kernelSize;\x20++y)\x20{','int\x20index\x20=\x20int(128.0*random(floor(vVertPos.yxz),\x20i))%64;','vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture1,\x20projectedTexcoord.xy\x20+\x20vec2(x,\x20y)\x20*\x20texelSize\x20);','float\x20prevViewPosDepth\x20=\x20prevViewPos.z\x20/\x20prevViewPos.w;','prevViewPosDepth\x20=\x20prevViewPosDepth\x20*\x200.5\x20+\x200.5;','shadow\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<\x20currentDepth\x20+\x20nbias)\x20?\x20u_ShadowRatio\x20:\x201.0;','}','}','}','shadow\x20/=\x20(float(kernelSize*2+1)*float(kernelSize*2+1)*float(randomIter));','if(projectedTexcoord.z\x20>\x201.0)','shadow\x20=\x200.0;','}','shadow=smoothstep(-0.0,u_ShadowRatio*2.60,shadow);','return\x20shadow;','}','if\x20(layer\x20==\x201)\x20{','kernelSize=3;','randomIter=1;','thr=0.00;','texelSize\x20=\x201.0\x20/\x20vec2(textureSize(uShadowPositionTexture2,\x200));','if(shadow<=0.0\x20||\x20shadow>=1.0-thr){','\x20\x20\x20projectedTexcoord\x20=\x20vShadowCoord2.xyz\x20/\x20vShadowCoord2.w;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20currentDepth\x20=\x20projectedTexcoord.z;','shadow\x20=\x200.0;','\x20\x20float\x20nbias=bias*2.0;','\x20\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','for\x20(int\x20i=0;i<randomIter;i++){','for(int\x20x\x20=\x20-kernelSize;\x20x\x20<=\x20kernelSize;\x20++x)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{','for(int\x20y\x20=\x20-kernelSize;\x20y\x20<=\x20kernelSize;\x20++y)\x20{','int\x20index\x20=\x20int(128.0*random(floor(vVertPos.yxz),\x20i))%64;','vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture2,\x20projectedTexcoord.xy\x20+\x20vec2(x,\x20y)\x20*\x20texelSize\x20);','float\x20prevViewPosDepth\x20=\x20prevViewPos.z\x20/\x20prevViewPos.w;','prevViewPosDepth\x20=\x20prevViewPosDepth\x20*\x200.5\x20+\x200.5;','shadow\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<\x20currentDepth\x20+\x20nbias)\x20?\x20u_ShadowRatio\x20:\x201.0;','}','}','}','shadow\x20/=\x20(float(kernelSize*2+1)*float(kernelSize*2+1)*float(randomIter));','if(projectedTexcoord.z\x20>\x201.0)','shadow\x20=\x200.0;','}','shadow=smoothstep(-0.0,u_ShadowRatio*2.60,shadow);','return\x20shadow;','}','if\x20(layer\x20==\x202)\x20{','kernelSize=3;','randomIter=1;','thr=0.00;','texelSize\x20=\x201.0\x20/\x20vec2(textureSize(uShadowPositionTexture3,\x200));','if(shadow<=0.0\x20||\x20shadow>=1.0-thr){','\x20\x20\x20projectedTexcoord\x20=\x20vShadowCoord3.xyz\x20/\x20vShadowCoord3.w;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20currentDepth\x20=\x20projectedTexcoord.z;','shadow\x20=\x200.0;','\x20\x20float\x20nbias=bias*1.0;','\x20\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','for\x20(int\x20i=0;i<randomIter;i++){','for(int\x20x\x20=\x20-kernelSize;\x20x\x20<=\x20kernelSize;\x20++x)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{','for(int\x20y\x20=\x20-kernelSize;\x20y\x20<=\x20kernelSize;\x20++y)\x20{','int\x20index\x20=\x20int(128.0*random(floor(vVertPos.yxz),\x20i))%64;','vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture3,\x20projectedTexcoord.xy\x20+\x20vec2(x,\x20y)\x20*\x20texelSize\x20);','float\x20prevViewPosDepth\x20=\x20prevViewPos.z\x20/\x20prevViewPos.w;','prevViewPosDepth\x20=\x20prevViewPosDepth\x20*\x200.5\x20+\x200.5;','shadow\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<\x20currentDepth\x20+\x20nbias)\x20?\x20u_ShadowRatio\x20:\x201.0;','}','}','}','shadow\x20/=\x20(float(kernelSize*2+1)*float(kernelSize*2+1)*float(randomIter));','if(projectedTexcoord.z\x20>\x201.0)','shadow\x20=\x200.0;','}','shadow=smoothstep(-0.0,u_ShadowRatio*2.60,shadow);','return\x20shadow;','}','if\x20(layer\x20==\x203)\x20{','kernelSize=3;','randomIter=1;','thr=0.00;','texelSize\x20=\x201.0\x20/\x20vec2(textureSize(uShadowPositionTexture4,\x200));','if(shadow<=0.0\x20||\x20shadow>=1.0-thr){','\x20\x20\x20projectedTexcoord\x20=\x20vShadowCoord4.xyz\x20/\x20vShadowCoord4.w;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20currentDepth\x20=\x20projectedTexcoord.z;','shadow\x20=\x200.0;','\x20\x20float\x20nbias=bias*1.5;','\x20\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','for\x20(int\x20i=0;i<randomIter;i++){','for(int\x20x\x20=\x20-kernelSize;\x20x\x20<=\x20kernelSize;\x20++x)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{','for(int\x20y\x20=\x20-kernelSize;\x20y\x20<=\x20kernelSize;\x20++y)\x20{','int\x20index\x20=\x20int(128.0*random(floor(vVertPos.yxz),\x20i))%64;','vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture4,\x20projectedTexcoord.xy\x20+\x20vec2(x,\x20y)\x20*\x20texelSize\x20);','float\x20prevViewPosDepth\x20=\x20prevViewPos.z\x20/\x20prevViewPos.w;','prevViewPosDepth\x20=\x20prevViewPosDepth\x20*\x200.5\x20+\x200.5;','shadow\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<\x20currentDepth\x20+\x20nbias)\x20?\x20u_ShadowRatio\x20:\x201.0;','}','}','}','shadow\x20/=\x20(float(kernelSize*2+1)*float(kernelSize*2+1)*float(randomIter));','if(projectedTexcoord.z\x20>\x201.0)','shadow\x20=\x200.0;','}','shadow=smoothstep(-0.0,u_ShadowRatio*2.60,shadow);','return\x20shadow;','}','if\x20(layer\x20==\x204)\x20{','kernelSize=3;','randomIter=1;','thr=0.00;','texelSize\x20=\x201.0\x20/\x20vec2(textureSize(uShadowPositionTexture5,\x200));','if(shadow<=0.0\x20||\x20shadow>=1.0-thr){','\x20\x20\x20projectedTexcoord\x20=\x20vShadowCoord5.xyz\x20/\x20vShadowCoord5.w;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20currentDepth\x20=\x20projectedTexcoord.z;','shadow\x20=\x200.0;','\x20\x20float\x20nbias=bias*1.00;','\x20\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','for\x20(int\x20i=0;i<randomIter;i++){','for(int\x20x\x20=\x20-kernelSize;\x20x\x20<=\x20kernelSize;\x20++x)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{','for(int\x20y\x20=\x20-kernelSize;\x20y\x20<=\x20kernelSize;\x20++y)\x20{','int\x20index\x20=\x20int(128.0*random(floor(vVertPos.yxz),\x20i))%64;','vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture5,\x20projectedTexcoord.xy\x20+\x20vec2(x,\x20y)\x20*\x20texelSize\x20);','float\x20prevViewPosDepth\x20=\x20prevViewPos.z\x20/\x20prevViewPos.w;','prevViewPosDepth\x20=\x20prevViewPosDepth\x20*\x200.5\x20+\x200.5;','shadow\x20+=\x20(inRange\x20&&\x20prevViewPosDepth\x20<\x20currentDepth\x20+\x20nbias)\x20?\x20u_ShadowRatio\x20:\x201.0;','}','}','}','shadow\x20/=\x20(float(kernelSize*2+1)*float(kernelSize*2+1)*float(randomIter));','if(projectedTexcoord.z\x20>\x201.0)','shadow\x20=\x200.0;','}','shadow=smoothstep(-0.0,u_ShadowRatio*2.60,shadow);','return\x20shadow;','}','return\x20shadow;','}','#endif','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09float\x20shini\x20=\x20fShininess;\x20','\x09float\x20rough\x20=\x20u_Roughness;','\x09float\x20metal\x20=\x20u_Metallic;','\x20\x20\x20if(useTextureRoughness\x20==\x201)\x20{','\x09\x20\x20\x20rough\x20=\x20texture(u_texRoughness,\x20vUV.xy).r;','\x20\x20\x20}','\x20\x20\x20if(useTextureMetalness\x20==\x201)\x20{','\x09\x20\x20\x20\x20metal\x20=\x20texture(u_texMetalness,\x20vUV.xy).g;','\x20\x20\x20}','\x09float\x20shininess\x20=\x20mix(0.0,\x201.0,\x20shini);','\x09float\x20roughness\x20=\x20mix(0.0,\x201.0,\x20rough);','\x09float\x20metallic\x20=\x20mix(0.0,\x201.0,\x20metal);','\x09float\x20smoothness\x20=\x201.0\x20-\x20roughness;','\x0a#ifdef\x20SHADING_FLAT','\x20\x20\x20vec3\x20vVertPosU\x20=\x20dFdx(vVertPos);','\x20\x20\x20vec3\x20vVertPosV\x20=\x20dFdy(vVertPos);','\x20\x20\x20normal\x20=\x20normalize(cross(vVertPosU,vVertPosV));','\x0a#endif','\x20\x20\x20ivec2\x20ivCUV=ivec2(vCUV.x+0.5,vCUV.y+0.5);','\x20\x20\x20vec4\x20tcolor=texelFetch(u_ColorMap,\x20ivCUV,0);','\x20\x20\x20vec3\x20baseColor\x20=\x20tcolor.xyz;','\x20\x20\x20float\x20baseAlpha\x20=\x20tcolor.w;','if(u_isolate\x20<\x200.5\x20){','\x20\x20\x20if(baseAlpha\x20<\x205.0){','\x20\x20\x20\x20\x20\x20\x20discard;','\x20\x20\x20\x20\x20\x20\x20return;','\x20\x20\x20}','}','\x20\x20\x20if(baseAlpha\x20>\x205.0)','\x20\x20\x20baseAlpha=baseAlpha-5.0;','\x20\x20\x20if(baseColor.r\x20>\x201.0){','\x20\x20\x20\x20\x20\x20\x20baseColor.r=baseColor.r-1.0;','\x20\x20\x20\x20\x20\x20\x20baseColor.g=baseColor.g-1.0;','\x20\x20\x20\x20\x20\x20\x20baseColor.b=baseColor.b-1.0;','\x20\x20\x20}','if(baseAlpha>4.00){','\x20\x20\x20baseAlpha=baseAlpha-4.0;','}','\x20\x20\x20if(u_alpha>0.5)','\x20\x20\x20\x20\x20\x20\x20if(baseAlpha<1.00)','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;','\x20\x20\x20if(u_alpha<0.5)','\x20\x20\x20\x20\x20\x20\x20if(baseAlpha>1.00\x20&&\x20baseAlpha\x20<\x201.50)','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;','\x20\x20\x20if(baseAlpha>2.00\x20&&\x20baseAlpha<3.00){','\x20\x20\x20\x20\x20\x20\x20baseColor=u_color.xyz;','\x20\x20\x20\x20\x20\x20\x20baseAlpha=u_color.w;','\x20\x20\x20}','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20baseColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x0a#ifdef\x20SHADING_HDR','\x09baseColor\x20=\x20pow(baseColor,\x20vec3(2.2));','\x0a#endif','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20tangentNormal\x20=\x20normalize((texture(u_texNormal,\x20vUV.xy).rgb\x20*\x202.0)\x20-\x201.0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q1\x20\x20=\x20dFdx(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q2\x20\x20=\x20dFdy(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st1\x20=\x20dFdx(vUV);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st2\x20=\x20dFdy(vUV);','\x20\x20\x20\x20\x20\x20\x20vec3\x20N\x20\x20\x20=\x20normal;','\x20\x20\x20\x20\x20\x20\x20vec3\x20T\x20\x20=\x20normalize(Q1*st2.t\x20-\x20Q2*st1.t);','\x20\x20\x20\x20\x20\x20\x20vec3\x20B\x20\x20=\x20-normalize(cross(N,\x20T));','\x20\x20\x20\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(T,\x20B,\x20N);','\x20\x20\x20\x20\x20\x20\x20normal\x20=\x20normalize(TBN\x20*\x20tangentNormal);','\x20\x20\x20}','\x20\x20\x20vec3\x20V\x20=\x20normalize(vEyePos\x20\x20-\x20vVertPos);','\x09vec3\x20N\x20=\x20normalize(normal);','\x20\x20\x20vec3\x20R\x20=\x20reflect(-V,\x20N);\x20','\x09vec3\x20F0\x20=\x20vec3(shininess);','\x09F0\x20=\x20F0\x20*\x200.08;','\x09F0\x20=\x20F0\x20*\x20(1.0\x20-\x20metallic)\x20+\x20baseColor.rgb\x20*\x20metallic;','\x09float\x20NdV\x20=\x20dot(N,\x20V);','\x20if(NdV<=0.0){','\x20\x20\x20\x20NdV*=-1.0;','\x20\x20\x20\x20N*=-1.0;','}','\x09vec3\x20diffuse\x20=\x20baseColor.rgb;','\x09vec3\x20Lo\x20=\x20vec3(0.0);','\x20\x20\x20for(int\x20i\x20=\x200\x20;\x20i\x20<\x20uLightNum\x20;\x20++i)','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20length(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20attenuation\x20=\x201.0\x20/\x20(distance\x20*\x20distance);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20radiance\x20=\x20vLightColor[i]\x20*\x20attenuation\x20*\x20100.0\x20*\x20100.0;','\x20\x20\x20\x20\x20\x20\x20\x20float\x20NDF\x20=\x20DistributionGGX(N,\x20H,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20G\x20\x20\x20=\x20GeometrySmith(N,\x20V,\x20L,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20F\x20\x20\x20\x20=\x20fresnelSchlick(HdV,\x20F0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20numerator\x20\x20\x20\x20=\x20NDF\x20*\x20G\x20*\x20F;','\x20\x20\x20\x20\x20\x20\x20float\x20denominator\x20=\x204.0\x20*\x20NdV\x20*\x20NdL\x20+\x200.0001;','\x20\x20\x20\x20\x20\x20\x20vec3\x20specular\x20=\x20numerator\x20/\x20denominator;','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20kS\x20=\x20F;','\x20\x20\x20\x20\x20\x20\x20vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20(kD\x20*\x20diffuse\x20/\x20SH_PI\x20+\x20specular)\x20*\x20radiance\x20*\x20NdL;','\x09}','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09\x09vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x09\x09float\x20specColorAlpha\x20=\x200.5;','\x09\x09float\x20oneMinusReflectivity\x20=\x20specColorAlpha\x20-\x20specColorAlpha\x20*\x20metallic;','\x09\x09vec3\x20diffColor\x20=\x20diffuse\x20*\x20oneMinusReflectivity;','\x09\x09float\x20diffuseTerm\x20=\x20DisneyDiffuse(NdV,\x20NdL,\x20LdH,\x20roughness)\x20*\x20NdL;','\x09\x09vec3\x20F\x20=\x20fresnelSchlick(HdV,\x20F0);','\x09\x09vec3\x20kS\x20=\x20F;','\x09\x09vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x09\x09float\x20V\x20=\x20SmithJointGGXVisibilityTerm(NdL,\x20NdV,\x20roughness);','\x09\x09float\x20D\x20=\x20GGXTerm(NdH,\x20roughness);','\x09\x09float\x20specularTerm\x20=\x20V\x20*\x20D\x20*\x20SH_PI;','\x09\x09specularTerm\x20=\x20max(0.0,\x20specularTerm\x20*\x20NdL);','\x09\x09float\x20surfaceReduction\x20=\x201.0\x20/\x20(roughness*roughness*roughness*roughness\x20+\x201.0);','\x09\x09if(F0.x\x20+\x20F0.y\x20+\x20F0.z\x20<=\x200.0)','\x09\x09\x09specularTerm\x20*=\x200.0;','\x09\x09float\x20grazingTerm\x20=\x20smoothness\x20*\x20smoothness\x20+\x20(1.0\x20-\x20oneMinusReflectivity);','\x09\x09grazingTerm\x20=\x20max(min(grazingTerm,\x201.0),\x200.0);','\x09\x09Lo\x20+=\x20kD\x20*\x20diffColor\x20*\x20vDirectionalLightColor\x20*\x20diffuseTerm;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20vDirectionalLightColor\x20*\x20specularTerm\x20*\x20fresnelSchlick(LdH,\x20F0);','\x09}','\x09float\x20AO\x20=\x201.0;','\x20\x20\x20if(useTextureAO\x20==\x201){','\x09\x20\x20\x20\x20AO\x20=\x20texture(u_texAO,\x20vUV.xy).r;','\x20\x20\x20}','\x09vec3\x20ambient\x20=\x20vAmbientColor;','\x20\x20\x20vec3\x20specular\x20=\x20vec3(0.0);','\x09vec3\x20kSA\x20=\x20fresnelSchlickRoughness(NdV,\x20F0,\x20roughness);','\x09vec3\x20kDA\x20=\x20vec3(1.0)\x20-\x20kSA;','\x09kDA\x20*=\x201.0\x20-\x20metallic;','#ifdef\x20SHADING_ENVIRONMENT','\x20\x20\x20vec3\x20irradiance\x20=\x20texture(u_texIrradianceMap,\x20N).rgb;','\x20\x20\x20diffuse\x20=\x20irradiance\x20*\x20diffuse;','\x20\x20\x20const\x20float\x20MAX_REFLECTION_LOD\x20=\x204.0;','\x20\x20\x20vec3\x20prefilteredColor\x20=\x20textureLod(u_texPrefilterMap,\x20R,\x20\x20roughness\x20*\x20MAX_REFLECTION_LOD).rgb;','\x20\x20\x20vec2\x20brdf\x20=\x20texture(u_texbrdfLUT,\x20vec2(NdV,\x20roughness)).xy;','\x20\x20\x20specular\x20=\x20prefilteredColor\x20*\x20(kSA\x20*\x20brdf.x\x20+\x20brdf.y);','#endif','\x09ambient\x20=\x20(kDA\x20*\x20ambient\x20*\x20diffuse\x20+\x20specular)\x20*\x20AO;','\x09vec3\x20fragColor\x20=\x20ambient','\x09+\x20Lo;','#ifdef\x20SHADING_SHADOW','\x20\x20\x20float\x20fShadow\x20=\x20ShadowVSM();','\x20\x20\x20fragColor\x20=\x20fragColor\x20*\x20fShadow;','#endif','#ifdef\x20CC_SHADING_SHADOW','\x20\x20\x20float\x20fShadow\x20=\x20ShadowCCVSM();','\x20\x20\x20fragColor\x20=\x20fragColor\x20*\x20fShadow;','#endif','\x0a#ifdef\x20SHADING_HDR','\x0a#ifdef\x20SHADING_FURSYS_HDR','\x20\x20\x20fragColor\x20=\x20fragColor\x20/\x204.0;','\x0a#else','\x20\x20\x20fragColor\x20=\x20fragColor\x20/\x20(fragColor\x20+\x20vec3(1.0));','\x0a#endif','\x20\x20\x20fragColor\x20=\x20pow(fragColor,\x20vec3(1.0\x20/\x202.2));\x20','\x0a#endif','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(fragColor.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20fragColor\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x20\x20\x20if(useTextureAlpha\x20==\x201)\x20{','\x20\x20\x20\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20texture(u_texAlpha,\x20vUV.xy).r;','\x20\x20\x20}','\x20\x20\x20vec4\x20glslColor\x20=\x20vec4(fragColor,\x20baseAlpha);','\x0a#ifdef\x20SHADING_FOG','\x20\x20\x20float\x20fogAmount\x20=\x201.0;','\x20\x20\x20float\x20fogDepth\x20=\x20length(u_fogCenter\x20-\x20vVertPos);','\x20\x20\x20fogAmount\x20=\x20smoothstep(u_fogNear,\x20u_fogFar,\x20fogDepth);','\x20\x20\x20glslColor\x20=\x20glslColor\x20*\x20(1.0\x20-\x20fogAmount)\x20+\x20u_fogColor\x20*\x20fogAmount;','\x0a#endif','\x09o_FragColor\x20=\x20glslColor;','\x0a#ifdef\x20LOG_DEPTH','\x20float\x20hFceof\x20=\x201.0\x20/\x20log2(uFar+1.0);','gl_FragDepth\x20=\x20log2(flogz)\x20*\x20hFceof;','\x0a#endif','\x20\x20\x20if(o_FragColor.a\x20<\x200.003)','\x20\x20\x20\x20discard;','}']['join']('\x0a')},'AnimationPBR':{'vertex':['in\x20vec3\x20a_position;','in\x20vec3\x20a_normal;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','out\x20vec2\x20vUV;','out\x20vec3\x20vNormalInterp;','out\x20vec3\x20vVertPos;','out\x20vec3\x20vGLPosition;','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','in\x20vec4\x20a_bipedIdx;','in\x20vec4\x20a_bipedWeight;','#ifdef\x20LOG_DEPTH','uniform\x20float\x20uFar;','out\x20float\x20flogz;','#endif','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20vec3(0,\x200,\x200);','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20bipedIdx[4];\x20bipedIdx[0]\x20=\x20int(a_bipedIdx.x);\x20bipedIdx[1]\x20=\x20int(a_bipedIdx.y);\x20bipedIdx[2]\x20=\x20int(a_bipedIdx.z);\x20bipedIdx[3]\x20=\x20int(a_bipedIdx.w);','\x20\x20\x20\x20\x20\x20\x20float\x20bipedWeight[4];\x20bipedWeight[0]\x20=\x20a_bipedWeight.x;\x20bipedWeight[1]\x20=\x20a_bipedWeight.y;\x20bipedWeight[2]\x20=\x20a_bipedWeight.z;\x20bipedWeight[3]\x20=\x20a_bipedWeight.w;','\x20\x20\x20\x20\x20\x20\x20for(int\x20w\x20=\x200;\x20w\x20<\x204;\x20w++)\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(bipedWeight[w]\x20==\x200.0)\x20continue;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20bipedIdx[w]\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(a_position,\x201.0);','\x09\x20\x20\x20\x20\x20\x20\x20\x20updatePosition\x20+=\x20vec3(vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w)\x20*\x20bipedWeight[w];','\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20}','\x20\x20\x20else\x20{','\x20\x20\x20\x20\x20\x20\x20updatePosition\x20=\x20a_position;','\x20\x20\x20}','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vGLPosition\x20=\x20vec3(position)\x20/\x20position.w;','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20\x0a#ifdef\x20LOG_DEPTH','\x20\x20\x20float\x20Fcoef\x20=\x202.0\x20/\x20log2(uFar+1.0);','\x20\x20\x20gl_Position.z\x20=\x20log2(max(1e-6,\x201.0\x20+\x20gl_Position.w))\x20*\x20Fcoef\x20-\x201.0;','\x20\x20\x20flogz\x20=\x201.0\x20+\x20gl_Position.w;','\x20\x20\x20#endif','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20float\x20ubPerspectiveView;','uniform\x20float\x20uFar;','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20float\x20fShininess;','uniform\x20float\x20u_Roughness;','uniform\x20float\x20u_Metallic;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20int\x20useBump;','uniform\x20sampler2D\x20u_texBump;','uniform\x20int\x20useTextureRoughness;','uniform\x20sampler2D\x20u_texRoughness;','uniform\x20int\x20useTextureMetalness;','uniform\x20sampler2D\x20u_texMetalness;','uniform\x20int\x20useTextureAO;','uniform\x20sampler2D\x20u_texAO;','uniform\x20int\x20useTextureAlpha;','uniform\x20sampler2D\x20u_texAlpha;','uniform\x20int\x20useTextureSpecluar;','\x0a#ifdef\x20SHADING_ENVIRONMENT','uniform\x20samplerCube\x20u_texIrradianceMap;','uniform\x20samplerCube\x20u_texPrefilterMap;','uniform\x20sampler2D\x20\x20u_texbrdfLUT;','\x0a#endif','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','uniform\x20int\x20uLightNum;','uniform\x20vec3\x20vLightPos[4];','uniform\x20vec3\x20vLightColor[4];','in\x20vec2\x20vUV;','in\x20vec3\x20vNormalInterp;','in\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseGraySacle;','const\x20float\x20SH_PI\x20=\x203.14159265359;','const\x20float\x20SH_INV_PI\x20=\x200.31830988618;','out\x20vec4\x20o_FragColor;','\x0a#ifdef\x20LOG_DEPTH','in\x20float\x20flogz;','\x0a#endif','vec3\x20lerp(vec3\x20a,\x20vec3\x20b,\x20float\x20w)','{','\x20\x20return\x20a\x20+\x20vec3(w*(b-a));','}','vec3\x20fresnelSchlickRoughness(float\x20cosTheta,\x20vec3\x20F0,\x20float\x20roughness)','{','\x09return\x20F0\x20+\x20(max(vec3(1.0\x20-\x20roughness),\x20F0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelSchlick(float\x20cosTheta,\x20vec3\x20F0)','{','\x09\x20return\x20F0\x20+\x20(vec3(1.0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelLerp\x20(float\x20cosA,\x20vec3\x20F0,\x20vec3\x20F90)','{','\x20\x20\x20\x20float\x20t\x20=\x20\x20pow(1.0\x20-\x20cosA,\x205.0);','\x20\x20\x20\x20return\x20lerp\x20(F0,\x20F90,\x20t);','}','float\x20GeometrySchlickGGX(float\x20NdotV,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20r\x20=\x20(roughness\x20+\x201.0);','\x20\x20\x20\x20float\x20k\x20=\x20(r*r)\x20/\x208.0;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20NdotV;','\x20\x20\x20\x20float\x20denom\x20=\x20NdotV\x20*\x20(1.0\x20-\x20k)\x20+\x20k;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20GeometrySmith(vec3\x20N,\x20vec3\x20V,\x20vec3\x20L,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20NdotV\x20=\x20max(dot(N,\x20V),\x200.0);','\x20\x20\x20\x20float\x20NdotL\x20=\x20max(dot(N,\x20L),\x200.0);','\x20\x20\x20\x20float\x20ggx2\x20=\x20GeometrySchlickGGX(NdotV,\x20roughness);','\x20\x20\x20\x20float\x20ggx1\x20=\x20GeometrySchlickGGX(NdotL,\x20roughness);','\x20\x20\x20\x20return\x20ggx1\x20*\x20ggx2;','}','float\x20DistributionGGX(vec3\x20N,\x20vec3\x20H,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20a\x20=\x20roughness*roughness;','\x20\x20\x20\x20float\x20a2\x20=\x20a*a;','\x20\x20\x20\x20float\x20NdotH\x20=\x20max(dot(N,\x20H),\x200.0);','\x20\x20\x20\x20float\x20NdotH2\x20=\x20NdotH*NdotH;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20a2;','\x20\x20\x20\x20float\x20denom\x20=\x20(NdotH2\x20*\x20(a2\x20-\x201.0)\x20+\x201.0);','\x20\x20\x20\x20denom\x20=\x20SH_PI\x20*\x20denom\x20*\x20denom;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20DisneyDiffuse(float\x20NdV,\x20float\x20NdL,\x20float\x20LdH,\x20float\x20roughness)','{','\x09float\x20fd90\x20=\x200.5\x20+\x202.0\x20*\x20LdH\x20*\x20LdH\x20*\x20roughness;','\x09float\x20lightScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdL,\x205.0));','\x09float\x20viewScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdV,\x205.0));','\x09return\x20lightScatter\x20*\x20viewScatter;','}','float\x20GGXTerm(float\x20NdH,\x20float\x20roughness)','{','\x09float\x20a2\x20=\x20roughness\x20*\x20roughness\x20*\x20roughness\x20*\x20roughness;','\x09float\x20d\x20=\x20(NdH\x20*\x20a2\x20-\x20NdH)\x20*\x20NdH\x20+\x201.0;','\x09return\x20SH_INV_PI\x20*\x20a2\x20/\x20(d\x20*\x20d\x20+\x200.00000001);','}','float\x20SmithJointGGXVisibilityTerm(float\x20NdotL,\x20float\x20NdotV,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness*roughness;','\x09float\x20lambdaV\x20=\x20NdotL\x20*\x20(NdotV\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09float\x20lambdaL\x20=\x20NdotV\x20*\x20(NdotL\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09return\x200.5\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x200.0001);','}','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09float\x20shini\x20=\x20fShininess;\x20','\x09float\x20rough\x20=\x20u_Roughness;','\x09float\x20metal\x20=\x20u_Metallic;','\x20\x20\x20if(useTextureRoughness\x20==\x201)\x20{','\x09\x20\x20\x20rough\x20=\x20texture(u_texRoughness,\x20vUV.xy).r;','\x20\x20\x20}','\x20\x20\x20if(useTextureMetalness\x20==\x201)\x20{','\x09\x20\x20\x20\x20metal\x20=\x20texture(u_texMetalness,\x20vUV.xy).g;','\x20\x20\x20}','\x09float\x20shininess\x20=\x20mix(0.0,\x201.0,\x20shini);','\x09float\x20roughness\x20=\x20mix(0.0,\x201.0,\x20rough);','\x09float\x20metallic\x20=\x20mix(0.0,\x201.0,\x20metal);','\x09float\x20smoothness\x20=\x201.0\x20-\x20roughness;','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09vec3\x20baseColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20baseColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x0a#ifdef\x20SHADING_HDR','\x09baseColor\x20=\x20pow(baseColor,\x20vec3(2.2));','\x0a#endif','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20tangentNormal\x20=\x20normalize((texture(u_texNormal,\x20vUV.xy).rgb\x20*\x202.0)\x20-\x201.0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q1\x20\x20=\x20dFdx(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q2\x20\x20=\x20dFdy(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st1\x20=\x20dFdx(vUV);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st2\x20=\x20dFdy(vUV);','\x20\x20\x20\x20\x20\x20\x20vec3\x20N\x20\x20\x20=\x20normal;','\x20\x20\x20\x20\x20\x20\x20vec3\x20T\x20\x20=\x20normalize(Q1*st2.t\x20-\x20Q2*st1.t);','\x20\x20\x20\x20\x20\x20\x20vec3\x20B\x20\x20=\x20-normalize(cross(N,\x20T));','\x20\x20\x20\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(T,\x20B,\x20N);','\x20\x20\x20\x20\x20\x20\x20normal\x20=\x20normalize(TBN\x20*\x20tangentNormal);','\x20\x20\x20}','\x20\x20\x20vec3\x20V\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09vec3\x20N\x20=\x20normalize(normal);','\x20\x20\x20vec3\x20R\x20=\x20reflect(-V,\x20N);\x20','\x09vec3\x20F0\x20=\x20vec3(shininess);','\x09F0\x20=\x20F0\x20*\x200.08;','\x09F0\x20=\x20F0\x20*\x20(1.0\x20-\x20metallic)\x20+\x20baseColor.rgb\x20*\x20metallic;','\x09float\x20NdV\x20=\x20max(dot(N,\x20V),\x200.0);','\x09vec3\x20diffuse\x20=\x20baseColor.rgb;','\x09vec3\x20Lo\x20=\x20vec3(0.0);','\x20\x20\x20for(int\x20i\x20=\x200\x20;\x20i\x20<\x20uLightNum\x20;\x20++i)','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20length(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20attenuation\x20=\x201.0\x20/\x20(distance\x20*\x20distance);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20radiance\x20=\x20vLightColor[i]\x20*\x20attenuation\x20*\x20100.0\x20*\x20100.0;','\x20\x20\x20\x20\x20\x20\x20\x20float\x20NDF\x20=\x20DistributionGGX(N,\x20H,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20G\x20\x20\x20=\x20GeometrySmith(N,\x20V,\x20L,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20F\x20\x20\x20\x20=\x20fresnelSchlick(HdV,\x20F0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20numerator\x20\x20\x20\x20=\x20NDF\x20*\x20G\x20*\x20F;','\x20\x20\x20\x20\x20\x20\x20float\x20denominator\x20=\x204.0\x20*\x20NdV\x20*\x20NdL\x20+\x200.0001;','\x20\x20\x20\x20\x20\x20\x20vec3\x20specular\x20=\x20numerator\x20/\x20denominator;','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20kS\x20=\x20F;','\x20\x20\x20\x20\x20\x20\x20vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20(kD\x20*\x20diffuse\x20/\x20SH_PI\x20+\x20specular)\x20*\x20radiance\x20*\x20NdL;','\x09}','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09\x09vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x09\x09float\x20specColorAlpha\x20=\x201.0;','\x09\x09float\x20oneMinusReflectivity\x20=\x20specColorAlpha\x20-\x20specColorAlpha\x20*\x20metallic;','\x09\x09vec3\x20diffColor\x20=\x20diffuse\x20*\x20oneMinusReflectivity;','\x09\x09float\x20diffuseTerm\x20=\x20DisneyDiffuse(NdV,\x20NdL,\x20LdH,\x20roughness)\x20*\x20NdL;','\x09\x09vec3\x20F\x20=\x20fresnelSchlick(HdV,\x20F0);','\x09\x09vec3\x20kS\x20=\x20F;','\x09\x09vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x09\x09float\x20V\x20=\x20SmithJointGGXVisibilityTerm(NdL,\x20NdV,\x20roughness);','\x09\x09float\x20D\x20=\x20GGXTerm(NdH,\x20roughness);','\x09\x09float\x20specularTerm\x20=\x20V\x20*\x20D\x20*\x20SH_PI;','\x09\x09specularTerm\x20=\x20max(0.0,\x20specularTerm\x20*\x20NdL);','\x09\x09float\x20surfaceReduction\x20=\x201.0\x20/\x20(roughness*roughness*roughness*roughness\x20+\x201.0);','\x09\x09if(F0.x\x20+\x20F0.y\x20+\x20F0.z\x20<=\x200.0)','\x09\x09\x09specularTerm\x20*=\x200.0;','\x09\x09float\x20grazingTerm\x20=\x20smoothness\x20*\x20smoothness\x20+\x20(1.0\x20-\x20oneMinusReflectivity);','\x09\x09grazingTerm\x20=\x20max(min(grazingTerm,\x201.0),\x200.0);','\x09\x09Lo\x20+=\x20kD\x20*\x20diffColor\x20*\x20vDirectionalLightColor\x20*\x20NdL;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20vDirectionalLightColor\x20*\x20specularTerm\x20*\x20fresnelSchlick(LdH,\x20F0);','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20diffColor\x20*\x20surfaceReduction\x20*\x20fresnelLerp(NdV,\x20F0,\x20vec3(grazingTerm));','\x09}','\x09float\x20AO\x20=\x201.0;','\x20\x20\x20if(useTextureAO\x20==\x201){','\x09\x20\x20\x20\x20AO\x20=\x20texture(u_texAO,\x20vUV.xy).r;','\x20\x20\x20}','\x09vec3\x20ambient\x20=\x20vAmbientColor;','\x20\x20\x20vec3\x20specular\x20=\x20vec3(0.0);','\x09vec3\x20kSA\x20=\x20fresnelSchlickRoughness(NdV,\x20F0,\x20roughness);','\x09vec3\x20kDA\x20=\x20vec3(1.0)\x20-\x20kSA;','\x09kDA\x20*=\x201.0\x20-\x20metallic;','#ifdef\x20SHADING_ENVIRONMENT','\x20\x20\x20vec3\x20irradiance\x20=\x20texture(u_texIrradianceMap,\x20N).rgb;','\x20\x20\x20diffuse\x20=\x20irradiance\x20*\x20diffuse;','\x20\x20\x20const\x20float\x20MAX_REFLECTION_LOD\x20=\x204.0;','\x20\x20\x20vec3\x20prefilteredColor\x20=\x20textureLod(u_texPrefilterMap,\x20R,\x20\x20roughness\x20*\x20MAX_REFLECTION_LOD).rgb;','\x20\x20\x20vec2\x20brdf\x20=\x20texture(u_texbrdfLUT,\x20vec2(NdV,\x20roughness)).xy;','#endif','\x09ambient\x20=\x20(kDA\x20*\x20ambient\x20*\x20diffuse\x20+\x20specular)\x20*\x20AO;','\x09vec3\x20fragColor\x20=\x20ambient','\x09+\x20Lo;','\x0a#ifdef\x20SHADING_HDR','\x20\x20\x20fragColor\x20=\x20fragColor\x20/\x20(fragColor\x20+\x20vec3(1.0));','\x20\x20\x20fragColor\x20=\x20pow(fragColor,\x20vec3(1.0\x20/\x202.2));\x20','\x0a#endif','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(fragColor.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20fragColor\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x20\x20\x20if(useTextureAlpha\x20==\x201)\x20{','\x20\x20\x20\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20texture(u_texAlpha,\x20vUV.xy).r;','\x20\x20\x20}','\x09o_FragColor\x20=\x20vec4(fragColor,\x20baseAlpha);','\x0a#ifdef\x20LOG_DEPTH','\x20float\x20hFceof\x20=\x201.0\x20/\x20log2(uFar+1.0);','gl_FragDepth\x20=\x20log2(flogz)\x20*\x20hFceof;','\x0a#endif','}']['join']('\x0a')},'Picking':{'vertex':['in\x20vec3\x20a_position;','in\x20vec4\x20a_color;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20float\x20u_PointSize;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','in\x20vec3\x20a_matrixIdx;','#endif','out\x20vec4\x20vColor;','out\x20vec3\x20vVertPos;','#ifdef\x20LOG_DEPTH','\x09out\x20float\x20flogz;','\x09uniform\x20float\x20uFar;','#endif','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x20\x20\x20vColor\x20=\x20vec4(float(a_color.x)\x20/\x20255.0,\x20float(a_color.y)\x20/\x20255.0,\x20float(a_color.z)\x20/\x20255.0,\x20float(a_color.w)\x20/\x20255.0);','\x20\x20\x20gl_PointSize\x20=\x20u_PointSize;','#ifdef\x20LOG_DEPTH','\x20\x20\x20float\x20Fcoef\x20=\x202.0\x20/\x20log2(uFar+1.0);','\x20\x20\x20gl_Position.z\x20=\x20log2(max(1e-6,\x201.0\x20+\x20gl_Position.w))\x20*\x20Fcoef\x20-\x201.0;','\x20\x20\x20flogz\x20=\x201.0\x20+\x20gl_Position.w;','#endif','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','in\x20vec3\x20vVertPos;','in\x20vec4\x20vColor;','#ifdef\x20LOG_DEPTH','\x09in\x20float\x20flogz;','\x09uniform\x20float\x20uFar;','#endif','out\x20vec4\x20o_FragColor;','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','\x20\x20\x20o_FragColor\x20=\x20vColor;','#ifdef\x20LOG_DEPTH','\x09float\x20hFceof\x20=\x201.0\x20/\x20log2(uFar+1.0);','\x09gl_FragDepth\x20=\x20log2(flogz)\x20*\x20hFceof;','#endif','}']['join']('\x0a')},'Picking_v2':{'vertex':['in\x20vec3\x20a_position;','in\x20vec4\x20a_color;','in\x20float\x20a_tInd;','out\x20vec2\x20vCUV;','uniform\x20float\x20uColorMapSize;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20float\x20u_PointSize;','#ifdef\x20LOG_DEPTH','\x09out\x20float\x20flogz;','\x09uniform\x20float\x20uFar;','#endif','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','in\x20vec3\x20a_matrixIdx;','#endif','out\x20vec4\x20vColor;','out\x20vec3\x20vVertPos;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','\x20\x20\x20float\x20cInd=a_tInd;','\x20\x20\x20float\x20row\x20=floor(cInd/uColorMapSize);','\x20\x20\x20float\x20col\x20=mod(cInd,uColorMapSize);','\x20\x20\x20vCUV=vec2(col,row);','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x20\x20\x20vColor\x20=\x20vec4(float(a_color.x)\x20/\x20255.0,\x20float(a_color.y)\x20/\x20255.0,\x20float(a_color.z)\x20/\x20255.0,\x20float(a_color.w)\x20/\x20255.0);','\x20\x20\x20gl_PointSize\x20=\x20u_PointSize;','#ifdef\x20LOG_DEPTH','\x20\x20\x20float\x20Fcoef\x20=\x202.0\x20/\x20log2(uFar+1.0);','\x20\x20\x20gl_Position.z\x20=\x20log2(max(1e-6,\x201.0\x20+\x20gl_Position.w))\x20*\x20Fcoef\x20-\x201.0;','\x20\x20\x20flogz\x20=\x201.0\x20+\x20gl_Position.w;','#endif','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','in\x20vec3\x20vVertPos;','in\x20vec4\x20vColor;','in\x20vec2\x20vCUV;','uniform\x20sampler2D\x20u_ColorMap;','uniform\x20float\x20u_select;','#ifdef\x20LOG_DEPTH','\x09in\x20float\x20flogz;','\x09uniform\x20float\x20uFar;','#endif','out\x20vec4\x20o_FragColor;','uniform\x20float\x20u_isolate;','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','#ifdef\x20LOG_DEPTH','\x09float\x20hFceof\x20=\x201.0\x20/\x20log2(uFar+1.0);','\x09gl_FragDepth\x20=\x20log2(flogz)\x20*\x20hFceof;','#endif','\x20\x20\x20ivec2\x20ivCUV=ivec2(vCUV.x+0.002,vCUV.y+0.002);','\x20\x20\x20vec4\x20tcolor=texelFetch(u_ColorMap,\x20ivCUV,0);','\x20\x20\x20vec3\x20baseColor\x20=\x20tcolor.xyz;','\x20\x20\x20float\x20baseAlpha\x20=\x20tcolor.w;','if(u_isolate\x20<\x200.5\x20){','\x20\x20\x20if(baseAlpha\x20<\x205.0){','\x09\x09discard;','\x20\x20\x20\x20\x20\x20\x20return;','\x20\x20\x20}','}','\x20\x20\x20if(baseAlpha\x20>\x205.0)','\x20\x20\x20\x20\x20\x20\x20baseAlpha=baseAlpha-5.0;','\x20\x20\x20if(baseColor.r==0.0\x20&&\x20baseColor.g\x20==0.0\x20&&\x20baseColor.b\x20==0.0\x20&&\x20baseAlpha==0.0){','\x09\x09discard;','\x20\x20\x20\x20\x20\x20\x20return;','\x20\x20\x20}','if(u_select<0.5)\x20{','\x20\x20\x20o_FragColor\x20=\x20vColor;','\x20\x20\x20return;','}','else\x20if(u_select<1.5)\x20\x20{','\x20\x20\x20if(baseAlpha\x20>\x201.5)','\x20\x20\x20\x20\x20\x20\x20o_FragColor\x20=\x20vColor;','\x20\x20\x20else','\x20\x20\x20\x20\x20\x20\x20discard;','\x20\x20\x20return;','}','else\x20if(u_select<2.5)\x20\x20{','\x20\x20\x20if(baseAlpha\x20>=\x201.0\x20)','\x20\x20\x20\x20\x20\x20\x20o_FragColor\x20=\x20vColor;','\x20\x20\x20else','\x20\x20\x20\x20\x20\x20\x20discard;','\x20\x20\x20return;','}','else\x20if(u_select<3.5)\x20\x20{','\x20\x20\x20if(baseColor.r\x20>\x201.0\x20)','\x20\x20\x20\x20\x20\x20\x20o_FragColor\x20=\x20vColor;','\x20\x20\x20else\x20if(baseAlpha<1.0)','\x20\x20\x20\x20\x20\x20\x20discard;','\x20\x20\x20else','\x20\x20\x20\x20\x20\x20\x20o_FragColor=vec4(0.0,0.0,0.0,0.0);','\x20\x20\x20return;','}','}']['join']('\x0a')},'Texture2D':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20vec4\x20u_color;','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','void\x20main()\x20{','\x09vec4\x20tex\x20=\x20texture(u_Texture,\x20vUV.xy);','\x20\x20\x20o_FragColor\x20=\x20u_color\x20*\x20tex;','}']['join']('\x0a')},'Texture2DColor':{'vertex':['in\x20vec3\x20a_position;','in\x20vec4\x20a_color;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','out\x20vec4\x20vColor;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','\x20\x20\x20vColor\x20=\x20a_color;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20vec4\x20u_color;','in\x20vec2\x20vUV;','in\x20vec4\x20vColor;','out\x20vec4\x20o_FragColor;','void\x20main()\x20{','\x09vec4\x20tex\x20=\x20texture(u_Texture,\x20vUV.xy);','\x20\x20\x20o_FragColor\x20=\x20u_color\x20*\x20vColor\x20*\x20tex;','}']['join']('\x0a')},'Basic2D':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20float\x20u_PointSize;','uniform\x20mat4\x20u_MVPmatrix;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20gl_PointSize\x20=\x20u_PointSize;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec4\x20u_color;','void\x20main()\x20{','\x20\x20\x20gl_FragColor\x20=\x20u_color;','}']['join']('\x0a')},'Basic2D_v2':{'vertex':['in\x20vec3\x20a_position;','#ifdef\x20LOG_DEPTH','\x09out\x20float\x20flogz;','\x09uniform\x20float\x20uFar;','#endif','uniform\x20float\x20u_PointSize;','uniform\x20mat4\x20u_MVPmatrix;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','#ifdef\x20LOG_DEPTH','\x20\x20\x20float\x20Fcoef\x20=\x202.0\x20/\x20log2(uFar+1.0);','\x20\x20\x20gl_Position.z\x20=\x20log2(max(1e-6,\x201.0\x20+\x20gl_Position.w))\x20*\x20Fcoef\x20-\x201.0;','\x20\x20\x20flogz\x20=\x201.0\x20+\x20gl_Position.w;','#endif','\x20\x20\x20gl_PointSize\x20=\x20u_PointSize;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec4\x20u_color;','#ifdef\x20LOG_DEPTH','\x09in\x20float\x20flogz;','\x09uniform\x20float\x20uFar;','#endif','out\x20vec4\x20o_FragColor;','void\x20main()\x20{','#ifdef\x20LOG_DEPTH','\x09float\x20hFceof\x20=\x201.0\x20/\x20log2(uFar+1.0);','\x09gl_FragDepth\x20=\x20log2(flogz)\x20*\x20hFceof;','#endif','\x20\x20\x20o_FragColor\x20=\x20u_color;','}']['join']('\x0a')},'AnimationBasic2D':{'vertex':['in\x20vec3\x20a_position;','#ifdef\x20LOG_DEPTH','\x09out\x20float\x20flogz;','\x09uniform\x20float\x20uFar;','#endif','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','out\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','in\x20vec4\x20a_bipedIdx;','in\x20vec4\x20a_bipedWeight;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20vec3(0,\x200,\x200);','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20bipedIdx[4];\x20bipedIdx[0]\x20=\x20int(a_bipedIdx.x);\x20bipedIdx[1]\x20=\x20int(a_bipedIdx.y);\x20bipedIdx[2]\x20=\x20int(a_bipedIdx.z);\x20bipedIdx[3]\x20=\x20int(a_bipedIdx.w);','\x20\x20\x20\x20\x20\x20\x20float\x20bipedWeight[4];\x20bipedWeight[0]\x20=\x20a_bipedWeight.x;\x20bipedWeight[1]\x20=\x20a_bipedWeight.y;\x20bipedWeight[2]\x20=\x20a_bipedWeight.z;\x20bipedWeight[3]\x20=\x20a_bipedWeight.w;','\x20\x20\x20\x20\x20\x20\x20for(int\x20w\x20=\x200;\x20w\x20<\x204;\x20w++)\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(bipedWeight[w]\x20==\x200.0)\x20continue;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20bipedIdx[w]\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(a_position,\x201.0);','\x09\x20\x20\x20\x20\x20\x20\x20\x20updatePosition\x20+=\x20vec3(vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w)\x20*\x20bipedWeight[w];','\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20}','\x20\x20\x20else\x20{','\x20\x20\x20\x20\x20\x20\x20updatePosition\x20=\x20a_position;','\x20\x20\x20}','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','#ifdef\x20LOG_DEPTH','\x20\x20\x20float\x20Fcoef\x20=\x202.0\x20/\x20log2(uFar+1.0);','\x20\x20\x20gl_Position.z\x20=\x20log2(max(1e-6,\x201.0\x20+\x20gl_Position.w))\x20*\x20Fcoef\x20-\x201.0;','\x20\x20\x20flogz\x20=\x201.0\x20+\x20gl_Position.w;','#endif','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20vec4\x20u_color;','in\x20vec3\x20vVertPos;','out\x20vec4\x20o_FragColor;','#ifdef\x20LOG_DEPTH','\x09in\x20float\x20flogz;','\x09uniform\x20float\x20uFar;','#endif','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09o_FragColor\x20=\x20u_color;','#ifdef\x20LOG_DEPTH','\x09float\x20hFceof\x20=\x201.0\x20/\x20log2(uFar+1.0);','\x09gl_FragDepth\x20=\x20log2(flogz)\x20*\x20hFceof;','#endif','}']['join']('\x0a')},'Basic2DColor':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec4\x20a_color;','uniform\x20float\x20u_PointSize;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec4\x20vColor;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20gl_PointSize\x20=\x20u_PointSize;','\x20\x20\x20vColor\x20=\x20a_color;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','varying\x20vec4\x20vColor;','uniform\x20vec4\x20u_color;','void\x20main()\x20{','\x20\x20\x20gl_FragColor\x20=\x20u_color\x20*\x20vColor;','}']['join']('\x0a')},'Basic3D':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20float\x20u_PointSize;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20gl_PointSize\x20=\x20u_PointSize;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec4\x20u_color;','varying\x20vec3\x20vVertPos;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x20\x20\x20gl_FragColor\x20=\x20u_color;','}']['join']('\x0a')},'Basic3D_v2':{'vertex':['in\x20vec3\x20a_position;','uniform\x20float\x20u_PointSize;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','out\x20vec3\x20vVertPos;','#ifdef\x20LOG_DEPTH','\x09out\x20float\x20flogz;','\x09uniform\x20float\x20uFar;','#endif','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20gl_PointSize\x20=\x20u_PointSize;','#ifdef\x20LOG_DEPTH','\x20\x20\x20float\x20Fcoef\x20=\x202.0\x20/\x20log2(uFar+1.0);','\x20\x20\x20gl_Position.z\x20=\x20log2(max(1e-6,\x201.0\x20+\x20gl_Position.w))\x20*\x20Fcoef\x20-\x201.0;','\x20\x20\x20flogz\x20=\x201.0\x20+\x20gl_Position.w;','#endif','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec4\x20u_color;','in\x20vec3\x20vVertPos;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','#ifdef\x20LOG_DEPTH','\x09in\x20float\x20flogz;','\x09uniform\x20float\x20uFar;','#endif','out\x20vec4\x20o_FragColor;','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','#ifdef\x20LOG_DEPTH','\x09float\x20hFceof\x20=\x201.0\x20/\x20log2(uFar+1.0);','\x09gl_FragDepth\x20=\x20log2(flogz)\x20*\x20hFceof;','#endif','\x20\x20\x20o_FragColor\x20=\x20u_color;','}']['join']('\x0a')},'FXAA':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec2\x20uTexScale;','uniform\x20sampler2D\x20u_Texture;','varying\x20vec2\x20vUV;','const\x20float\x20FXAA_SPAN_MAX\x20=\x208.0;','const\x20float\x20FXAA_REDUCE_MUL\x20=\x201.0\x20/\x208.0;','const\x20float\x20FXAA_REDUCE_MIN\x20=\x201.0\x20/\x20128.0;','void\x20main()\x20{','\x09vec3\x20rgbNW\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20(vec2(-1.0,-1.0)\x20/\x20uTexScale)).rgb;','\x09vec3\x20rgbNE\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20(vec2(1.0,-1.0)\x20/\x20uTexScale)).rgb;','\x09vec3\x20rgbSW\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20(vec2(-1.0,1.0)\x20/\x20uTexScale)).rgb;','\x09vec3\x20rgbSE\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20(vec2(1.0,1.0)\x20/\x20uTexScale)).rgb;','\x09vec3\x20rgbM\x20=\x20texture2D(u_Texture,\x20vUV).rgb;','\x09vec3\x20luma\x20=\x20vec3(0.299,\x200.587,\x200.114);','\x09float\x20lumaNW\x20=\x20dot(rgbNW,\x20luma);','\x09float\x20lumaNE\x20=\x20dot(rgbNE,\x20luma);','\x09float\x20lumaSW\x20=\x20dot(rgbSW,\x20luma);','\x09float\x20lumaSE\x20=\x20dot(rgbSE,\x20luma);','\x09float\x20lumaM\x20=\x20dot(rgbM,\x20\x20luma);','\x09float\x20lumaMin\x20=\x20min(lumaM,\x20min(min(lumaNW,\x20lumaNE),\x20min(lumaSW,\x20lumaSE)));','\x09float\x20lumaMax\x20=\x20max(lumaM,\x20max(max(lumaNW,\x20lumaNE),\x20max(lumaSW,\x20lumaSE)));','\x09vec2\x20dir;','\x09dir.x\x20=\x20-((lumaNW\x20+\x20lumaNE)\x20-\x20(lumaSW\x20+\x20lumaSE));','\x09dir.y\x20=\x20((lumaNW\x20+\x20lumaSW)\x20-\x20(lumaNE\x20+\x20lumaSE));','\x09float\x20dirReduce\x20=\x20max(','\x09\x09(lumaNW\x20+\x20lumaNE\x20+\x20lumaSW\x20+\x20lumaSE)\x20*\x20(0.25\x20*\x20FXAA_REDUCE_MUL),','\x09\x09FXAA_REDUCE_MIN);','\x09float\x20rcpDirMin\x20=\x201.0\x20/\x20(min(abs(dir.x),\x20abs(dir.y))\x20+\x20dirReduce);','\x09dir\x20=\x20min(vec2(FXAA_SPAN_MAX,\x20\x20FXAA_SPAN_MAX),','\x09\x09max(vec2(-FXAA_SPAN_MAX,\x20-FXAA_SPAN_MAX),','\x09\x09\x09dir\x20*\x20rcpDirMin))\x20/\x20uTexScale;','\x09vec3\x20rgbA\x20=\x20(1.0\x20/\x202.0)\x20*\x20(','\x09\x09texture2D(u_Texture,\x20vUV.xy\x20+\x20dir\x20*\x20(1.0\x20/\x203.0\x20-\x200.5)).rgb\x20+','\x09\x09texture2D(u_Texture,\x20vUV.xy\x20+\x20dir\x20*\x20(2.0\x20/\x203.0\x20-\x200.5)).rgb);','\x09vec3\x20rgbB\x20=\x20rgbA\x20*\x20(1.0\x20/\x202.0)\x20+\x20(1.0\x20/\x204.0)\x20*\x20(','\x09\x09texture2D(u_Texture,\x20vUV.xy\x20+\x20dir\x20*\x20(0.0\x20/\x203.0\x20-\x200.5)).rgb\x20+','\x09\x09texture2D(u_Texture,\x20vUV.xy\x20+\x20dir\x20*\x20(3.0\x20/\x203.0\x20-\x200.5)).rgb);','\x09float\x20lumaB\x20=\x20dot(rgbB,\x20luma);','\x09float\x20alpha\x20=\x20texture2D(u_Texture,\x20vUV).a;','\x09if\x20((lumaB\x20<\x20lumaMin)\x20||\x20(lumaB\x20>\x20lumaMax))\x20{','\x09\x09gl_FragColor\x20=\x20vec4(rgbA.rgb,\x20alpha);','\x09}','\x09else\x20{','\x09\x09gl_FragColor\x20=\x20vec4(rgbB.rgb,\x20alpha);','\x09}','}']['join']('\x0a')},'Depth':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPosition;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vGLPosition\x20=\x20vec3(position)\x20/\x20position.w;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4.xyz)\x20/\x20vertPos4.w;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPosition;','uniform\x20float\x20ubPerspectiveView;','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','\x20\x20\x20const\x20float\x20DEPTH_MAX\x20=\x2016777215.0;','\x20\x20\x20float\x20d1\x20=\x20(vGLPosition.z\x20*\x200.5\x20+\x200.5)\x20*\x20step(ubPerspectiveView,\x200.5);','\x20\x20\x20float\x20d2\x20=\x20vGLPosition.z\x20*\x20step(0.5,\x20ubPerspectiveView);','\x20\x20\x20float\x20d\x20=\x20floor((d1+d2)\x20*\x20DEPTH_MAX);','\x20\x20\x20float\x20depth1\x20=\x20shMod(d,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth2\x20=\x20shMod(d\x20/\x20256.0,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth3\x20=\x20shMod((d\x20/\x20256.0)\x20/\x20256.0,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth4\x20=\x20d1\x20+\x20d2;','\x20\x20\x20gl_FragColor\x20=\x20vec4(depth1,\x20depth2,\x20depth3,\x20depth4);','}']['join']('\x0a')},'Edge':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20vec2\x20uTexScale;','uniform\x20vec4\x20u_color;','uniform\x20float\x20ubUseStipple;','varying\x20vec2\x20vUV;','void\x20main()\x20{','vec2\x20invSize\x20=\x20vec2(\x201.0\x20/\x20uTexScale.x,\x201.0\x20/\x20uTexScale.y);','float\x20dxtex\x20=\x20invSize.x;','float\x20dytex\x20=\x20invSize.y;','\x09mat3\x20matEdgeX\x20=\x20mat3(','\x09\x090.0,\x20-1.0,\x200.0,','\x09\x090.0,\x201.0,\x200.0,','\x09\x090.0,\x200.0,\x200.0','\x09);','\x09mat3\x20matEdgeY\x20=\x20mat3(','\x09\x090.0,\x200.0,\x200.0,','\x09\x09-1.0,\x201.0,\x200.0,','\x09\x090.0,\x200.0,\x200.0','\x09);','mat3\x20matSample\x20=\x20mat3(','\x090.0,\x200.0,\x200.0,','\x090.0,\x200.0,\x200.0,','\x090.0,\x200.0,\x200.0',');','for\x20(int\x20i\x20=\x20-1;\x20i<2;\x20i++)','{','\x09for\x20(int\x20j\x20=\x20-1;\x20j<2;\x20j++)','\x09{','\x09\x09vec4\x20sample\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20vec2(float(i)\x20*\x20dxtex,\x20float(j)\x20*\x20dytex)).rgba;','\x20\x20\x20\x20\x20\x20\x20if(sample.a==0.0)','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20matSample[i\x20+\x201][j\x20+\x201]\x20=\x200.0;','\x20\x20\x20\x20\x20\x20\x20else','\x09\x09\x20\x20\x20\x20matSample[i\x20+\x201][j\x20+\x201]\x20=\x20length(sample.xyz);','\x09}','}','float\x20gx\x20=\x20dot(matEdgeX[0],\x20matSample[0])\x20+\x20dot(matEdgeX[1],\x20matSample[1])\x20+\x20dot(matEdgeX[2],\x20matSample[2]);','float\x20gy\x20=\x20dot(matEdgeY[0],\x20matSample[0])\x20+\x20dot(matEdgeY[1],\x20matSample[1])\x20+\x20dot(matEdgeY[2],\x20matSample[2]);','float\x20g\x20=\x20sqrt(pow(gx,\x202.0)\x20+\x20pow(gy,\x202.0));','if(\x20g\x20>\x200.0){','\x20\x20\x20vec4\x20col\x20=\x20u_color;','if(ubUseStipple\x20>\x200.5)\x20{','\x20\x20\x20float\x20aMod\x20=\x20(vUV.x\x20+\x20vUV.y)\x20*\x20512.0;','\x20\x20\x20float\x20bMod\x20=\x207.0;','\x09float\x20stippleData\x20=\x20floor(abs(aMod\x20-\x20bMod\x20*\x20floor(aMod/bMod)));','\x20\x20\x20float\x20stipple\x20=\x20step(0.5,\x20stippleData);','\x20\x20\x20col.a\x20*=\x20stipple;','}','\x20\x20\x20gl_FragColor\x20=\x20col;','}','else','{','\x09gl_FragColor\x20=\x20vec4(0.0,\x200.0,\x200.0,\x200.0);','}','}']['join']('\x0a')},'Background':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec4\x20a_color;','varying\x20vec4\x20vColor;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vColor\x20=\x20a_color;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','varying\x20vec4\x20vColor;','void\x20main()\x20{','\x20\x20\x20gl_FragColor\x20=\x20vColor;','}']['join']('\x0a')},'SkyBox':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vVertPos\x20=\x20a_position;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20samplerCube\x20utexCubeMap;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20color\x20=\x20textureCube(utexCubeMap,\x20vVertPos);','\x20\x20\x20vec3\x20fragColor\x20=\x20color.rgb;\x20','#ifdef\x20SHADING_HDR','\x20\x20\x20fragColor\x20=\x20fragColor\x20/\x20(fragColor\x20+\x20vec3(1.0));','\x20\x20\x20fragColor\x20=\x20pow(fragColor,\x20vec3(1.0\x20/\x202.2));\x20','#endif','\x09gl_FragColor\x20=\x20vec4(fragColor.rgb,\x201.0);','}']['join']('\x0a')},'EquirectangularSkyBox':{'vertex':['in\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vVertPos\x20=\x20a_position;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture8;','in\x20vec3\x20vVertPos;','out\x20vec4\x20o_FragColor;','const\x20vec2\x20invAtan\x20=\x20vec2(0.1591,\x200.3183);','vec2\x20SampleSphericalMap(vec3\x20v)','{','\x20\x20\x20\x20vec2\x20uv\x20=\x20vec2(atan(v.z,\x20v.x),\x20asin(v.y));','\x20\x20\x20\x20uv\x20*=\x20invAtan;','\x20\x20\x20\x20uv\x20+=\x200.5;','\x20\x20\x20\x20return\x20uv;','}','void\x20main()\x20{','\x20\x20\x20vec2\x20uv\x20=\x20SampleSphericalMap(normalize(vVertPos));','\x20\x20\x20vec3\x20fragColor\x20=\x20texture(u_Texture8,\x20uv).rgb;','\x09o_FragColor\x20=\x20vec4(fragColor.rgb,\x201.0);','}']['join']('\x0a')},'PreFilteredEnvironment':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vVertPos\x20=\x20a_position;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20samplerCube\x20utexCubeMap;','uniform\x20float\x20fRoughness;','varying\x20vec3\x20vVertPos;','const\x20float\x20PI\x20=\x203.14159265359;','float\x20VanDerCorpus(int\x20n,\x20int\x20base)','{','\x09float\x20invBase\x20=\x201.0\x20/\x20float(base);','\x09float\x20denom\x20=\x201.0;','\x09float\x20result\x20=\x200.0;','\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x2032;\x20++i)','\x09{\x20','\x09\x09if\x20(n\x20>\x200)','\x09\x09{','\x09\x09\x09denom\x20=\x20mod(float(n),\x202.0);','\x09\x09\x09result\x20+=\x20denom\x20*\x20invBase;','\x09\x09\x09invBase\x20=\x20invBase\x20/\x202.0;','\x09\x09\x09n\x20=\x20int(float(n)\x20/\x202.0);','\x09\x09}','\x09}','\x09return\x20result;','}','vec2\x20HammersleyNoBitOps(int\x20i,\x20int\x20N)','{','\x09return\x20vec2(float(i)/float(N),\x20VanDerCorpus(i,\x202));','}','vec3\x20importanceSampleGGX(vec2\x20Xi,\x20vec3\x20N,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness\x20*\x20roughness;','\x09float\x20phi\x20=\x202.0\x20*\x20PI\x20*\x20Xi.x;','\x09float\x20cosTheta\x20=\x20sqrt((1.0\x20-\x20Xi.y)\x20/\x20(1.0\x20+\x20(a\x20*\x20a\x20-\x201.0)\x20*\x20Xi.y));','\x09float\x20sinTheta\x20=\x20sqrt(1.0\x20-\x20cosTheta\x20*\x20cosTheta);','\x09vec3\x20H;','\x09H.x\x20=\x20cos(phi)\x20*\x20sinTheta;','\x09H.y\x20=\x20sin(phi)\x20*\x20sinTheta;','\x09H.z\x20=\x20cosTheta;','\x09vec3\x20up\x20=\x20abs(N.z)\x20<\x200.999\x20?\x20vec3(0.0,\x200.0,\x201.0)\x20:\x20vec3(1.0,\x200.0,\x200.0);','\x09vec3\x20tangent\x20=\x20normalize(cross(up,\x20N));','\x09vec3\x20bitangent\x20=\x20cross(N,\x20tangent);','\x09vec3\x20sampleVec\x20=\x20H.x\x20*\x20tangent\x20+\x20H.y\x20*\x20bitangent\x20+\x20H.z\x20*\x20N;','\x09return\x20normalize(sampleVec);','}','void\x20main()','{','\x09vec3\x20N\x20=\x20normalize(vVertPos);','\x09vec3\x20V\x20=\x20N;','\x09const\x20int\x20sampleCount\x20=\x201024;','\x09float\x20totalWeight\x20=\x200.0;','\x09vec3\x20prefilteredColor\x20=\x20vec3(0.0,\x200.0,\x200.0);','\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20sampleCount;\x20++i)','\x09{','\x09\x09vec2\x20Xi\x20=\x20HammersleyNoBitOps(i,\x20sampleCount);','\x09\x09vec3\x20H\x20=\x20importanceSampleGGX(Xi,\x20N,\x20fRoughness);','\x09\x09vec3\x20L\x20=\x20normalize(2.0\x20*\x20dot(V,\x20H)\x20*\x20H\x20-\x20V);','\x09\x09float\x20NdotL\x20=\x20max(dot(N,\x20L),\x200.0);','\x09\x09if\x20(NdotL\x20>\x200.0);','\x09\x09{','\x09\x09\x09prefilteredColor\x20+=\x20textureCube(utexCubeMap,\x20L).rgb\x20*\x20NdotL;','\x09\x09\x09totalWeight\x20+=\x20NdotL;','\x09\x09}','\x09}','\x09prefilteredColor\x20=\x20prefilteredColor\x20/\x20totalWeight;','\x09gl_FragColor\x20=\x20vec4(prefilteredColor.rgb,\x201.0);','}']['join']('\x0a')},'IrradianceEnvironment':{'vertex':['in\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vVertPos\x20=\x20a_position;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20samplerCube\x20utexCubeMap;','uniform\x20float\x20fRoughness;','in\x20vec3\x20vVertPos;','const\x20float\x20PI\x20=\x203.14159265359;','layout(location\x20=\x200)\x20out\x20vec4\x20o_FragColor;','void\x20main()','{','\x20\x20\x20\x20vec3\x20N\x20=\x20normalize(vVertPos);','\x20\x20\x20\x20vec3\x20irradiance\x20=\x20vec3(0.0);\x20\x20\x20','\x20\x20\x20\x20vec3\x20up\x20\x20\x20\x20=\x20vec3(0.0,\x201.0,\x200.0);','\x20\x20\x20\x20vec3\x20right\x20=\x20normalize(cross(up,\x20N));','\x20\x20\x20\x20up\x20\x20\x20\x20\x20\x20\x20\x20\x20=\x20normalize(cross(N,\x20right));','\x20\x20\x20\x20float\x20sampleDelta\x20=\x200.025;','\x20\x20\x20\x20float\x20nrSamples\x20=\x200.0f;','\x20\x20\x20\x20for(float\x20phi\x20=\x200.0;\x20phi\x20<\x202.0\x20*\x20PI;\x20phi\x20+=\x20sampleDelta)','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20for(float\x20theta\x20=\x200.0;\x20theta\x20<\x200.5\x20*\x20PI;\x20theta\x20+=\x20sampleDelta)','\x20\x20\x20\x20\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20tangentSample\x20=\x20vec3(sin(theta)\x20*\x20cos(phi),\x20\x20sin(theta)\x20*\x20sin(phi),\x20cos(theta));','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20sampleVec\x20=\x20tangentSample.x\x20*\x20right\x20+\x20tangentSample.y\x20*\x20up\x20+\x20tangentSample.z\x20*\x20N;\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20irradiance\x20+=\x20texture(utexCubeMap,\x20sampleVec).rgb\x20*\x20cos(theta)\x20*\x20sin(theta);','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20nrSamples++;','\x20\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20\x20}','\x20\x20\x20\x20irradiance\x20=\x20PI\x20*\x20irradiance\x20*\x20(1.0\x20/\x20float(nrSamples));','\x20\x20\x20\x20o_FragColor\x20=\x20vec4(irradiance,\x201.0);','}']['join']('\x0a')},'BRDF':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','const\x20float\x20PI\x20=\x203.14159265359;','in\x20vec2\x20vUV;','layout(location\x20=\x200)\x20out\x20vec4\x20o_FragColor;','float\x20RadicalInverse_VdC(uint\x20bits)\x20','{','\x20\x20\x20\x20bits\x20=\x20(bits\x20<<\x2016u)\x20|\x20(bits\x20>>\x2016u);','\x20\x20\x20\x20bits\x20=\x20((bits\x20&\x200x55555555u)\x20<<\x201u)\x20|\x20((bits\x20&\x200xAAAAAAAAu)\x20>>\x201u);','\x20\x20\x20\x20bits\x20=\x20((bits\x20&\x200x33333333u)\x20<<\x202u)\x20|\x20((bits\x20&\x200xCCCCCCCCu)\x20>>\x202u);','\x20\x20\x20\x20bits\x20=\x20((bits\x20&\x200x0F0F0F0Fu)\x20<<\x204u)\x20|\x20((bits\x20&\x200xF0F0F0F0u)\x20>>\x204u);','\x20\x20\x20\x20bits\x20=\x20((bits\x20&\x200x00FF00FFu)\x20<<\x208u)\x20|\x20((bits\x20&\x200xFF00FF00u)\x20>>\x208u);','\x20\x20\x20\x20return\x20float(bits)\x20*\x202.3283064365386963e-10;','}','vec2\x20Hammersley(uint\x20i,\x20uint\x20N)','{','\x20\x20\x20\x20return\x20vec2(float(i)/float(N),\x20RadicalInverse_VdC(i));','}','vec3\x20ImportanceSampleGGX(vec2\x20Xi,\x20vec3\x20N,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20a\x20=\x20roughness*roughness;','\x20\x20\x20\x20float\x20phi\x20=\x202.0\x20*\x20PI\x20*\x20Xi.x;','\x20\x20\x20\x20float\x20cosTheta\x20=\x20sqrt((1.0\x20-\x20Xi.y)\x20/\x20(1.0\x20+\x20(a*a\x20-\x201.0)\x20*\x20Xi.y));','\x20\x20\x20\x20float\x20sinTheta\x20=\x20sqrt(1.0\x20-\x20cosTheta*cosTheta);','\x20\x20\x20\x20vec3\x20H;','\x20\x20\x20\x20H.x\x20=\x20cos(phi)\x20*\x20sinTheta;','\x20\x20\x20\x20H.y\x20=\x20sin(phi)\x20*\x20sinTheta;','\x20\x20\x20\x20H.z\x20=\x20cosTheta;','\x20\x20\x20\x20vec3\x20up\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20=\x20abs(N.z)\x20<\x200.999\x20?\x20vec3(0.0,\x200.0,\x201.0)\x20:\x20vec3(1.0,\x200.0,\x200.0);','\x20\x20\x20\x20vec3\x20tangent\x20\x20\x20=\x20normalize(cross(up,\x20N));','\x20\x20\x20\x20vec3\x20bitangent\x20=\x20cross(N,\x20tangent);','\x20\x20\x20\x20vec3\x20sampleVec\x20=\x20tangent\x20*\x20H.x\x20+\x20bitangent\x20*\x20H.y\x20+\x20N\x20*\x20H.z;','\x20\x20\x20\x20return\x20normalize(sampleVec);','}','float\x20GeometrySchlickGGX(float\x20NdotV,\x20float\x20roughness)','{','\x20\x20\x20\x20//\x20note\x20that\x20we\x20use\x20a\x20different\x20k\x20for\x20IBL','\x20\x20\x20\x20float\x20a\x20=\x20roughness;','\x20\x20\x20\x20float\x20k\x20=\x20(a\x20*\x20a)\x20/\x202.0;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20NdotV;','\x20\x20\x20\x20float\x20denom\x20=\x20NdotV\x20*\x20(1.0\x20-\x20k)\x20+\x20k;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20GeometrySmith(vec3\x20N,\x20vec3\x20V,\x20vec3\x20L,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20NdotV\x20=\x20max(dot(N,\x20V),\x200.0);','\x20\x20\x20\x20float\x20NdotL\x20=\x20max(dot(N,\x20L),\x200.0);','\x20\x20\x20\x20float\x20ggx2\x20=\x20GeometrySchlickGGX(NdotV,\x20roughness);','\x20\x20\x20\x20float\x20ggx1\x20=\x20GeometrySchlickGGX(NdotL,\x20roughness);','\x20\x20\x20\x20return\x20ggx1\x20*\x20ggx2;','}','vec2\x20IntegrateBRDF(float\x20NdotV,\x20float\x20roughness)','{','\x20\x20\x20\x20vec3\x20V;','\x20\x20\x20\x20V.x\x20=\x20sqrt(1.0\x20-\x20NdotV*NdotV);','\x20\x20\x20\x20V.y\x20=\x200.0;','\x20\x20\x20\x20V.z\x20=\x20NdotV;','\x20\x20\x20\x20float\x20A\x20=\x200.0;','\x20\x20\x20\x20float\x20B\x20=\x200.0;\x20','\x20\x20\x20\x20vec3\x20N\x20=\x20vec3(0.0,\x200.0,\x201.0);','\x20\x20\x20\x20const\x20uint\x20SAMPLE_COUNT\x20=\x201024u;','\x20\x20\x20\x20for(uint\x20i\x20=\x200u;\x20i\x20<\x20SAMPLE_COUNT;\x20++i)','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20Xi\x20=\x20Hammersley(i,\x20SAMPLE_COUNT);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20H\x20=\x20ImportanceSampleGGX(Xi,\x20N,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(2.0\x20*\x20dot(V,\x20H)\x20*\x20H\x20-\x20V);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20NdotL\x20=\x20max(L.z,\x200.0);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20NdotH\x20=\x20max(H.z,\x200.0);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20VdotH\x20=\x20max(dot(V,\x20H),\x200.0);','\x20\x20\x20\x20\x20\x20\x20\x20if(NdotL\x20>\x200.0)','\x20\x20\x20\x20\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20G\x20=\x20GeometrySmith(N,\x20V,\x20L,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20G_Vis\x20=\x20(G\x20*\x20VdotH)\x20/\x20(NdotH\x20*\x20NdotV);','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20Fc\x20=\x20pow(1.0\x20-\x20VdotH,\x205.0);','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20A\x20+=\x20(1.0\x20-\x20Fc)\x20*\x20G_Vis;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20B\x20+=\x20Fc\x20*\x20G_Vis;','\x20\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20\x20}','\x20\x20\x20\x20A\x20/=\x20float(SAMPLE_COUNT);','\x20\x20\x20\x20B\x20/=\x20float(SAMPLE_COUNT);','\x20\x20\x20\x20return\x20vec2(A,\x20B);','}','void\x20main()','{','\x20\x20\x20vec2\x20integratedBRDF\x20=\x20IntegrateBRDF(vUV.x,\x20vUV.y);','\x09o_FragColor\x20=\x20vec4(integratedBRDF,\x200.0,\x201.0);','}']['join']('\x0a')},'Blur':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20vec2\x20uTexScale;','uniform\x20int\x20uBlurType;','uniform\x20vec2\x20uDirection;','uniform\x20float\x20uSigma;','uniform\x20vec4\x20u_color;','varying\x20vec2\x20vUV;','vec4\x20ssaoBlur_v2(vec2\x20uv)\x20{','\x20\x20\x20\x20vec4\x20color\x20=\x20vec4(0.0);','\x20\x20\x20\x20vec2\x20texelSize\x20=\x20vec2(1.0)\x20/\x20uTexScale;','\x20\x20\x20\x20const\x20int\x20sigma\x20=\x201;','\x20\x20\x20\x20for(int\x20x\x20=\x20-sigma;\x20x<=\x20sigma;\x20++x)\x20','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20y\x20=\x20-sigma;\x20y\x20<=\x20sigma;\x20++y)','\x20\x20\x20\x20\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20offset\x20=\x20vec2(float(x),\x20float(y))\x20*\x20texelSize;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20+\x20offset);','\x20\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20\x20}','\x20\x20\x20color=color\x20/\x20float((2*sigma+1)\x20*\x20(2*sigma+1));','\x20\x20\x20\x20return\x20vec4(color.xyz,1.0);','}','vec4\x20Gaussian_Blur_v2(vec2\x20uv)\x20{','\x20\x20\x20\x20vec4\x20color\x20=\x20vec4(0.0);','\x20\x20\x20\x20vec2\x20off1\x20=\x20vec2(uSigma\x20*\x201.33)\x20*\x20uDirection;','\x20\x20\x20\x20vec2\x20off2\x20=\x20vec2(uSigma\x20*\x203.23)\x20*\x20uDirection;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv)\x20*\x200.2270270270;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20+\x20(off1\x20/\x20uTexScale))\x20*\x200.3162162162;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20-\x20(off1\x20/\x20uTexScale))\x20*\x200.3162162162;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20+\x20(off2\x20/\x20uTexScale))\x20*\x200.0702702703;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20-\x20(off2\x20/\x20uTexScale))\x20*\x200.0702702703;','\x20\x20\x20\x20return\x20color;','}','void\x20main()\x20{','\x20\x20\x20vec4\x20col\x20=\x20vec4(0.0);','\x20\x20\x20if(uBlurType\x20==\x200)','\x20\x20\x20\x20\x20\x20col\x20=\x20Gaussian_Blur_v2(vUV);','\x20\x20\x20else\x20if(uBlurType\x20==\x201)','\x20\x20\x20\x20\x20\x20col\x20=\x20ssaoBlur_v2(vUV);','\x20\x20\x20gl_FragColor\x20=\x20u_color\x20*\x20col;','}']['join']('\x0a')},'SSAO':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_PositionTexture;','uniform\x20sampler2D\x20u_NormalTexture;','uniform\x20sampler2D\x20u_NoiseTexture;','uniform\x20vec2\x20uTexScale;','uniform\x20vec2\x20uNoiseTexScale;','uniform\x20float\x20uSigma;','uniform\x20float\x20uBias;','uniform\x20vec2\x20uAttenuation;','uniform\x20float\x20ubPerspectiveView;','uniform\x20float\x20uNear;','uniform\x20float\x20uFar;','#define\x20SIN45\x200.707107','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','vec3\x20getPosition(vec2\x20fragCoord)\x20{','\x20\x20\x20vec4\x20pos4\x20=\x20texture(u_PositionTexture,\x20fragCoord);','\x20\x20\x20vec3\x20pos\x20=\x20vec3(pos4.xyz)\x20/\x20pos4.w;','\x09return\x20pos;','}','float\x20getOcclusion(vec3\x20position,\x20vec3\x20normal,\x20vec2\x20fragCoord)\x20{','\x20\x20\x20\x20vec3\x20occluderPosition\x20=\x20getPosition(fragCoord);','\x20\x20\x20\x20vec3\x20positionVec\x20=\x20occluderPosition\x20-\x20position;','\x20\x20\x20\x20vec3\x20occluderNormal\x20=\x20texture(u_NormalTexture,\x20fragCoord).xyz;','\x20\x20\x20\x20float\x20intensityN\x20=\x20max(((1.0\x20-\x20abs(dot(normal,\x20normalize(occluderNormal))))\x20-\x20uBias),\x200.0);','\x20\x20\x20\x20vec3\x20P2SP\x20=\x20occluderPosition\x20-\x20position;','\x20\x20\x20\x20float\x20dis2\x20=\x20dot(P2SP,\x20P2SP);','\x20\x20\x20\x20float\x20dis\x20=\x20sqrt(dis2);','\x20\x20\x20\x20if(dis\x20>\x20uSigma)\x20return\x200.0;','\x20\x20\x20\x20float\x20rangeCheck\x20=\x20clamp(uSigma\x20/\x20dis,\x200.0,\x201.0);','\x20\x20\x20\x20float\x20NdotP2SP\x20=\x20dot(normal,\x20normalize(P2SP))\x20/\x20dis;','\x20\x20\x20\x20return\x20(NdotP2SP\x20+\x20uBias)\x20*\x20rangeCheck\x20*\x20intensityN;','}','void\x20main()\x20{','\x20\x20\x20\x20vec2\x20fragCoord\x20=\x20vUV;','\x20\x20\x20\x20vec3\x20position\x20=\x20getPosition(fragCoord);','\x20\x20\x20\x20vec3\x20normal\x20=\x20texture(u_NormalTexture,\x20fragCoord).xyz;','\x20\x20\x20normal\x20=\x20normalize(normal);','\x20\x20\x20\x20vec2\x20rand\x20=\x20texture(u_NoiseTexture,\x20fragCoord\x20+\x20uNoiseTexScale).xy;','\x20\x20\x20\x20rand\x20=\x20normalize(rand\x20*\x202.0\x20-\x201.0);','\x20\x20\x20\x20float\x20kernelRadius\x20=\x20uSigma;','\x20\x20\x20\x20vec2\x20kernel[4];','\x20\x20\x20\x20kernel[0]\x20=\x20vec2(0.0,\x201.0);','\x20\x20\x20\x20kernel[1]\x20=\x20vec2(1.0,\x200.0);','\x20\x20\x20\x20kernel[2]\x20=\x20vec2(0.0,\x20-1.0);','\x20\x20\x20\x20kernel[3]\x20=\x20vec2(-1.0,\x200.0);','\x20\x20\x20\x20float\x20occlusion\x20=\x200.0;','\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x204;\x20++i)\x20{','\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20k1\x20=\x20reflect(kernel[i],\x20rand);','\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20k2\x20=\x20vec2(k1.x\x20*\x20SIN45\x20-\x20k1.y\x20*\x20SIN45,\x20k1.x\x20*\x20SIN45\x20+\x20k1.y\x20*\x20SIN45);','\x20\x20\x20\x20\x20\x20\x20\x20k1\x20*=\x20kernelRadius;','\x20\x20\x20\x20\x20\x20\x20\x20k2\x20*=\x20kernelRadius;','\x20\x20\x20\x20\x20\x20\x20\x20k1\x20/=\x20uTexScale;','\x20\x20\x20\x20\x20\x20\x20\x20k2\x20/=\x20uTexScale;','\x20\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20getOcclusion(position,\x20normal,\x20fragCoord\x20+\x20vec2(k1));','\x20\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20getOcclusion(position,\x20normal,\x20fragCoord\x20+\x20vec2(k2\x20*\x200.75));','\x20\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20getOcclusion(position,\x20normal,\x20fragCoord\x20+\x20vec2(k1\x20*\x200.5));','\x20\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20getOcclusion(position,\x20normal,\x20fragCoord\x20+\x20vec2(k2\x20*\x200.25));','\x20\x20\x20\x20}','\x20\x20\x20occlusion\x20=\x20clamp((occlusion\x20/\x2016.0),\x200.0,\x201.0);','if(occlusion\x20>\x200.0)','\x20\x20\x20{\x20o_FragColor\x20=\x20vec4(1.0,\x201.0,\x201.0,\x201.0\x20-\x20occlusion);\x20}','else','\x20\x20\x20{\x20o_FragColor\x20=\x20vec4(0.0,\x200.0,\x200.0,\x200.0);\x20}','}']['join']('\x0a')},'SSAO_v2':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_PositionTexture;','uniform\x20sampler2D\x20u_NormalTexture;','uniform\x20sampler2D\x20u_NoiseTexture;','uniform\x20mat4\x20u_ProjectionMatrix;','uniform\x20vec2\x20uTexScale;','uniform\x20vec2\x20uNoiseTexScale;','uniform\x20vec3\x20uSamples[32];','uniform\x20float\x20uSigma;','uniform\x20float\x20uBias;','uniform\x20vec2\x20uAttenuation;','#define\x20SIN45\x200.707107','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','vec3\x20getPosition(vec2\x20fragCoord)\x20{','\x20\x20\x20vec4\x20pos4\x20=\x20texture(u_PositionTexture,\x20fragCoord);','\x20\x20\x20vec3\x20pos\x20=\x20vec3(pos4.xyz)\x20/\x20pos4.w;','\x09return\x20pos;','}','void\x20main()\x20{','\x20\x20\x20\x20vec2\x20fragCoord\x20=\x20vUV;','\x20\x20\x20\x20vec3\x20position\x20=\x20getPosition(fragCoord);','\x20\x20\x20\x20vec3\x20normal\x20=\x20texture(u_NormalTexture,\x20fragCoord).xyz;','\x09if(normal.z\x20<\x200.0)','\x09\x09normal\x20*=\x20-1.0;','\x20\x20\x20\x20vec3\x20rand\x20=\x20texture(u_NoiseTexture,\x20fragCoord\x20*\x20uNoiseTexScale).xyz;','\x20\x20\x20\x20rand\x20=\x20vec3(vec2(rand.xy)\x20*\x202.0\x20-\x201.0,\x20rand.z);','\x20\x20\x20vec3\x20tangent\x20=\x20normalize(rand\x20-\x20normal\x20*\x20dot(rand,\x20normal));','\x20\x20\x20vec3\x20bitangent\x20=\x20cross(normal,\x20tangent);','\x20\x20\x20mat3\x20TBN\x20=\x20mat3(tangent,\x20bitangent,\x20normal);\x20','\x20\x20\x20\x20float\x20kernelRadius\x20=\x20uSigma;','\x20\x20\x20float\x20occlusion\x20=\x200.0;','\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x2032;\x20++i)','\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20vec3\x20samplePos\x20=\x20TBN\x20*\x20uSamples[i];','\x20\x20\x20\x20\x20\x20\x20samplePos\x20=\x20position\x20+\x20samplePos\x20*\x20kernelRadius;','\x20\x20\x20\x20\x20\x20\x20vec4\x20offset\x20=\x20vec4(samplePos,\x201.0);','\x20\x20\x20\x20\x20\x20\x20offset\x20\x20\x20\x20\x20\x20=\x20u_ProjectionMatrix\x20*\x20offset;','\x20\x20\x20\x20\x20\x20\x20offset.xyz\x20/=\x20offset.w;','\x20\x20\x20\x20\x20\x20\x20offset.xyz\x20=\x20offset.xyz\x20*\x200.5\x20+\x200.5;','\x20\x20\x20\x20\x20\x20\x20vec3\x20sampleDepth\x20=\x20getPosition(offset.xy);\x20','\x20\x20\x20\x20\x20\x20\x20vec3\x20positionVec\x20=\x20position\x20-\x20sampleDepth;','\x20\x20\x20\x20\x20\x20\x20float\x20rangeCheck\x20=\x20smoothstep(0.0,\x201.0,\x20kernelRadius\x20/\x20length(positionVec));','\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20(sampleDepth.z\x20>=\x20samplePos.z\x20+\x20uBias\x20?\x201.0\x20:\x200.0)\x20*\x20rangeCheck;','\x20\x20\x20\x20}','\x20\x20\x20occlusion\x20=\x20clamp((occlusion\x20/\x2032.0),\x200.0,\x201.0);','\x20\x20\x20occlusion\x20=\x20pow(occlusion,\x202.0);','\x20\x20\x20o_FragColor\x20=\x20vec4(vec3(occlusion),\x201.0);','}']['join']('\x0a')},'SSAO_v3':{'vertex':['precision\x20highp\x20float;','precision\x20highp\x20int;','in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_PositionTexture;','uniform\x20sampler2D\x20u_NormalTexture;','uniform\x20sampler2D\x20u_NoiseTexture;','uniform\x20mat4\x20u_ProjectionInverseMatrix;','uniform\x20mat4\x20u_ProjectionMatrix;','uniform\x20mat4\x20u_ProjectionMatrixSrc;','uniform\x20vec2\x20uNoiseTexScale;','uniform\x20vec3\x20uSamples[128];','uniform\x20float\x20uSigma;','uniform\x20float\x20uBias;','#define\x20kernelSize\x20128','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','vec3\x20getPosition(vec2\x20fragCoord)\x20{','\x20\x20\x20vec4\x20pos4\x20=\x20texture(u_PositionTexture,\x20fragCoord);','\x09pos4\x20=\x20u_ProjectionInverseMatrix\x20*\x20vec4(pos4.xyz,\x201.0);','\x20\x20\x20vec3\x20pos\x20=\x20vec3(pos4.xyz)\x20/\x20pos4.w;','\x09return\x20pos;','}','vec3\x20reconstructNomral(vec2\x20fragCoord){','\x20\x20\x20vec2\x20tSize=vec2(textureSize(u_PositionTexture,0));','\x20\x20\x20float\x20c0\x20=\x20getPosition(fragCoord).z;','\x20\x20\x20vec3\x20right\x20=\x20getPosition(fragCoord+vec2(1.0/tSize.x,0.0));','\x20\x20\x20vec3\x20up\x20=\x20getPosition(fragCoord+vec2(0.0,1.0/tSize.y));','\x20\x20\x20vec3\x20left\x20=\x20getPosition(fragCoord+vec2(-1.0/tSize.x,0.0));','\x20\x20\x20vec3\x20down\x20=\x20getPosition(fragCoord+vec2(0.0,-1.0/tSize.y));','\x20\x20\x20float\x20l2\x20=\x20getPosition(fragCoord+vec2(-2.0/tSize.x,0.0)).z;','\x20\x20\x20float\x20l1\x20=\x20left.z;','\x20\x20\x20float\x20r2\x20=\x20getPosition(fragCoord+vec2(2.0/tSize.x,0.0)).z;','\x20\x20\x20float\x20r1\x20=\x20right.z;','\x20\x20\x20float\x20b2\x20=\x20getPosition(fragCoord+vec2(0.0,-2.0/tSize.y)).z;','\x20\x20\x20float\x20b1\x20=\x20down.z;','\x20\x20\x20float\x20t2\x20=\x20getPosition(fragCoord+vec2(0.0,2.0/tSize.y)).z;','\x20\x20\x20float\x20t1\x20=\x20up.z;','\x20\x20\x20float\x20dl\x20=\x20abs(l1*l2/(2.0*l2-l1)-c0);','\x20\x20\x20float\x20dr\x20=\x20abs(r1*r2/(2.0*r2-r1)-c0);','\x20\x20\x20float\x20db\x20=\x20abs(b1*b2/(2.0*b2-b1)-c0);','\x20\x20\x20float\x20dt\x20=\x20abs(t1*t2/(2.0*t2-t1)-c0);','\x20\x20\x20vec3\x20ce\x20=\x20getPosition(fragCoord);','\x20\x20\x20vec3\x20dpdx\x20=\x20(dl<dr)\x20?\x20\x20ce-left\x20:-ce+right\x20;','\x20\x20\x20vec3\x20dpdy\x20=\x20(db<dt)\x20?\x20\x20ce-down\x20:-ce+up\x20;','\x20\x20\x20return\x20normalize(cross(dpdx,dpdy));','}','void\x20main()\x20{','\x20\x20\x20vec4\x20pos4\x20=\x20texture(u_PositionTexture,\x20vUV);','\x20\x20\x20if(pos4.w\x20<=0.0){','\x20\x20\x20o_FragColor=\x20vec4(1.0,1.0,1.0,1.0);','\x20\x20\x20return;','}','\x20\x20\x20vec2\x20fragCoord\x20=\x20vUV;','\x20\x20\x20vec3\x20position\x20=\x20getPosition(fragCoord);','\x20\x20\x20vec3\x20normal2\x20=reconstructNomral(fragCoord);','\x20\x20\x20vec3\x20normal\x20=\x20normalize(texture(u_NormalTexture,\x20fragCoord).xyz);','\x20\x20\x20if(dot(normal,normal2)<0.0){','\x20\x20\x20\x20\x20\x20\x20normal=normal2;','}','\x20\x20\x20vec3\x20rand\x20=\x20texture(u_NoiseTexture,\x20fragCoord\x20*\x20uNoiseTexScale).xyz;','\x20\x20\x20rand\x20=\x20rand*\x202.0\x20-\x201.0;','\x20\x20\x20rand\x20=\x20normalize(rand);','\x20\x20\x20vec3\x20tangent\x20=\x20normalize(rand\x20-\x20normal\x20*\x20dot(rand,\x20normal));','\x20\x20\x20vec3\x20bitangent\x20=\x20cross(normal,\x20tangent);','\x20\x20\x20mat3\x20TBN\x20=\x20mat3(tangent,\x20bitangent,\x20normal);\x20','\x20\x20\x20\x20float\x20kernelRadius\x20=\x20uSigma;','\x20\x20\x20float\x20occlusion\x20=\x200.0;','\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x20kernelSize;\x20++i){','\x20\x20\x20\x20\x20\x20\x20vec3\x20samplePos\x20=\x20TBN\x20*\x20uSamples[i];','\x20\x20\x20\x20\x20\x20\x20samplePos\x20=\x20position\x20+\x20samplePos\x20*\x20kernelRadius;','\x20\x20\x20\x20\x20\x20\x20vec4\x20offset\x20=\x20vec4(samplePos,\x201.0);','\x20\x20\x20\x20\x20\x20\x20offset\x20\x20\x20\x20\x20\x20=\x20u_ProjectionMatrix\x20*\x20offset;','\x20\x20\x20\x20\x20\x20\x20offset.xyz\x20/=\x20offset.w;','\x20\x20\x20\x20\x20\x20\x20offset.xyz\x20=\x20offset.xyz\x20*\x200.5\x20+\x200.5;','\x20\x20\x20vec3\x20sampleDepth\x20=\x20getPosition(offset.xy);','\x20\x20\x20\x20\x20\x20\x20float\x20rangeCheck\x20=\x20smoothstep(0.0,\x201.0,\x20kernelRadius\x20/\x20abs(position.z\x20-\x20sampleDepth.z));','\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20(sampleDepth.z\x20>=\x20samplePos.z\x20+\x20uBias\x20?\x201.0\x20:\x200.0)\x20*\x20rangeCheck;','\x20\x20\x20\x20}','\x20\x20\x20occlusion=\x20occlusion\x20/\x20float(kernelSize);','\x20\x20\x20occlusion=smoothstep(0.0,1.050,occlusion);','\x20\x20\x20occlusion\x20=\x20pow(1.0\x20-\x20occlusion,1.5\x20);','\x20\x20\x20o_FragColor\x20=\x20vec4(occlusion,occlusion,occlusion,1.0);','}']['join']('\x0a')},'SSAO_v4':{'vertex':['precision\x20highp\x20float;','precision\x20highp\x20int;','in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_PositionTexture;','uniform\x20sampler2D\x20u_NormalTexture;','uniform\x20sampler2D\x20u_NoiseTexture;','uniform\x20mat4\x20u_ProjectionInverseMatrix;','uniform\x20mat4\x20u_ProjectionMatrix;','uniform\x20mat4\x20u_ProjectionMatrixSrc;','uniform\x20vec2\x20uNoiseTexScale;','uniform\x20vec3\x20uSamples[128];','uniform\x20float\x20uSigma;','uniform\x20float\x20uBias;','#define\x20kernelSize\x20128','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','vec3\x20getPosition(vec2\x20fragCoord)\x20{','\x20\x20\x20vec4\x20pos4\x20=\x20texture(u_PositionTexture,\x20fragCoord);','\x09pos4\x20=\x20u_ProjectionInverseMatrix\x20*\x20vec4(pos4.xyz,\x201.0);','\x20\x20\x20vec3\x20pos\x20=\x20vec3(pos4.xyz)\x20/\x20pos4.w;','\x09return\x20pos;','}','vec3\x20reconstructNomral(vec2\x20fragCoord){','\x20\x20\x20vec2\x20tSize=vec2(textureSize(u_PositionTexture,0));','\x20\x20\x20\x20vec4\x20c0\x20=\x20(texture(u_PositionTexture,fragCoord));','\x20\x20\x20\x20vec4\x20l2\x20=\x20(texture(u_PositionTexture,fragCoord+vec2(-2.0/tSize.x,0.0)));','\x20\x20\x20\x20vec4\x20l1\x20=\x20(texture(u_PositionTexture,fragCoord+vec2(-1.0/tSize.x,0.0)));','\x20\x20\x20\x20vec4\x20r2\x20=\x20(texture(u_PositionTexture,fragCoord+vec2(2.0/tSize.x,0.0)));','\x20\x20\x20\x20vec4\x20r1\x20=\x20(texture(u_PositionTexture,fragCoord+vec2(1.0/tSize.x,0.0)));','\x20\x20\x20\x20vec4\x20b2\x20=\x20(texture(u_PositionTexture,fragCoord+vec2(0.0,-2.0/tSize.y)));','\x20\x20\x20\x20vec4\x20b1\x20=\x20(texture(u_PositionTexture,fragCoord+vec2(0.0,-1.0/tSize.y)));','\x20\x20\x20\x20vec4\x20t2\x20=\x20(texture(u_PositionTexture,fragCoord+vec2(0.0,2.0/tSize.y)));','\x20\x20\x20\x20vec4\x20t1\x20=\x20(texture(u_PositionTexture,fragCoord+vec2(0.0,1.0/tSize.y)));','if(l1.w<=0.0||r1.w<=0.0||b1.w<=0.0||t1.w<=0.0){//||lt1.w<=0.0||lb1.w<=0.0||rt1.w<=0.0||rb1.w<=0.0){','\x20return\x20vec3(-999.0,-999.0,-999.0);','}','\x20\x20\x20\x20c0=u_ProjectionMatrixSrc*vec4(c0.xyz,1.0);','\x20\x20\x20\x20c0=c0/c0.w;','\x20\x20\x20\x20l2=u_ProjectionMatrixSrc*vec4(l2.xyz,1.0);','\x20\x20\x20\x20l2=l2/l2.w;','\x20\x20\x20\x20l1=u_ProjectionMatrixSrc*vec4(l1.xyz,1.0);','\x20\x20\x20\x20l1=l1/l1.w;','\x20\x20\x20\x20r2=u_ProjectionMatrixSrc*vec4(r2.xyz,1.0);','\x20\x20\x20\x20r2=r2/r2.w;','\x20\x20\x20\x20r1=u_ProjectionMatrixSrc*vec4(r1.xyz,1.0);','\x20\x20\x20\x20r1=r1/r1.w;','\x20\x20\x20\x20b2=u_ProjectionMatrixSrc*vec4(b2.xyz,1.0);','\x20\x20\x20\x20b2=b2/b2.w;','\x20\x20\x20\x20b1=u_ProjectionMatrixSrc*vec4(b1.xyz,1.0);','\x20\x20\x20\x20b1=b1/b1.w;','\x20\x20\x20\x20t2=u_ProjectionMatrixSrc*vec4(t2.xyz,1.0);','\x20\x20\x20\x20t2=t2/t2.w;','\x20\x20\x20\x20t1=u_ProjectionMatrixSrc*vec4(t1.xyz,1.0);','\x20\x20\x20\x20t1=t1/t1.w;','\x20\x20\x20float\x20dl\x20=\x20abs(l1.z*l2.z/(2.0*l2.z-l1.z)-c0.z);','\x20\x20\x20float\x20dr\x20=\x20abs(r1.z*r2.z/(2.0*r2.z-r1.z)-c0.z);','\x20\x20\x20float\x20db\x20=\x20abs(b1.z*b2.z/(2.0*b2.z-b1.z)-c0.z);','\x20\x20\x20float\x20dt\x20=\x20abs(t1.z*t2.z/(2.0*t2.z-t1.z)-c0.z);','\x20\x20\x20vec3\x20ce\x20=\x20(texture(u_PositionTexture,fragCoord)).xyz;','\x20\x20\x20vec3\x20right\x20=\x20(texture(u_PositionTexture,fragCoord+vec2(1.0/tSize.x,0.0))).xyz;','\x20\x20\x20vec3\x20up\x20=\x20(texture(u_PositionTexture,fragCoord+vec2(0.0,1.0/tSize.y))).xyz;','\x20\x20\x20vec3\x20left\x20=\x20(texture(u_PositionTexture,fragCoord+vec2(-1.0/tSize.x,0.0))).xyz;','\x20\x20\x20vec3\x20down\x20=\x20(texture(u_PositionTexture,fragCoord+vec2(0.0,-1.0/tSize.y))).xyz;','\x20\x20\x20vec3\x20dpdx\x20=\x20(dl<dr)\x20?\x20\x20ce-left\x20:-ce+right\x20;','\x20\x20\x20vec3\x20dpdy\x20=\x20(db<dt)\x20?\x20\x20ce-down\x20:-ce+up\x20;','\x20\x20\x20return\x20normalize(cross(dpdx,dpdy));','}','void\x20main()\x20{','\x20\x20\x20vec4\x20pos4\x20=\x20texture(u_PositionTexture,\x20vUV);','\x20\x20\x20if(pos4.w\x20<=0.0){','\x20\x20\x20o_FragColor=\x20vec4(1.0,1.0,1.0,1.0);','\x20\x20\x20return;','}','\x20\x20\x20vec2\x20fragCoord\x20=\x20vUV;','\x20\x20\x20vec3\x20position\x20=\x20texture(u_PositionTexture,\x20fragCoord).xyz;','\x20\x20\x20vec3\x20normal2\x20=reconstructNomral(fragCoord);','if(normal2.x==-999.0&&normal2.y==-999.0&&normal2.z==-999.0){','\x20\x20\x20o_FragColor=\x20vec4(1.0,1.0,1.0,0.0);','\x20\x20\x20return;','}','\x20\x20\x20vec3\x20normal\x20=\x20normalize(texture(u_NormalTexture,\x20fragCoord).xyz);','\x20\x20\x20if(dot(normal,normal2)<0.0){','\x20\x20\x20\x20\x20\x20\x20normal=normal2;','}','\x20\x20\x20vec3\x20rand\x20=\x20texture(u_NoiseTexture,\x20fragCoord\x20*\x20uNoiseTexScale).xyz;','\x20\x20\x20rand\x20=\x20rand*\x202.0\x20-\x201.0;','\x20\x20\x20rand\x20=\x20normalize(rand);','\x20\x20\x20vec3\x20tangent\x20=\x20normalize(rand\x20-\x20normal\x20*\x20dot(rand,\x20normal));','\x20\x20\x20vec3\x20bitangent\x20=\x20cross(normal,\x20tangent);','\x20\x20\x20mat3\x20TBN\x20=\x20mat3(tangent,\x20bitangent,\x20normal);\x20','\x20\x20\x20\x20float\x20kernelRadius\x20=\x20uSigma;','\x20\x20\x20float\x20occlusion\x20=\x200.0;','\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x20kernelSize;\x20++i){','\x20\x20\x20\x20\x20\x20\x20vec3\x20samplePos\x20=\x20TBN\x20*\x20uSamples[i];','\x20\x20\x20\x20\x20\x20\x20samplePos\x20=\x20position\x20+\x20samplePos\x20*\x20kernelRadius;','\x20\x20\x20\x20\x20\x20\x20vec4\x20offset\x20=\x20vec4(samplePos,\x201.0);','\x20\x20\x20\x20\x20\x20\x20offset\x20\x20\x20\x20\x20\x20=\x20u_ProjectionMatrixSrc\x20*\x20offset;','\x20\x20\x20\x20\x20\x20\x20offset.xyz\x20/=\x20offset.w;','\x20\x20\x20\x20\x20\x20\x20offset.xyz\x20=\x20offset.xyz\x20*\x200.5\x20+\x200.5;','\x20\x20\x20\x20\x20\x20\x20vec4\x20sampleDepth\x20=texture(u_PositionTexture,\x20offset.xy);','\x20\x20\x20\x20\x20\x20\x20if(sampleDepth.w\x20<=0.0){','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=0.1;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20continue;','\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20\x20\x20\x20\x20float\x20rangeCheck\x20=\x20smoothstep(0.0,\x201.0,\x20kernelRadius\x20/\x20abs(position.z\x20-\x20sampleDepth.z));','\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20(sampleDepth.z\x20>=\x20samplePos.z\x20+\x20uBias\x20?\x201.0\x20:\x200.0)\x20*\x20rangeCheck;','\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20occlusion=\x20occlusion\x20/\x20float(kernelSize);','\x20\x20\x20occlusion\x20=\x20pow(1.0\x20-\x20occlusion,1.5\x20);','\x20\x20\x20o_FragColor\x20=\x20vec4(occlusion,occlusion,occlusion,1.0);','}']['join']('\x0a')},'SSS':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_PositionTexture;','uniform\x20sampler2D\x20u_NormalTexture;','uniform\x20sampler2D\x20u_ColorTexture;','uniform\x20mat4\x20u_ProjectionInverseMatrix;','uniform\x20mat4\x20u_ProjectionMatrix;','uniform\x20mat4\x20u_ProjectionMatrixSrc;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_Mmatrix;','uniform\x20mat4\x20u_Vmatrix;','uniform\x20mat4\x20u_Pmatrix;','uniform\x20float\x20uFar;','uniform\x20float\x20uNear;','uniform\x20vec2\x20u_Resolution;','uniform\x20vec3\x20vDirectionalLightPos;','#define\x20SAMPLES\x202','#define\x20EPSILON\x200.5','#define\x20DEPTH_REVERSED\x20false','#define\x20SHADOW_INTENSITY\x201.0','#define\x20LIGHT_Z_OFFSET\x201.0','#define\x20SOFT_SHADOWS\x201.0','#define\x20DEPTH_SCALE\x201.0','vec3\x20getPosition(vec2\x20fragCoord)\x20{','\x20\x20\x20vec4\x20pos4\x20=\x20texture(u_PositionTexture,\x20fragCoord);','\x09pos4\x20=\x20u_ProjectionInverseMatrix\x20*\x20vec4(pos4.xyz,\x201.0);','\x20\x20\x20vec3\x20pos\x20=\x20vec3(pos4.xyz)\x20/\x20pos4.w;','\x09return\x20pos;','}','float\x20near\x20=1.;','float\x20far\x20=1000000.;','float\x20depth(vec2\x20coords)\x20{','vec4\x20linear\x20=\x20texture(u_PositionTexture,\x20coords);','if(DEPTH_REVERSED)\x20{','return\x201.\x20-linear.w\x20*\x20DEPTH_SCALE;','}\x20else\x20{','return\x20\x20linear.w\x20*\x20DEPTH_SCALE;','}','}','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','void\x20main()\x20{','\x20\x20\x20float\x20maxDistance\x20=\x201.0;','\x20\x20\x20float\x20resolution\x20\x20=\x200.3;','\x20\x20\x20int\x20\x20\x20steps\x20\x20\x20\x20\x20\x20\x20=\x201;','\x20\x20\x20float\x20thickness\x20\x20\x20=\x200.5;','\x20\x20\x20vec2\x20texSize\x20\x20=\x20vec2(textureSize(u_PositionTexture,\x200));','\x20\x20\x20vec2\x20fragCoord\x20=\x20vUV;','\x20\x20\x20vec4\x20positionFrom\x20=texture(u_PositionTexture,\x20fragCoord);','\x20\x20\x20if\x20(positionFrom.w<=0.0)','\x20\x20\x20return;','\x20\x20\x20vec4\x20uv\x20=\x20vec4(0.0);','\x20\x20\x20vec3\x20unitPositionFrom\x20=\x20normalize(positionFrom.xyz);','\x20\x20\x20vec3\x20normal=texture(u_NormalTexture,\x20fragCoord).xyz;','\x20\x20\x20vec3\x20pivot\x20=\x20normalize(reflect(unitPositionFrom,normal));','\x20\x20\x20vec4\x20positionTo\x20=\x20positionFrom;','\x20\x20\x20vec4\x20startView\x20=\x20vec4(positionFrom.xyz\x20+\x20(pivot\x20*\x20\x20\x20\x20\x20\x20\x20\x20\x200.0),\x201.0);','\x20\x20\x20vec4\x20endView\x20\x20\x20=\x20vec4(positionFrom.xyz\x20+\x20(pivot\x20*\x20maxDistance),\x201.0);','\x20\x20\x20vec4\x20startFrag\x20\x20\x20\x20\x20\x20=\x20startView;\x20\x20\x20\x20\x20\x20\x20startFrag\x20\x20\x20\x20\x20\x20=\x20u_ProjectionMatrixSrc\x20*\x20startFrag;\x20\x20\x20\x20\x20\x20\x20startFrag.xyz\x20/=\x20startFrag.w;\x20\x20\x20\x20\x20\x20\x20startFrag.xy\x20\x20\x20=\x20startFrag.xy\x20*\x200.5\x20+\x200.5;\x20\x20\x20\x20\x20\x20\x20startFrag.xy\x20\x20*=\x20texSize;','\x20\x20\x20vec4\x20endFrag\x20\x20\x20\x20\x20\x20=\x20endView;\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20endFrag\x20\x20\x20\x20\x20\x20=\x20u_ProjectionMatrixSrc\x20*\x20endFrag;\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20endFrag.xyz\x20/=\x20endFrag.w;\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20endFrag.xy\x20\x20\x20=\x20endFrag.xy\x20*\x200.5\x20+\x200.5;\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20endFrag.xy\x20\x20*=\x20texSize;','\x20\x20\x20vec2\x20frag\x20\x20=\x20startFrag.xy;\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20uv.xy\x20=\x20frag\x20/\x20texSize;','\x20\x20\x20float\x20deltaX\x20\x20\x20\x20=\x20endFrag.x\x20-\x20startFrag.x;','\x20\x20\x20float\x20deltaY\x20\x20\x20\x20=\x20endFrag.y\x20-\x20startFrag.y;','\x20\x20\x20float\x20useX\x20\x20\x20\x20\x20\x20=\x20abs(deltaX)\x20>=\x20abs(deltaY)\x20?\x201.0\x20:\x200.0;','\x20\x20\x20float\x20delta\x20\x20\x20\x20\x20=\x20mix(abs(deltaY),\x20abs(deltaX),\x20useX)\x20*\x20clamp(resolution,\x200.0,\x201.0);','\x20\x20\x20vec2\x20\x20increment\x20=\x20vec2(deltaX,\x20deltaY)\x20/\x20max(delta,\x200.001);','\x20\x20\x20float\x20search0\x20=\x200.0;\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20search1\x20=\x200.0;\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20int\x20hit0\x20=\x200;\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20int\x20hit1\x20=\x200;','\x20\x20\x20float\x20viewDistance\x20=\x20startView.y;\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20depth\x20\x20\x20\x20\x20\x20\x20\x20=\x20thickness;\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20int\x20i\x20=\x200;','\x20\x20\x20for\x20(i\x20=\x200;\x20i\x20<\x20int(delta);\x20++i)\x20{','\x20\x20\x20\x20\x20\x20\x20frag\x20\x20\x20\x20\x20\x20+=\x20increment;','\x20\x20\x20\x20\x20\x20\x20uv.xy\x20\x20\x20\x20\x20\x20=\x20frag\x20/\x20texSize;','\x20\x20\x20\x20\x20\x20\x20positionTo\x20=\x20texture(u_PositionTexture,\x20uv.xy);','\x20\x20\x20\x20\x20\x20\x20search1\x20=\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mix\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20(\x20(frag.y\x20-\x20startFrag.y)\x20/\x20deltaY\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20,\x20(frag.x\x20-\x20startFrag.x)\x20/\x20deltaX\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20,\x20useX\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20);','\x20\x20\x20\x20\x20\x20\x20search1\x20=\x20clamp(search1,\x200.0,\x201.0);','\x20\x20\x20\x20\x20\x20\x20viewDistance\x20=\x20(startView.y\x20*\x20endView.y)\x20/\x20mix(endView.y,\x20startView.y,\x20search1);','\x20\x20\x20\x20\x20\x20\x20depth\x20\x20\x20\x20\x20\x20\x20\x20=\x20viewDistance\x20-\x20positionTo.y;','\x20\x20\x20\x20\x20\x20\x20if\x20(depth\x20>\x200.0\x20&&\x20depth\x20<\x20thickness)\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20hit0\x20=\x201;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20break;','\x20\x20\x20\x20\x20\x20\x20}\x20else\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20search0\x20=\x20search1;','\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20}','\x20\x20\x20search1\x20=\x20search0\x20+\x20((search1\x20-\x20search0)\x20/\x202.0);','\x20\x20\x20steps\x20*=\x20hit0;','\x20\x20\x20for\x20(i\x20=\x200;\x20i\x20<\x20steps;\x20++i)\x20{','\x20\x20\x20\x20\x20\x20\x20frag\x20\x20\x20\x20\x20\x20\x20=\x20mix(startFrag.xy,\x20endFrag.xy,\x20search1);','\x20\x20\x20\x20\x20\x20\x20uv.xy\x20\x20\x20\x20\x20\x20=\x20frag\x20/\x20texSize;','\x20\x20\x20\x20\x20\x20\x20positionTo\x20=\x20texture(u_PositionTexture,\x20uv.xy);','\x20\x20\x20\x20\x20\x20\x20viewDistance\x20=\x20(startView.y\x20*\x20endView.y)\x20/\x20mix(endView.y,\x20startView.y,\x20search1);','\x20\x20\x20\x20\x20\x20\x20depth\x20\x20\x20\x20\x20\x20\x20\x20=\x20viewDistance\x20-\x20positionTo.y;','\x20\x20\x20\x20\x20\x20\x20if\x20(depth\x20>\x200.0\x20&&\x20depth\x20<\x20thickness)\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20hit1\x20=\x201;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20search1\x20=\x20search0\x20+\x20((search1\x20-\x20search0)\x20/\x202.0);','\x20\x20\x20\x20\x20\x20\x20}\x20else\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20temp\x20=\x20search1;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20search1\x20=\x20search1\x20+\x20((search1\x20-\x20search0)\x20/\x202.0);','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20search0\x20=\x20temp;','\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20}','float\x20visibility\x20=\x20float(hit1)\x20*\x20positionTo.w\x20*\x20(\x201.0-\x20max(\x20dot(-unitPositionFrom,\x20pivot),\x200.0))\x20*\x20(\x201.0\x20\x20-\x20clamp(\x20depth\x20/\x20thickness,\x200.0,\x201.0))','*\x20(\x201.0-\x20clamp\x20(\x20\x20\x20length(positionTo\x20-\x20positionFrom)/\x20maxDistance,\x200.0\x20,\x201.0))*\x20(uv.x\x20<\x200.0\x20||\x20uv.x\x20>\x201.0\x20?\x200.0\x20:\x201.0)*\x20(uv.y\x20<\x200.0||\x20uv.y\x20>\x201.0\x20?\x200.0:\x201.0);','\x20\x20\x20visibility\x20=\x20clamp(visibility,\x200.0,\x201.0);','\x20\x20\x20uv.ba\x20=\x20vec2(visibility);','\x20\x20\x20vec4\x20color\x20=texture(u_ColorTexture,\x20uv.ba\x20);','\x20\x20\x20o_FragColor\x20=\x20vec4(color.xyz,1.0);','\x20\x20\x20return;','}']['join']('\x0a')},'Texture2D_SSAO':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20sampler2D\x20u_subTexture;','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','void\x20main()\x20{','\x20\x20\x20\x20vec2\x20fragCoord\x20=\x20vUV;','\x20\x20\x20\x20vec4\x20fragColor\x20=\x20texture(u_Texture,\x20fragCoord);','\x20\x20\x20\x20vec4\x20sub\x20=\x20texture(u_subTexture,\x20fragCoord);','\x20\x20\x20vec3\x20color\x20=\x20fragColor.rgb*(0.7\x20+\x20sub.r\x20*\x200.3);','\x20\x20\x20\x20o_FragColor\x20=\x20vec4(color,\x20fragColor.a);','}']['join']('\x0a')},'Texture2D_SSAO_v2':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20sampler2D\x20u_subTexture;','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','void\x20main()\x20{','\x20\x20\x20\x20vec2\x20fragCoord\x20=\x20vUV;','\x20\x20\x20\x20vec4\x20fragColor\x20=\x20texture(u_Texture,\x20fragCoord);','\x20\x20\x20\x20vec4\x20sub\x20=\x20texture(u_subTexture,\x20fragCoord);','\x20\x20\x20vec2\x20texSize\x20\x20\x20=\x20vec2(textureSize(u_subTexture,\x200));','\x20\x20\x20int\x20radius=1;','\x20\x20\x20vec2\x20invSize\x20=\x201.0\x20/\x20texSize;','\x20\x20\x20float\x20invKR\x20=\x201.0\x20/\x20float(radius);','\x20\x20\x20vec4\x20mincolor\x20=\x20vec4(1.0);','\x20\x20\x20for(int\x20i\x20=\x20-radius;\x20i\x20<=\x20radius;\x20++i)\x20{','\x20\x20\x20\x20\x20\x20\x20for(int\x20j\x20=\x20-radius;\x20j\x20<=\x20radius;\x20++j)\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20rxy\x20=\x20vec2(ivec2(i,\x20j));','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(!(distance(rxy,vec2(0,0))<=float(radius))){continue;}','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20kuv\x20=\x20rxy\x20*\x20invKR;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20texOffset\x20=\x20vUV\x20+\x20rxy\x20*\x20invSize;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mincolor\x20=\x20min(texture(u_subTexture,\x20texOffset),\x20mincolor);','\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20}','\x20\x20\x20vec3\x20tmpcolor=fragColor.rgb\x20*(0.7\x20+\x20mincolor.rgb*0.3);','\x20\x20\x20\x20o_FragColor\x20=\x20vec4(tmpcolor.rgb,\x20fragColor.a);','}']['join']('\x0a')},'Texture2D_Sub':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20sampler2D\x20u_subTexture;','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','void\x20main()\x20{','\x20\x20\x20\x20vec2\x20fragCoord\x20=\x20vUV;','\x20\x20\x20\x20vec4\x20fragColor\x20=\x20texture(u_Texture,\x20fragCoord);','\x20\x20\x20\x20vec4\x20sub\x20=\x20texture(u_subTexture,\x20fragCoord);','\x20\x20\x20\x20o_FragColor\x20=\x20vec4(clamp(vec3(fragColor.rgb\x20-\x20sub.rgb),\x200.0,\x201.0),\x20fragColor.a);','}']['join']('\x0a')},'Preprocessing':{'vertex':['in\x20vec3\x20a_position;','in\x20vec3\x20a_normal;','in\x20vec4\x20a_color;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20mat4\x20u_IMVmatrix;','uniform\x20mat4\x20u_Pmatrix;','uniform\x20mat4\x20u_Vmatrix;','uniform\x20mat4\x20u_Mmatrix;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','out\x20vec3\x20vVertPos;','out\x20vec4\x20vVertPos4;','out\x20vec4\x20vViewPos4;','out\x20vec3\x20vNormalInterp;','out\x20vec4\x20vColor;','out\x20vec2\x20vUV;','out\x20vec4\x20nVertPos4;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vViewPos4\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x20\x20\x20nVertPos4\x20=\x20u_Vmatrix\x20*\x20u_Mmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vVertPos4\x20=\x20vertPos4;','\x09vNormalInterp\x20=\x20vec3(u_IMVmatrix\x20*\x20vec4(a_normal,\x200.0));','\x20\x20\x20vColor\x20=\x20vec4(float(a_color.x)\x20/\x20255.0,\x20float(a_color.y)\x20/\x20255.0,\x20float(a_color.z)\x20/\x20255.0,\x20float(a_color.w)\x20/\x20255.0);','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','\x20\x20\x20vUV.y\x20=\x201.0\x20-\x20vUV.y;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','in\x20vec3\x20vVertPos;','in\x20vec4\x20vVertPos4;','in\x20vec4\x20vViewPos4;','in\x20vec3\x20vNormalInterp;','in\x20vec4\x20vColor;','in\x20vec2\x20vUV;','in\x20vec4\x20nVertPos4;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','uniform\x20mat4\x20u_NormalPmatrix;','layout(location\x20=\x200)\x20out\x20vec4\x20viewColor;','layout(location\x20=\x201)\x20out\x20vec4\x20viewPosition;','layout(location\x20=\x202)\x20out\x20vec4\x20viewNormal;','layout(location\x20=\x203)\x20out\x20vec4\x20viewDepth;','uniform\x20float\x20ubPerspectiveView;','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20float\x20baseAlpha\x20=\x20diffuseColor.a;','\x20\x20\x20\x20\x20\x20\x20if(baseAlpha\x20<=\x200.1)\x20{','\x09\x09\x20\x20\x20\x20discard;','\x09\x09\x20\x20\x20\x20return;','\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20}','\x20\x20\x20viewPosition\x20=\x20vec4(vec3(vViewPos4.xyz\x20/\x20vViewPos4.w),\x201.0);','\x09vec3\x20normal\x20=\x20vNormalInterp;','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20tangentNormal\x20=\x20normalize((texture(u_texNormal,\x20vUV.xy).rgb\x20*\x202.0)\x20-\x201.0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q1\x20\x20=\x20dFdx(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q2\x20\x20=\x20dFdy(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st1\x20=\x20dFdx(vUV);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st2\x20=\x20dFdy(vUV);','\x20\x20\x20\x20\x20\x20\x20vec3\x20N\x20\x20\x20=\x20normal;','\x20\x20\x20\x20\x20\x20\x20vec3\x20T\x20\x20=\x20normalize(Q1*st2.t\x20-\x20Q2*st1.t);','\x20\x20\x20\x20\x20\x20\x20vec3\x20B\x20\x20=\x20-normalize(cross(N,\x20T));','\x20\x20\x20\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(T,\x20B,\x20N);','\x20\x20\x20\x20\x20\x20\x20normal\x20=\x20TBN\x20*\x20tangentNormal;','\x20\x20\x20}','\x09normal\x20=\x20normalize(normal);','\x20\x20\x20viewNormal\x20=\x20vec4(normal,\x201.0);','\x20\x20\x20viewColor\x20=\x20vColor;','{\x20\x20','\x20\x20\x20float\x20currentDepth\x20=\x20vViewPos4.z;','\x20\x20\x20const\x20float\x20DEPTH_MAX\x20=\x2016777215.0;','\x20\x20\x20float\x20d1\x20=\x20((currentDepth\x20*\x200.5)\x20+\x200.5)\x20*\x20step(ubPerspectiveView,\x200.5);','\x20\x20\x20float\x20d2\x20=\x20currentDepth\x20*\x20step(0.5,\x20ubPerspectiveView);','\x20\x20\x20float\x20d\x20=\x20floor((d1+d2)\x20*\x20DEPTH_MAX);','\x20\x20\x20float\x20depth1\x20=\x20shMod(d,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth2\x20=\x20shMod(d\x20/\x20256.0,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth3\x20=\x20shMod((d\x20/\x20256.0)\x20/\x20256.0,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth4\x20=\x20d1\x20+\x20d2;','\x20\x20\x20viewDepth\x20=\x20vec4(depth1,\x20depth2,\x20depth3,\x20depth4);','}\x20\x20','}']['join']('\x0a')},'Preprocessing_v2':{'vertex':['in\x20vec3\x20a_position;','in\x20vec3\x20a_normal;','in\x20vec4\x20a_color;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20mat4\x20u_IMVmatrix;','uniform\x20mat4\x20u_Pmatrix;','uniform\x20mat4\x20u_Vmatrix;','uniform\x20mat4\x20u_Mmatrix;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','out\x20vec3\x20vVertPos;','out\x20vec4\x20vVertPos4;','out\x20vec4\x20vViewPos4;','out\x20vec3\x20vNormalInterp;','out\x20vec4\x20vColor;','out\x20vec2\x20vUV;','out\x20vec4\x20nVertPos4;','#ifdef\x20LOG_DEPTH','uniform\x20float\x20uFar;','out\x20float\x20flogz;','#endif','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','#ifdef\x20LOG_DEPTH','\x20\x20\x20float\x20Fcoef\x20=\x202.0\x20/\x20log2(uFar+1.0);','\x20\x20\x20gl_Position.z\x20=\x20log2(max(1e-6,\x201.0\x20+\x20gl_Position.w))\x20*\x20Fcoef\x20-\x201.0;','\x20\x20\x20flogz\x20=\x201.0\x20+\x20gl_Position.w;','#endif','\x20\x20\x20vViewPos4\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x20\x20\x20nVertPos4\x20=\x20u_Vmatrix\x20*\x20u_Mmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vVertPos4\x20=\x20vertPos4;','\x09vNormalInterp\x20=\x20vec3(u_IMVmatrix\x20*\x20vec4(a_normal,\x200.0));','\x20\x20\x20vColor\x20=\x20vec4(float(a_color.x)\x20/\x20255.0,\x20float(a_color.y)\x20/\x20255.0,\x20float(a_color.z)\x20/\x20255.0,\x20float(a_color.w)\x20/\x20255.0);','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','\x20\x20\x20vUV.y\x20=\x201.0\x20-\x20vUV.y;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','in\x20vec3\x20vVertPos;','in\x20vec4\x20vVertPos4;','in\x20vec4\x20vViewPos4;','in\x20vec3\x20vNormalInterp;','in\x20vec4\x20vColor;','in\x20vec2\x20vUV;','in\x20vec4\x20nVertPos4;','#ifdef\x20LOG_DEPTH','in\x20float\x20flogz;','uniform\x20float\x20uFar;','#endif','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','uniform\x20mat4\x20u_NormalPmatrix;','layout(location\x20=\x200)\x20out\x20vec4\x20viewColor;','layout(location\x20=\x201)\x20out\x20vec4\x20viewPosition;','layout(location\x20=\x202)\x20out\x20vec4\x20viewNormal;','layout(location\x20=\x203)\x20out\x20vec4\x20viewDepth;','uniform\x20float\x20ubPerspectiveView;','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20float\x20baseAlpha\x20=\x20diffuseColor.a;','\x20\x20\x20\x20\x20\x20\x20if(baseAlpha\x20<=\x200.1)\x20{','\x09\x09\x20\x20\x20\x20discard;','\x09\x09\x20\x20\x20\x20return;','\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20}','\x20\x20\x20viewPosition\x20=\x20vec4(vVertPos4.xyz/vVertPos4.w,\x20gl_FragCoord.z/gl_FragCoord.w);','\x09vec3\x20normal\x20=\x20vNormalInterp;','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20tangentNormal\x20=\x20normalize((texture(u_texNormal,\x20vUV.xy).rgb\x20*\x202.0)\x20-\x201.0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q1\x20\x20=\x20dFdx(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q2\x20\x20=\x20dFdy(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st1\x20=\x20dFdx(vUV);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st2\x20=\x20dFdy(vUV);','\x20\x20\x20\x20\x20\x20\x20vec3\x20N\x20\x20\x20=\x20normal;','\x20\x20\x20\x20\x20\x20\x20vec3\x20T\x20\x20=\x20normalize(Q1*st2.t\x20-\x20Q2*st1.t);','\x20\x20\x20\x20\x20\x20\x20vec3\x20B\x20\x20=\x20-normalize(cross(N,\x20T));','\x20\x20\x20\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(T,\x20B,\x20N);','\x20\x20\x20\x20\x20\x20\x20normal\x20=\x20TBN\x20*\x20tangentNormal;','\x20\x20\x20}','\x09normal\x20=\x20normalize(normal);','\x20\x20\x20viewNormal\x20=\x20vec4(normal,\x201.0);','\x20\x20\x20viewColor\x20=\x20vColor;','{\x20\x20','\x20\x20\x20float\x20currentDepth\x20=\x20vViewPos4.z;','\x20\x20\x20const\x20float\x20DEPTH_MAX\x20=\x2016777215.0;','\x20\x20\x20float\x20d1\x20=\x20((currentDepth\x20*\x200.5)\x20+\x200.5)\x20*\x20step(ubPerspectiveView,\x200.5);','\x20\x20\x20float\x20d2\x20=\x20currentDepth\x20*\x20step(0.5,\x20ubPerspectiveView);','\x20\x20\x20float\x20d\x20=\x20floor((d1+d2)\x20*\x20DEPTH_MAX);','\x20\x20\x20float\x20depth1\x20=\x20shMod(d,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth2\x20=\x20shMod(d\x20/\x20256.0,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth3\x20=\x20shMod((d\x20/\x20256.0)\x20/\x20256.0,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth4\x20=\x20d1\x20+\x20d2;','\x20\x20\x20viewDepth\x20=\x20vec4(depth1,\x20depth2,\x20depth3,\x20depth4);','}\x20\x20','#ifdef\x20LOG_DEPTH','\x20float\x20hFceof\x20=\x201.0\x20/\x20log2(uFar+1.0);','gl_FragDepth\x20=\x20log2(flogz)\x20*\x20hFceof;','#endif','}']['join']('\x0a')},'PreprocessingShadow':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','out\x20vec3\x20vVertPos;','out\x20vec4\x20vViewPos4;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','\x20\x20\x20#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vViewPos4\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','\x20\x20\x20vUV.y\x20=\x201.0\x20-\x20vUV.y;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','in\x20vec4\x20vViewPos4;','in\x20vec3\x20vVertPos;','in\x20vec2\x20vUV;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','layout(location\x20=\x200)\x20out\x20vec4\x20viewPosition;','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20float\x20baseAlpha\x20=\x20diffuseColor.a;','\x20\x20\x20\x20\x20\x20\x20if(baseAlpha\x20<=\x200.1)\x20{','\x09\x09\x20\x20\x20\x20discard;','\x09\x09\x20\x20\x20\x20return;','\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20}','\x20\x20\x20viewPosition\x20=\x20vec4(vec3(vViewPos4.xyz\x20/\x20vViewPos4.w),\x20vViewPos4.w)\x20;','}']['join']('\x0a')},'Ocean':{'vertex':['in\x20vec3\x20a_position;','in\x20vec3\x20a_normal;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20float\x20fTimer;','uniform\x20float\x20fWaveLength;','uniform\x20vec3\x20uWaveDirection;','uniform\x20vec3\x20u_vFrequency;','uniform\x20vec3\x20u_vAmplitude;','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','out\x20vec2\x20vUV;','out\x20vec3\x20vNormalInterp;','out\x20vec3\x20vVertPos;','out\x20float\x20fWaveHeight;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','in\x20vec3\x20a_matrixIdx;','#endif','#ifdef\x20SHADING_SHADOW','uniform\x20mat4\x20u_MVPShadowMatrix;','out\x20vec4\x20vShadowCoord;','#endif','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','\x20\x20\x20vUV.y\x20=\x201.0\x20-\x20vUV.y;','\x20\x20\x20vec3\x20normal\x20=\x20a_normal;','\x20\x20\x20float\x20renderTimeInterval\x20=\x200.0008;','\x20\x20\x20float\x20p0\x20=\x200.0;','\x20\x20\x20float\x20p1\x20=\x200.0;','\x20\x20\x20float\x20p2\x20=\x200.0;','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec2\x20perlinOffset\x20=\x20uWaveDirection.xy\x20*\x20fTimer\x20*\x20renderTimeInterval;','\x09\x20\x20\x20\x20p0\x20=\x20texture2D(u_texNormal,\x20vUV\x20*\x20u_vFrequency.x\x20+\x20perlinOffset).z;','\x09\x20\x20\x20\x20p1\x20=\x20texture2D(u_texNormal,\x20vUV\x20*\x20u_vFrequency.y\x20+\x20perlinOffset).z;','\x09\x20\x20\x20\x20p2\x20=\x20texture2D(u_texNormal,\x20vUV\x20*\x20u_vFrequency.z\x20+\x20perlinOffset).z;','\x20\x20\x20}','\x20\x20\x20else\x20{','\x20\x20\x20\x20\x20\x20\x20p0\x20=\x20normal.z\x20*\x20u_vFrequency.x\x20+\x20uWaveDirection.x\x20*\x20fTimer\x20*\x20renderTimeInterval;','\x20\x20\x20\x20\x20\x20\x20p1\x20=\x20normal.z\x20*\x20u_vFrequency.y\x20+\x20uWaveDirection.y\x20*\x20fTimer\x20*\x20renderTimeInterval;','\x20\x20\x20\x20\x20\x20\x20p2\x20=\x20normal.z\x20*\x20u_vFrequency.z\x20+\x20uWaveDirection.z\x20*\x20fTimer\x20*\x20renderTimeInterval;','\x20\x20\x20}','\x09float\x20wave\x20=\x20dot(vec3(p0,\x20p1,\x20p2),\x20u_vAmplitude);','\x09float\x20wave_Height\x20=\x20wave\x20*\x20wave\x20*\x20(3.0\x20-\x202.0\x20*\x20wave);','\x09updatePosition\x20=\x20updatePosition\x20+\x20vec3(0,\x200,\x20wave_Height)\x20*\x20fWaveLength;','\x20\x20\x20fWaveHeight\x20=\x20wave_Height;','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','\x20\x20\x20#ifdef\x20SHADING_SHADOW','\x20\x20\x20vec4\x20shadowPosition\x20=\x20u_MVPShadowMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord\x20=\x20shadowPosition;','\x20\x20\x20#endif','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20float\x20ubPerspectiveView;','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20float\x20fShininess;','uniform\x20float\x20u_Roughness;','uniform\x20float\x20u_Metallic;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20int\x20useBump;','uniform\x20sampler2D\x20u_texBump;','uniform\x20int\x20useTextureRoughness;','uniform\x20sampler2D\x20u_texRoughness;','uniform\x20int\x20useTextureMetalness;','uniform\x20sampler2D\x20u_texMetalness;','uniform\x20int\x20useTextureAO;','uniform\x20sampler2D\x20u_texAO;','uniform\x20int\x20useTextureAlpha;','uniform\x20sampler2D\x20u_texAlpha;','uniform\x20int\x20useTextureSpecluar;','\x0a#ifdef\x20SHADING_ENVIRONMENT','uniform\x20samplerCube\x20u_texIrradianceMap;','uniform\x20samplerCube\x20u_texPrefilterMap;','uniform\x20sampler2D\x20\x20u_texbrdfLUT;','\x0a#endif','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','uniform\x20int\x20uLightNum;','uniform\x20vec3\x20vLightPos[4];','uniform\x20vec3\x20vLightColor[4];','in\x20vec2\x20vUV;','in\x20vec3\x20vNormalInterp;','in\x20vec3\x20vVertPos;','in\x20float\x20fWaveHeight;','uniform\x20float\x20fTimer;','uniform\x20vec3\x20uWaveDirection;','uniform\x20bool\x20ubUseGraySacle;','const\x20float\x20SH_PI\x20=\x203.14159265359;','const\x20float\x20SH_INV_PI\x20=\x200.31830988618;','out\x20vec4\x20o_FragColor;','vec3\x20lerp(vec3\x20a,\x20vec3\x20b,\x20float\x20w)','{','\x20\x20return\x20a\x20+\x20vec3(w*(b-a));','}','vec3\x20fresnelSchlickRoughness(float\x20cosTheta,\x20vec3\x20F0,\x20float\x20roughness)','{','\x09return\x20F0\x20+\x20(max(vec3(1.0\x20-\x20roughness),\x20F0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelSchlick(float\x20cosTheta,\x20vec3\x20F0)','{','\x09\x20return\x20F0\x20+\x20(vec3(1.0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelLerp\x20(float\x20cosA,\x20vec3\x20F0,\x20vec3\x20F90)','{','\x20\x20\x20\x20float\x20t\x20=\x20\x20pow(1.0\x20-\x20cosA,\x205.0);','\x20\x20\x20\x20return\x20lerp\x20(F0,\x20F90,\x20t);','}','float\x20GeometrySchlickGGX(float\x20NdotV,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20r\x20=\x20(roughness\x20+\x201.0);','\x20\x20\x20\x20float\x20k\x20=\x20(r*r)\x20/\x208.0;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20NdotV;','\x20\x20\x20\x20float\x20denom\x20=\x20NdotV\x20*\x20(1.0\x20-\x20k)\x20+\x20k;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20GeometrySmith(vec3\x20N,\x20vec3\x20V,\x20vec3\x20L,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20NdotV\x20=\x20max(dot(N,\x20V),\x200.0);','\x20\x20\x20\x20float\x20NdotL\x20=\x20max(dot(N,\x20L),\x200.0);','\x20\x20\x20\x20float\x20ggx2\x20=\x20GeometrySchlickGGX(NdotV,\x20roughness);','\x20\x20\x20\x20float\x20ggx1\x20=\x20GeometrySchlickGGX(NdotL,\x20roughness);','\x20\x20\x20\x20return\x20ggx1\x20*\x20ggx2;','}','float\x20DistributionGGX(vec3\x20N,\x20vec3\x20H,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20a\x20=\x20roughness*roughness;','\x20\x20\x20\x20float\x20a2\x20=\x20a*a;','\x20\x20\x20\x20float\x20NdotH\x20=\x20max(dot(N,\x20H),\x200.0);','\x20\x20\x20\x20float\x20NdotH2\x20=\x20NdotH*NdotH;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20a2;','\x20\x20\x20\x20float\x20denom\x20=\x20(NdotH2\x20*\x20(a2\x20-\x201.0)\x20+\x201.0);','\x20\x20\x20\x20denom\x20=\x20SH_PI\x20*\x20denom\x20*\x20denom;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20DisneyDiffuse(float\x20NdV,\x20float\x20NdL,\x20float\x20LdH,\x20float\x20roughness)','{','\x09float\x20fd90\x20=\x200.5\x20+\x202.0\x20*\x20LdH\x20*\x20LdH\x20*\x20roughness;','\x09float\x20lightScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdL,\x205.0));','\x09float\x20viewScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdV,\x205.0));','\x09return\x20lightScatter\x20*\x20viewScatter;','}','float\x20GGXTerm(float\x20NdH,\x20float\x20roughness)','{','\x09float\x20a2\x20=\x20roughness\x20*\x20roughness\x20*\x20roughness\x20*\x20roughness;','\x09float\x20d\x20=\x20(NdH\x20*\x20a2\x20-\x20NdH)\x20*\x20NdH\x20+\x201.0;','\x09return\x20SH_INV_PI\x20*\x20a2\x20/\x20(d\x20*\x20d\x20+\x200.00000001);','}','float\x20SmithJointGGXVisibilityTerm(float\x20NdotL,\x20float\x20NdotV,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness*roughness;','\x09float\x20lambdaV\x20=\x20NdotL\x20*\x20(NdotV\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09float\x20lambdaL\x20=\x20NdotV\x20*\x20(NdotL\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09return\x200.5\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x200.0001);','}','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09float\x20shini\x20=\x20fShininess;\x20','\x09float\x20rough\x20=\x20u_Roughness;','\x09float\x20metal\x20=\x20u_Metallic;','\x20\x20\x20if(useTextureRoughness\x20==\x201)\x20{','\x09\x20\x20\x20rough\x20=\x20texture(u_texRoughness,\x20vUV.xy).r;','\x20\x20\x20}','\x20\x20\x20if(useTextureMetalness\x20==\x201)\x20{','\x09\x20\x20\x20\x20metal\x20=\x20texture(u_texMetalness,\x20vUV.xy).g;','\x20\x20\x20}','\x09float\x20shininess\x20=\x20mix(0.0,\x201.0,\x20shini);','\x09float\x20roughness\x20=\x20mix(0.0,\x201.0,\x20rough);','\x09float\x20metallic\x20=\x20mix(0.0,\x201.0,\x20metal);','\x09float\x20smoothness\x20=\x201.0\x20-\x20roughness;','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x0a#ifdef\x20SHADING_FLAT','vec3\x20vVertPosU\x20=\x20dFdx(vVertPos);','vec3\x20vVertPosV\x20=\x20dFdy(vVertPos);','normal\x20=\x20normalize(cross(vVertPosU,vVertPosV));','\x0a#endif','\x09vec3\x20baseColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20baseColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x0a#ifdef\x20SHADING_HDR','\x09baseColor\x20=\x20pow(baseColor,\x20vec3(2.2));','\x0a#endif','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20tangentNormal\x20=\x20normalize((texture(u_texNormal,\x20vUV.xy).rgb\x20*\x202.0)\x20-\x201.0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q1\x20\x20=\x20dFdx(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q2\x20\x20=\x20dFdy(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st1\x20=\x20dFdx(vUV);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st2\x20=\x20dFdy(vUV);','\x20\x20\x20\x20\x20\x20\x20vec3\x20N\x20\x20\x20=\x20normal;','\x20\x20\x20\x20\x20\x20\x20vec3\x20T\x20\x20=\x20normalize(Q1*st2.t\x20-\x20Q2*st1.t);','\x20\x20\x20\x20\x20\x20\x20vec3\x20B\x20\x20=\x20-normalize(cross(N,\x20T));','\x20\x20\x20\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(T,\x20B,\x20N);','\x20\x20\x20\x20\x20\x20\x20normal\x20=\x20normalize(TBN\x20*\x20tangentNormal);','\x20\x20\x20}','\x20\x20\x20vec3\x20V\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09vec3\x20N\x20=\x20normalize(normal);','\x20\x20\x20vec3\x20R\x20=\x20reflect(-V,\x20N);\x20','\x09vec3\x20F0\x20=\x20vec3(shininess);','\x09F0\x20=\x20F0\x20*\x200.08;','\x09F0\x20=\x20F0\x20*\x20(1.0\x20-\x20metallic)\x20+\x20baseColor.rgb\x20*\x20metallic;','\x09float\x20NdV\x20=\x20max(dot(N,\x20V),\x200.0);','\x09vec3\x20diffuse\x20=\x20baseColor.rgb;','\x09vec3\x20Lo\x20=\x20vec3(0.0);','\x20\x20\x20for(int\x20i\x20=\x200\x20;\x20i\x20<\x20uLightNum\x20;\x20++i)','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20length(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20attenuation\x20=\x201.0\x20/\x20(distance\x20*\x20distance);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20radiance\x20=\x20vLightColor[i]\x20*\x20attenuation\x20*\x20100.0\x20*\x20100.0;','\x20\x20\x20\x20\x20\x20\x20\x20float\x20NDF\x20=\x20DistributionGGX(N,\x20H,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20G\x20\x20\x20=\x20GeometrySmith(N,\x20V,\x20L,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20F\x20\x20\x20\x20=\x20fresnelSchlick(HdV,\x20F0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20numerator\x20\x20\x20\x20=\x20NDF\x20*\x20G\x20*\x20F;','\x20\x20\x20\x20\x20\x20\x20float\x20denominator\x20=\x204.0\x20*\x20NdV\x20*\x20NdL\x20+\x200.0001;','\x20\x20\x20\x20\x20\x20\x20vec3\x20specular\x20=\x20numerator\x20/\x20denominator;','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20kS\x20=\x20F;','\x20\x20\x20\x20\x20\x20\x20vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20(kD\x20*\x20diffuse\x20/\x20SH_PI\x20+\x20specular)\x20*\x20radiance\x20*\x20NdL;','\x09}','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09\x09vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x09\x09float\x20specColorAlpha\x20=\x200.5;','\x09\x09float\x20oneMinusReflectivity\x20=\x20specColorAlpha\x20-\x20specColorAlpha\x20*\x20metallic;','\x09\x09vec3\x20diffColor\x20=\x20diffuse\x20*\x20oneMinusReflectivity;','\x09\x09float\x20diffuseTerm\x20=\x20DisneyDiffuse(NdV,\x20NdL,\x20LdH,\x20roughness)\x20*\x20NdL;','\x09\x09vec3\x20F\x20=\x20fresnelSchlick(HdV,\x20F0);','\x09\x09vec3\x20kS\x20=\x20F;','\x09\x09vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x09\x09float\x20V\x20=\x20SmithJointGGXVisibilityTerm(NdL,\x20NdV,\x20roughness);','\x09\x09float\x20D\x20=\x20GGXTerm(NdH,\x20roughness);','\x09\x09float\x20specularTerm\x20=\x20V\x20*\x20D\x20*\x20SH_PI;','\x09\x09specularTerm\x20=\x20max(0.0,\x20specularTerm\x20*\x20NdL);','\x09\x09float\x20surfaceReduction\x20=\x201.0\x20/\x20(roughness*roughness*roughness*roughness\x20+\x201.0);','\x09\x09if(F0.x\x20+\x20F0.y\x20+\x20F0.z\x20<=\x200.0)','\x09\x09\x09specularTerm\x20*=\x200.0;','\x09\x09float\x20grazingTerm\x20=\x20smoothness\x20*\x20smoothness\x20+\x20(1.0\x20-\x20oneMinusReflectivity);','\x09\x09grazingTerm\x20=\x20max(min(grazingTerm,\x201.0),\x200.0);','\x09\x09Lo\x20+=\x20kD\x20*\x20diffColor\x20*\x20vDirectionalLightColor\x20*\x20diffuseTerm;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20vDirectionalLightColor\x20*\x20specularTerm\x20*\x20fresnelSchlick(LdH,\x20F0);','\x09}','\x09float\x20AO\x20=\x201.0;','\x20\x20\x20if(useTextureAO\x20==\x201){','\x09\x20\x20\x20\x20AO\x20=\x20texture(u_texAO,\x20vUV.xy).r;','\x20\x20\x20}','\x09vec3\x20ambient\x20=\x20vAmbientColor;','\x20\x20\x20vec3\x20specular\x20=\x20vec3(0.0);','\x09vec3\x20kSA\x20=\x20fresnelSchlickRoughness(NdV,\x20F0,\x20roughness);','\x09vec3\x20kDA\x20=\x20vec3(1.0)\x20-\x20kSA;','\x09kDA\x20*=\x201.0\x20-\x20metallic;','#ifdef\x20SHADING_ENVIRONMENT','\x20\x20\x20vec3\x20irradiance\x20=\x20texture(u_texIrradianceMap,\x20N).rgb;','\x20\x20\x20diffuse\x20=\x20irradiance\x20*\x20diffuse;','\x20\x20\x20const\x20float\x20MAX_REFLECTION_LOD\x20=\x204.0;','\x20\x20\x20vec3\x20prefilteredColor\x20=\x20textureLod(u_texPrefilterMap,\x20R,\x20\x20roughness\x20*\x20MAX_REFLECTION_LOD).rgb;','\x20\x20\x20vec2\x20brdf\x20=\x20texture(u_texbrdfLUT,\x20vec2(NdV,\x20roughness)).xy;','\x20\x20\x20specular\x20=\x20prefilteredColor\x20*\x20(kSA\x20*\x20brdf.x\x20+\x20brdf.y);','#endif','\x09ambient\x20=\x20(kDA\x20*\x20ambient\x20*\x20diffuse\x20+\x20specular)\x20*\x20AO;','\x09vec3\x20fragColor\x20=\x20ambient','\x09+\x20Lo;','#ifdef\x20SHADING_SHADOW','\x20\x20\x20float\x20fShadow\x20=\x20ShadowVSM();','\x20\x20\x20fragColor\x20=\x20fragColor\x20*\x20fShadow;','#endif','\x0a#ifdef\x20SHADING_HDR','\x0a#ifdef\x20SHADING_FURSYS_HDR','\x20\x20\x20fragColor\x20=\x20fragColor\x20/\x204.0;','\x0a#else','\x20\x20\x20fragColor\x20=\x20fragColor\x20/\x20(fragColor\x20+\x20vec3(1.0));','\x0a#endif','\x20\x20\x20fragColor\x20=\x20pow(fragColor,\x20vec3(1.0\x20/\x202.2));\x20','\x0a#endif','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(fragColor.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20fragColor\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x20\x20\x20if(useTextureAlpha\x20==\x201)\x20{','\x20\x20\x20\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20texture(u_texAlpha,\x20vUV.xy).r;','\x20\x20\x20}','\x20\x20\x20vec4\x20glslColor\x20=\x20vec4(fragColor,\x20baseAlpha);','\x0a#ifdef\x20SHADING_FOG','\x20\x20\x20float\x20fogAmount\x20=\x201.0;','\x20\x20\x20float\x20fogDepth\x20=\x20length(u_fogCenter\x20-\x20vVertPos);','\x20\x20\x20fogAmount\x20=\x20smoothstep(u_fogNear,\x20u_fogFar,\x20fogDepth);','\x20\x20\x20glslColor\x20=\x20glslColor\x20*\x20(1.0\x20-\x20fogAmount)\x20+\x20u_fogColor\x20*\x20fogAmount;','\x0a#endif','\x09o_FragColor\x20=\x20glslColor;','\x20\x20\x20if(o_FragColor.a\x20<\x200.003)','\x20\x20\x20\x20discard;','}']['join']('\x0a')},'PerlinNoise':{'vertex':['attribute\x20vec3\x20a_position;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec2\x20u_Resolution;','uniform\x20float\x20fTimer;','vec3\x20mod289(vec3\x20x)\x20{','\x20\x20\x20\x20return\x20x\x20-\x20floor(x\x20*\x20(1.0\x20/\x20289.0))\x20*\x20289.0;','}','vec4\x20mod289(vec4\x20x)\x20{','\x20\x20\x20\x20return\x20x\x20-\x20floor(x\x20*\x20(1.0\x20/\x20289.0))\x20*\x20289.0;','}','vec4\x20permute(vec4\x20x)\x20{','\x20\x20\x20\x20return\x20mod289(((x*34.0)+10.0)*x);','}','vec4\x20taylorInvSqrt(vec4\x20r)','{','\x20\x20\x20\x20return\x201.79284291400159\x20-\x200.85373472095314\x20*\x20r;','}','float\x20snoise(vec3\x20v)','{\x20','\x20\x20\x20\x20const\x20vec2\x20C\x20=\x20vec2(1.0/6.0,\x201.0/3.0);','\x20\x20\x20\x20const\x20vec4\x20D\x20=\x20vec4(0.0,\x200.5,\x201.0,\x202.0);','\x20\x20\x20\x20vec3\x20i\x20\x20=\x20floor(v\x20+\x20dot(v,\x20C.yyy)\x20);','\x20\x20\x20\x20vec3\x20x0\x20=\x20v\x20-\x20i\x20+\x20dot(i,\x20C.xxx);','\x20\x20\x20\x20vec3\x20g\x20=\x20step(x0.yzx,\x20x0.xyz);','\x20\x20\x20\x20vec3\x20l\x20=\x201.0\x20-\x20g;','\x20\x20\x20\x20vec3\x20i1\x20=\x20min(\x20g.xyz,\x20l.zxy\x20);','\x20\x20\x20\x20vec3\x20i2\x20=\x20max(\x20g.xyz,\x20l.zxy\x20);','\x20\x20\x20\x20//\x20\x20\x20x0\x20=\x20x0\x20-\x200.0\x20+\x200.0\x20*\x20C.xxx;','\x20\x20\x20\x20//\x20\x20\x20x1\x20=\x20x0\x20-\x20i1\x20\x20+\x201.0\x20*\x20C.xxx;','\x20\x20\x20\x20//\x20\x20\x20x2\x20=\x20x0\x20-\x20i2\x20\x20+\x202.0\x20*\x20C.xxx;','\x20\x20\x20\x20//\x20\x20\x20x3\x20=\x20x0\x20-\x201.0\x20+\x203.0\x20*\x20C.xxx;','\x20\x20\x20\x20vec3\x20x1\x20=\x20x0\x20-\x20i1\x20+\x20C.xxx;','\x20\x20\x20\x20vec3\x20x2\x20=\x20x0\x20-\x20i2\x20+\x20C.yyy;','\x20\x20\x20\x20vec3\x20x3\x20=\x20x0\x20-\x20D.yyy;','\x20\x20\x20\x20i\x20=\x20mod289(i);\x20','\x20\x20\x20\x20vec4\x20p\x20=\x20permute(\x20permute(\x20permute(\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20i.z\x20+\x20vec4(0.0,\x20i1.z,\x20i2.z,\x201.0\x20))','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20+\x20i.y\x20+\x20vec4(0.0,\x20i1.y,\x20i2.y,\x201.0\x20))\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20+\x20i.x\x20+\x20vec4(0.0,\x20i1.x,\x20i2.x,\x201.0\x20));','\x20\x20\x20\x20float\x20n_\x20=\x200.142857142857;\x20//\x201.0/7.0','\x20\x20\x20\x20vec3\x20ns\x20=\x20n_\x20*\x20D.wyz\x20-\x20D.xzx;','\x20\x20\x20\x20vec4\x20j\x20=\x20p\x20-\x2049.0\x20*\x20floor(p\x20*\x20ns.z\x20*\x20ns.z);','\x20\x20\x20\x20vec4\x20x_\x20=\x20floor(j\x20*\x20ns.z);','\x20\x20\x20\x20vec4\x20y_\x20=\x20floor(j\x20-\x207.0\x20*\x20x_\x20);','\x20\x20\x20\x20vec4\x20x\x20=\x20x_\x20*\x20ns.x\x20+\x20ns.yyyy;','\x20\x20\x20\x20vec4\x20y\x20=\x20y_\x20*\x20ns.x\x20+\x20ns.yyyy;','\x20\x20\x20\x20vec4\x20h\x20=\x201.0\x20-\x20abs(x)\x20-\x20abs(y);','\x20\x20\x20\x20vec4\x20b0\x20=\x20vec4(\x20x.xy,\x20y.xy\x20);','\x20\x20\x20\x20vec4\x20b1\x20=\x20vec4(\x20x.zw,\x20y.zw\x20);','\x20\x20\x20\x20//vec4\x20s0\x20=\x20vec4(lessThan(b0,0.0))*2.0\x20-\x201.0;','\x20\x20\x20\x20//vec4\x20s1\x20=\x20vec4(lessThan(b1,0.0))*2.0\x20-\x201.0;','\x20\x20\x20\x20vec4\x20s0\x20=\x20floor(b0)*2.0\x20+\x201.0;','\x20\x20\x20\x20vec4\x20s1\x20=\x20floor(b1)*2.0\x20+\x201.0;','\x20\x20\x20\x20vec4\x20sh\x20=\x20-step(h,\x20vec4(0.0));','\x20\x20\x20\x20vec4\x20a0\x20=\x20b0.xzyw\x20+\x20s0.xzyw*sh.xxyy;','\x20\x20\x20\x20vec4\x20a1\x20=\x20b1.xzyw\x20+\x20s1.xzyw*sh.zzww;','\x20\x20\x20\x20vec3\x20p0\x20=\x20vec3(a0.xy,h.x);','\x20\x20\x20\x20vec3\x20p1\x20=\x20vec3(a0.zw,h.y);','\x20\x20\x20\x20vec3\x20p2\x20=\x20vec3(a1.xy,h.z);','\x20\x20\x20\x20vec3\x20p3\x20=\x20vec3(a1.zw,h.w);','\x20\x20\x20\x20vec4\x20norm\x20=\x20taylorInvSqrt(vec4(dot(p0,p0),\x20dot(p1,p1),\x20dot(p2,\x20p2),\x20dot(p3,p3)));','\x20\x20\x20\x20p0\x20*=\x20norm.x;','\x20\x20\x20\x20p1\x20*=\x20norm.y;','\x20\x20\x20\x20p2\x20*=\x20norm.z;','\x20\x20\x20\x20p3\x20*=\x20norm.w;','\x20\x20\x20\x20vec4\x20m\x20=\x20max(0.5\x20-\x20vec4(dot(x0,x0),\x20dot(x1,x1),\x20dot(x2,x2),\x20dot(x3,x3)),\x200.0);','\x20\x20\x20\x20m\x20=\x20m\x20*\x20m;','\x20\x20\x20\x20return\x20105.0\x20*\x20dot(\x20m*m,\x20vec4(\x20dot(p0,x0),\x20dot(p1,x1),\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20dot(p2,x2),\x20dot(p3,x3)\x20)\x20);','}','float\x20color(vec2\x20xy)\x20{\x20return\x200.7\x20*\x20snoise(vec3(xy,\x200.3\x20*\x20fTimer));\x20}','void\x20mainImage(out\x20vec4\x20fragColor,\x20in\x20vec2\x20fragCoord)\x20{','\x20\x20\x20\x20vec2\x20p\x20=\x20(fragCoord.xy/u_Resolution.y)\x20*\x202.0\x20-\x201.0;','\x20\x20\x20\x20vec3\x20xyz\x20=\x20vec3(p,\x200);','\x20\x20\x20\x20vec2\x20step\x20=\x20vec2(1.3,\x201.7);','\x20\x20\x20\x20float\x20n\x20=\x20color(xyz.xy);','\x20\x20\x20\x20n\x20+=\x200.5\x20*\x20color(xyz.xy\x20*\x202.0\x20-\x20step);','\x20\x20\x20\x20n\x20+=\x200.25\x20*\x20color(xyz.xy\x20*\x204.0\x20-\x202.0\x20*\x20step);','\x20\x20\x20\x20n\x20+=\x200.125\x20*\x20color(xyz.xy\x20*\x208.0\x20-\x203.0\x20*\x20step);','\x20\x20\x20\x20n\x20+=\x200.0625\x20*\x20color(xyz.xy\x20*\x2016.0\x20-\x204.0\x20*\x20step);','\x20\x20\x20\x20n\x20+=\x200.03125\x20*\x20color(xyz.xy\x20*\x2032.0\x20-\x205.0\x20*\x20step);','\x20\x20\x20\x20fragColor.xyz\x20=\x20vec3(0.5\x20+\x200.5\x20*\x20vec3(n,\x20n,\x20n));','}','void\x20main()\x20{','\x20\x20\x20gl_FragColor\x20=\x20vec4(1.0);','\x20\x20\x20mainImage(gl_FragColor,\x20gl_FragCoord.xy);','}']['join']('\x0a')},'Volumetric_v1':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec3\x20vVertPos;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vVertPos\x20=\x20updatePosition;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_PerlinTexture;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20vec4\x20u_color;','uniform\x20vec4\x20u_useColor;','uniform\x20vec3\x20u_Direction;','uniform\x20float\x20fTimer;','uniform\x20float\x20u_frequency;','uniform\x20float\x20u_amplitude;','uniform\x20float\x20u_persistence;','uniform\x20int\x20u_octaves;','in\x20vec3\x20vVertPos;','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','float\x20fade(float\x20t)\x20','{','\x20\x20\x20\x20return\x20t*t*t*(t*(6.0*t-15.0)+10.0);\x20','}','float\x20hash13(vec3\x20pos)','{','\x20\x20\x20\x20vec2\x20uv\x20=\x20pos.xy\x20+\x20pos.z;','\x20\x20\x20\x20return\x20texture(u_PerlinTexture,\x20(uv+\x200.5)/256.0).x;','}','float\x20grad3D(float\x20hash,\x20vec3\x20pos)\x20','{','\x20\x20\x20\x20int\x20h\x20=\x20int(1e4*hash)\x20&\x2015;','\x20\x20\x20\x20float\x20u\x20=\x20h<8\x20?\x20pos.x\x20:\x20pos.y,','\x20\x20\x20\x20\x20\x20\x20\x20v\x20=\x20h<4\x20?\x20pos.y\x20:\x20h==12||h==14\x20?\x20pos.x\x20:\x20pos.z;','\x20\x20\x20\x20return\x20((h&1)\x20==\x200\x20?\x20u\x20:\x20-u)\x20+\x20((h&2)\x20==\x200\x20?\x20v\x20:\x20-v);','}','float\x20perlinNoise3D(vec3\x20pos)','{','\x20\x20\x20\x20vec3\x20pi\x20=\x20floor(pos);\x20','\x20\x20\x20\x20vec3\x20pf\x20=\x20pos\x20-\x20pi;','\x20\x20\x20\x20float\x20u\x20=\x20fade(pf.x);','\x20\x20\x20\x20float\x20v\x20=\x20fade(pf.y);','\x20\x20\x20\x20float\x20w\x20=\x20fade(pf.z);','\x20\x20\x20\x20return\x20mix(\x20mix(\x20mix(\x20grad3D(hash13(pi\x20+\x20vec3(0,\x200,\x200)),\x20pf\x20-\x20vec3(0,\x200,\x200)),','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20grad3D(hash13(pi\x20+\x20vec3(1,\x200,\x200)),\x20pf\x20-\x20vec3(1,\x200,\x200)),\x20u\x20),','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mix(\x20grad3D(hash13(pi\x20+\x20vec3(0,\x201,\x200)),\x20pf\x20-\x20vec3(0,\x201,\x200)),\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20grad3D(hash13(pi\x20+\x20vec3(1,\x201,\x200)),\x20pf\x20-\x20vec3(1,\x201,\x200)),\x20u\x20),\x20v\x20),','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mix(\x20mix(\x20grad3D(hash13(pi\x20+\x20vec3(0,\x200,\x201)),\x20pf\x20-\x20vec3(0,\x200,\x201)),\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20grad3D(hash13(pi\x20+\x20vec3(1,\x200,\x201)),\x20pf\x20-\x20vec3(1,\x200,\x201)),\x20u\x20),','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mix(\x20grad3D(hash13(pi\x20+\x20vec3(0,\x201,\x201)),\x20pf\x20-\x20vec3(0,\x201,\x201)),\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20grad3D(hash13(pi\x20+\x20vec3(1,\x201,\x201)),\x20pf\x20-\x20vec3(1,\x201,\x201)),\x20u\x20),\x20v\x20),\x20w\x20);','}','float\x20Tex2DNoise3D(vec3\x20pos,\x20float\x20frequency,\x20float\x20amplitude,\x20float\x20persistence,\x20int\x20octaves,\x20vec3\x20seed)\x20','{','\x20\x20\x20\x20float\x20noiseSum\x20=\x200.0;','\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x20octaves;\x20i++)\x20','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20xUV\x20=\x20pos.x\x20*\x20frequency\x20+\x20seed.x;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20yUV\x20=\x20pos.y\x20*\x20frequency\x20+\x20seed.y;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20zUV\x20=\x20pos.z\x20*\x20frequency\x20+\x20seed.z;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20noiseSum\x20+=\x20perlinNoise3D(vec3(xUV,\x20yUV,\x20zUV))\x20*\x20amplitude;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20amplitude\x20*=\x20persistence;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20frequency\x20*=\x202.0;','\x20\x20\x20\x20}','\x20\x20\x20\x20return\x20noiseSum\x20/\x20float(octaves);','}','void\x20main()\x20{','\x20\x20\x20vec3\x20baseColor\x20=\x20vec3(u_color.rgb);','\x20\x20\x20float\x20baseAlpha\x20=\x20u_color.a;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x20\x20\x20vec3\x20direction\x20=\x20u_Direction\x20*\x20fTimer;','\x20\x20\x20float\x20noise\x20=\x20Tex2DNoise3D(vVertPos,\x20u_frequency,\x20u_amplitude,\x20u_persistence,\x20u_octaves,\x20direction);','\x20\x20\x20if(u_useColor.r\x20>\x200.5)\x20{','\x20\x20\x20\x20\x20\x20\x20baseColor.r\x20=\x20baseColor.r\x20-\x20baseColor.r\x20*\x20noise;','\x20\x20\x20}','\x20\x20\x20if(u_useColor.g\x20>\x200.5)\x20{','\x20\x20\x20\x20\x20\x20\x20baseColor.g\x20=\x20baseColor.g\x20-\x20baseColor.g\x20*\x20noise;','\x20\x20\x20}','\x20\x20\x20if(u_useColor.b\x20>\x200.5)\x20{','\x20\x20\x20\x20\x20\x20\x20baseColor.b\x20=\x20baseColor.b\x20-\x20baseColor.b\x20*\x20noise;','\x20\x20\x20}','\x20\x20\x20if(u_useColor.a\x20>\x200.5)\x20{','\x20\x20\x20\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20-\x20baseAlpha\x20*\x20noise;','\x20\x20\x20}','\x20\x20\x20o_FragColor\x20=\x20vec4(baseColor,\x20baseAlpha);','}']['join']('\x0a')},'Volumetric':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','out\x20vec3\x20vVertPos;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vVertPos\x20=\x20updatePosition;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_PerlinTexture;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20u_Direction;','uniform\x20float\x20fTimer;','uniform\x20float\x20u_Thickness;','uniform\x20float\x20u_Frequency;','uniform\x20float\x20u_Absorption;','uniform\x20float\x20u_CoverageRatio;','uniform\x20float\x20u_Density;','uniform\x20int\x20u_Step;','in\x20vec3\x20vVertPos;','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','float\x20fade(float\x20t)\x20','{','\x20\x20\x20\x20return\x20t*t*t*(t*(6.0*t-15.0)+10.0);\x20','}','float\x20hash13(vec3\x20pos)','{','\x20\x20\x20\x20vec2\x20uv\x20=\x20pos.xy\x20+\x20pos.z;','\x20\x20\x20\x20return\x20texture(u_PerlinTexture,\x20(uv+\x200.5)/256.0).x;','}','float\x20grad3D(float\x20hash,\x20vec3\x20pos)\x20','{','\x20\x20\x20\x20int\x20h\x20=\x20int(1e4*hash)\x20&\x2015;','\x20\x20\x20\x20float\x20u\x20=\x20h<8\x20?\x20pos.x\x20:\x20pos.y,','\x20\x20\x20\x20\x20\x20\x20\x20v\x20=\x20h<4\x20?\x20pos.y\x20:\x20h==12||h==14\x20?\x20pos.x\x20:\x20pos.z;','\x20\x20\x20\x20return\x20((h&1)\x20==\x200\x20?\x20u\x20:\x20-u)\x20+\x20((h&2)\x20==\x200\x20?\x20v\x20:\x20-v);','}','float\x20perlinNoise3D(vec3\x20pos)','{','\x20\x20\x20\x20vec3\x20pi\x20=\x20floor(pos);\x20','\x20\x20\x20\x20vec3\x20pf\x20=\x20pos\x20-\x20pi;','\x20\x20\x20\x20float\x20u\x20=\x20fade(pf.x);','\x20\x20\x20\x20float\x20v\x20=\x20fade(pf.y);','\x20\x20\x20\x20float\x20w\x20=\x20fade(pf.z);','\x20\x20\x20\x20return\x20mix(\x20mix(\x20mix(\x20grad3D(hash13(pi\x20+\x20vec3(0,\x200,\x200)),\x20pf\x20-\x20vec3(0,\x200,\x200)),','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20grad3D(hash13(pi\x20+\x20vec3(1,\x200,\x200)),\x20pf\x20-\x20vec3(1,\x200,\x200)),\x20u\x20),','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mix(\x20grad3D(hash13(pi\x20+\x20vec3(0,\x201,\x200)),\x20pf\x20-\x20vec3(0,\x201,\x200)),\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20grad3D(hash13(pi\x20+\x20vec3(1,\x201,\x200)),\x20pf\x20-\x20vec3(1,\x201,\x200)),\x20u\x20),\x20v\x20),','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mix(\x20mix(\x20grad3D(hash13(pi\x20+\x20vec3(0,\x200,\x201)),\x20pf\x20-\x20vec3(0,\x200,\x201)),\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20grad3D(hash13(pi\x20+\x20vec3(1,\x200,\x201)),\x20pf\x20-\x20vec3(1,\x200,\x201)),\x20u\x20),','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mix(\x20grad3D(hash13(pi\x20+\x20vec3(0,\x201,\x201)),\x20pf\x20-\x20vec3(0,\x201,\x201)),\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20grad3D(hash13(pi\x20+\x20vec3(1,\x201,\x201)),\x20pf\x20-\x20vec3(1,\x201,\x201)),\x20u\x20),\x20v\x20),\x20w\x20);','}','float\x20fbm_NOISE_VALUE(vec3\x20x)\x20{','\x20\x20\x20vec3\x20p\x20=\x20floor(x);','\x20\x20\x20vec3\x20f\x20=\x20fract(x);','\x20\x20\x20f\x20=\x20f*f*(3.0\x20-\x202.0*f);','\x20\x20\x20vec2\x20uv\x20=\x20(p.xy\x20+\x20vec2(37.0,\x2017.0)*p.z)\x20+\x20f.xy;','\x20\x20\x20vec2\x20rg\x20=\x20textureLod(\x20u_PerlinTexture,\x20(uv+0.5)/256.0,\x200.0).yx;','\x20\x20\x20return\x20mix(rg.x,\x20rg.y,\x20f.z);','}','float\x20fbm_NOISE_PERLIN(vec3\x20p)\x20{','\x20\x20\x20\x20return\x20abs(perlinNoise3D(p));','}','float\x20fbm(vec3\x20pos,\x20float\x20lacunarity)','{','\x20\x20\x20vec3\x20p\x20=\x20pos;','\x20\x20\x20\x20float','\x20\x20\x20\x20t\x20\x20=\x200.51749673\x20*\x20fbm_NOISE_PERLIN(p);\x20p\x20*=\x20lacunarity;','\x20\x20\x20\x20t\x20+=\x200.25584929\x20*\x20fbm_NOISE_PERLIN(p);\x20p\x20*=\x20lacunarity;','\x20\x20\x20\x20t\x20+=\x200.12527603\x20*\x20fbm_NOISE_PERLIN(p);\x20p\x20*=\x20lacunarity;','\x20\x20\x20\x20t\x20+=\x200.06255931\x20*\x20fbm_NOISE_PERLIN(p);','\x20\x20\x20\x20return\x20t;','}','float\x20Tex2DNoise3D(vec3\x20pos,\x20float\x20frequency,\x20float\x20amplitude,\x20float\x20persistence,\x20int\x20octaves,\x20vec3\x20seed)\x20','{','\x20\x20\x20\x20float\x20noiseSum\x20=\x200.0;','\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x20octaves;\x20i++)\x20','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20xUV\x20=\x20pos.x\x20*\x20frequency\x20+\x20seed.x;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20yUV\x20=\x20pos.y\x20*\x20frequency\x20+\x20seed.y;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20zUV\x20=\x20pos.z\x20*\x20frequency\x20+\x20seed.z;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20noiseSum\x20+=\x20perlinNoise3D(vec3(xUV,\x20yUV,\x20zUV))\x20*\x20amplitude;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20amplitude\x20*=\x20persistence;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20frequency\x20*=\x202.0;','\x20\x20\x20\x20}','\x20\x20\x20\x20return\x20noiseSum\x20/\x20float(octaves);','}','vec4\x20render_clouds()\x20{','\x20\x20\x20float\x20thickness\x20=\x20u_Thickness;','\x20\x20\x20int\x20steps\x20=\x20u_Step;','\x20\x20\x20float\x20ABSORPTION\x20=\x20u_Absorption;','\x20\x20\x20float\x20FBM_FREQ\x20=\x20u_frequency;','\x20\x20\x20float\x20COVERAGE\x20=\x20u_CoverageRatio;','\x20\x20\x20thickness\x20=\x2012.0;','\x20\x20\x20steps\x20=\x2015;','\x20\x20\x20ABSORPTION\x20=\x200.730725;','\x20\x20\x20FBM_FREQ\x20=\x202.06434;','\x20\x20\x20COVERAGE\x20=\x201.0;','\x20\x20\x20float\x20march_step\x20=\x20thickness\x20/\x20float(steps);','\x20\x20\x20vec3\x20direction\x20=\x20u_Direction\x20*\x20fTimer;','\x20\x20\x20float\x20T\x20=\x201.0;','\x20\x20\x20vec3\x20C\x20=\x20vec3(0.0,\x200.0,\x200.0);','\x20\x20\x20float\x20alpha\x20=\x200.0;','\x20\x20\x20float\x20densFraq\x20=\x20u_Density;','\x20\x20\x20vec3\x20pos_step\x20=\x20(vVertPos\x20+\x20u_Direction)\x20*\x20march_step;','\x20\x20\x20vec3\x20vPos\x20=\x20vVertPos;','\x20\x20\x20for\x20(int\x20i\x20=\x200;\x20i\x20<\x20steps;\x20i++)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20h\x20=\x20float(i)\x20/\x20float(steps);','\x20\x20\x20\x20\x20\x20\x20vec3\x20currentPos\x20=\x20vPos\x20*\x20densFraq;','\x20\x20\x20\x20\x20\x20\x20float\x20dens\x20=\x20fbm(currentPos\x20+\x20direction,\x20FBM_FREQ);','\x20\x20\x20\x20\x20\x20\x20float\x20cov\x20=\x201.0\x20-\x20COVERAGE;','\x20\x20\x20\x20\x20\x20\x20dens\x20*=\x20smoothstep\x20(cov,\x20cov\x20+\x200.05,\x20dens);','\x20\x20\x20\x20\x20\x20\x20dens\x20=\x20clamp(dens,\x200.0,\x201.0);','\x20\x20\x20\x20\x20\x20\x20float\x20T_i\x20=\x20exp(-ABSORPTION\x20*\x20dens\x20*\x20march_step);','\x20\x20\x20\x20\x20\x20\x20T\x20*=\x20T_i;','\x20\x20\x20\x20\x20\x20\x20if\x20(T\x20<\x200.01)\x20break;','\x20\x20\x20\x20\x20\x20\x20C\x20+=\x20T\x20*\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20dens\x20*\x20march_step;','\x20\x20\x20\x20\x20\x20\x20\x20alpha\x20+=\x20(1.0\x20-\x20T_i)\x20*\x20(1.0\x20-\x20alpha);','\x20\x20\x20\x20\x20\x20\x20vPos\x20+=\x20pos_step;','\x20\x20\x20}','\x20\x20\x20return\x20vec4(C,\x20alpha);','}','void\x20main()\x20{','\x20\x20\x20vec3\x20baseColor\x20=\x20vec3(u_color.rgb);','\x20\x20\x20float\x20baseAlpha\x20=\x20u_color.a;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x20\x20\x20vec4\x20colClouds\x20=\x20render_clouds();','\x20\x20\x20o_FragColor\x20=\x20texture(u_PerlinTexture,\x20vVertPos.xy);','}']['join']('\x0a')},'HorizonClouds':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','out\x20vec3\x20vVertPos;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vVertPos\x20=\x20updatePosition;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_PerlinTexture;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20u_Direction;','uniform\x20float\x20fTimer;','uniform\x20float\x20u_Thickness;','uniform\x20float\x20u_Frequency;','uniform\x20float\x20u_Absorption;','uniform\x20float\x20u_CoverageRatio;','uniform\x20float\x20u_Density;','uniform\x20int\x20u_Step;','in\x20vec3\x20vVertPos;','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','float\x20fade(float\x20t)\x20','{','\x20\x20\x20\x20return\x20t*t*t*(t*(6.0*t-15.0)+10.0);\x20','}','float\x20hash13(vec3\x20pos)','{','\x20\x20\x20\x20vec2\x20uv\x20=\x20pos.xy\x20+\x20pos.z;','\x20\x20\x20\x20return\x20texture(u_PerlinTexture,\x20(uv\x20+\x200.5)/256.0).x;','}','float\x20grad3D(float\x20hash,\x20vec3\x20pos)\x20','{','\x20\x20\x20\x20int\x20h\x20=\x20int(1e4*hash)\x20&\x2015;','\x20\x20\x20\x20float\x20u\x20=\x20h<8\x20?\x20pos.x\x20:\x20pos.y,','\x20\x20\x20\x20\x20\x20\x20\x20v\x20=\x20h<4\x20?\x20pos.y\x20:\x20h==12||h==14\x20?\x20pos.x\x20:\x20pos.z;','\x20\x20\x20\x20return\x20((h&1)\x20==\x200\x20?\x20u\x20:\x20-u)\x20+\x20((h&2)\x20==\x200\x20?\x20v\x20:\x20-v);','}','float\x20perlinNoise3D(vec3\x20pos)','{','\x20\x20\x20\x20vec3\x20pi\x20=\x20floor(pos);\x20','\x20\x20\x20\x20vec3\x20pf\x20=\x20pos\x20-\x20pi;','\x20\x20\x20\x20float\x20u\x20=\x20fade(pf.x);','\x20\x20\x20\x20float\x20v\x20=\x20fade(pf.y);','\x20\x20\x20\x20float\x20w\x20=\x20fade(pf.z);','\x20\x20\x20\x20return\x20mix(\x20mix(\x20mix(\x20grad3D(hash13(pi\x20+\x20vec3(0,\x200,\x200)),\x20pf\x20-\x20vec3(0,\x200,\x200)),','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20grad3D(hash13(pi\x20+\x20vec3(1,\x200,\x200)),\x20pf\x20-\x20vec3(1,\x200,\x200)),\x20u\x20),','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mix(\x20grad3D(hash13(pi\x20+\x20vec3(0,\x201,\x200)),\x20pf\x20-\x20vec3(0,\x201,\x200)),\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20grad3D(hash13(pi\x20+\x20vec3(1,\x201,\x200)),\x20pf\x20-\x20vec3(1,\x201,\x200)),\x20u\x20),\x20v\x20),','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mix(\x20mix(\x20grad3D(hash13(pi\x20+\x20vec3(0,\x200,\x201)),\x20pf\x20-\x20vec3(0,\x200,\x201)),\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20grad3D(hash13(pi\x20+\x20vec3(1,\x200,\x201)),\x20pf\x20-\x20vec3(1,\x200,\x201)),\x20u\x20),','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mix(\x20grad3D(hash13(pi\x20+\x20vec3(0,\x201,\x201)),\x20pf\x20-\x20vec3(0,\x201,\x201)),\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20grad3D(hash13(pi\x20+\x20vec3(1,\x201,\x201)),\x20pf\x20-\x20vec3(1,\x201,\x201)),\x20u\x20),\x20v\x20),\x20w\x20);','}','float\x20fbm_NOISE_VALUE(vec3\x20x)\x20{','\x20\x20\x20vec3\x20p\x20=\x20floor(x);','\x20\x20\x20vec3\x20f\x20=\x20fract(x);','\x20\x20\x20f\x20=\x20f*f*(3.0\x20-\x202.0*f);','\x20\x20\x20vec2\x20uv\x20=\x20(p.xy\x20+\x20vec2(37.0,\x2017.0)*p.z)\x20+\x20f.xy;','\x20\x20\x20vec2\x20rg\x20=\x20textureLod(\x20u_PerlinTexture,\x20(uv+0.5)/256.0,\x200.0).yx;','\x20\x20\x20return\x20mix(rg.x,\x20rg.y,\x20f.z);','}','float\x20fbm_NOISE_PERLIN(vec3\x20p)\x20{','\x20\x20\x20\x20return\x20abs(perlinNoise3D(p));','}','float\x20fbm(vec3\x20pos,\x20float\x20lacunarity)','{','\x20\x20\x20vec3\x20p\x20=\x20pos;','\x20\x20\x20\x20float','\x20\x20\x20\x20t\x20\x20=\x200.51749673\x20*\x20fbm_NOISE_PERLIN(p);\x20p\x20*=\x20lacunarity;','\x20\x20\x20\x20t\x20+=\x200.25584929\x20*\x20fbm_NOISE_PERLIN(p);\x20p\x20*=\x20lacunarity;','\x20\x20\x20\x20t\x20+=\x200.12527603\x20*\x20fbm_NOISE_PERLIN(p);\x20p\x20*=\x20lacunarity;','\x20\x20\x20\x20t\x20+=\x200.06255931\x20*\x20fbm_NOISE_PERLIN(p);','\x20\x20\x20\x20return\x20t;','}','float\x20Tex2DNoise3D(vec3\x20pos,\x20float\x20frequency,\x20float\x20amplitude,\x20float\x20persistence,\x20int\x20octaves,\x20vec3\x20seed)\x20','{','\x20\x20\x20\x20float\x20noiseSum\x20=\x200.0;','\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x20octaves;\x20i++)\x20','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20xUV\x20=\x20pos.x\x20*\x20frequency\x20+\x20seed.x;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20yUV\x20=\x20pos.y\x20*\x20frequency\x20+\x20seed.y;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20zUV\x20=\x20pos.z\x20*\x20frequency\x20+\x20seed.z;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20noiseSum\x20+=\x20perlinNoise3D(vec3(xUV,\x20yUV,\x20zUV))\x20*\x20amplitude;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20amplitude\x20*=\x20persistence;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20frequency\x20*=\x202.0;','\x20\x20\x20\x20}','\x20\x20\x20\x20return\x20noiseSum\x20/\x20float(octaves);','}','vec4\x20render_clouds()\x20{','\x20\x20\x20float\x20thickness\x20=\x20u_Thickness;','\x20\x20\x20int\x20steps\x20=\x20u_Step;','\x20\x20\x20float\x20ABSORPTION\x20=\x20u_Absorption;','\x20\x20\x20float\x20FBM_FREQ\x20=\x20u_Frequency;','\x20\x20\x20float\x20COVERAGE\x20=\x20u_CoverageRatio;','\x20\x20\x20float\x20march_step\x20=\x20thickness\x20/\x20float(steps);','\x20\x20\x20vec3\x20direction\x20=\x20u_Direction\x20*\x20fTimer;','\x20\x20\x20float\x20T\x20=\x201.0;','\x20\x20\x20vec3\x20C\x20=\x20vec3(0.0,\x200.0,\x200.0);','\x20\x20\x20float\x20alpha\x20=\x200.0;','\x20\x20\x20float\x20densFraq\x20=\x20u_Density;','\x20\x20\x20vec3\x20pos_step\x20=\x20(vVertPos\x20+\x20u_Direction)\x20*\x20march_step;','\x20\x20\x20vec3\x20vPos\x20=\x20vVertPos;','\x20\x20\x20for\x20(int\x20i\x20=\x200;\x20i\x20<\x20steps;\x20i++)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20h\x20=\x20float(i)\x20/\x20float(steps);','\x20\x20\x20\x20\x20\x20\x20vec3\x20currentPos\x20=\x20vPos\x20*\x20densFraq\x20+\x20h;','\x20\x20\x20\x20\x20\x20\x20float\x20dens\x20=\x20fbm(currentPos\x20+\x20direction,\x20FBM_FREQ);','\x20\x20\x20\x20\x20\x20\x20float\x20cov\x20=\x201.0\x20-\x20COVERAGE;','\x20\x20\x20\x20\x20\x20\x20dens\x20*=\x20smoothstep\x20(cov,\x20cov\x20+\x200.05,\x20dens);','\x20\x20\x20\x20\x20\x20\x20dens\x20=\x20clamp(dens,\x200.0,\x201.0);','\x20\x20\x20\x20\x20\x20\x20float\x20T_i\x20=\x20exp(-ABSORPTION\x20*\x20dens\x20*\x20march_step);','\x20\x20\x20\x20\x20\x20\x20T\x20*=\x20T_i;','\x20\x20\x20\x20\x20\x20\x20if\x20(T\x20<\x200.01)\x20break;','\x20\x20\x20\x20\x20\x20\x20C\x20+=\x20T\x20*\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20dens\x20*\x20march_step;','\x20\x20\x20\x20\x20\x20\x20\x20alpha\x20+=\x20(1.0\x20-\x20T_i)\x20*\x20(1.0\x20-\x20alpha);','\x20\x20\x20\x20\x20\x20\x20vPos\x20+=\x20pos_step;','\x20\x20\x20}','\x20\x20\x20return\x20vec4(C,\x20alpha);','}','void\x20main()\x20{','\x20\x20\x20vec3\x20baseColor\x20=\x20vec3(u_color.rgb);','\x20\x20\x20float\x20baseAlpha\x20=\x20u_color.a;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x20\x20\x20vec4\x20colClouds\x20=\x20render_clouds();','\x20\x20\x20vec3\x20colMix\x20=\x20vec3(mix(baseColor,\x20colClouds.rgb/(0.000001+colClouds.a),\x20colClouds.a));','\x20\x20\x20o_FragColor\x20=\x20vec4(colMix.r\x20*\x20baseColor.r,','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colMix.g\x20*\x20baseColor.g,','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colMix.b\x20*\x20baseColor.b,','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colClouds.a\x20*\x20baseAlpha);','}']['join']('\x0a')},'Worldy3D':{'vertex':['in\x20vec3\x20a_position;','out\x20vec3\x20vPosition;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','\x09vec4\x20position\x20=\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vPosition\x20=\x20updatePosition;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','in\x20vec3\x20vPosition;','uniform\x20float\x20uNoiseScale;','uniform\x20float\x20uNoiseJitter;','uniform\x20bool\x20uManhattanDistance;','uniform\x20float\x20uNoiseStrength;','out\x20vec4\x20o_FragColor;','vec3\x20permute(vec3\x20x)\x20{','\x20\x20\x20\x20return\x20mod((34.0\x20*\x20x\x20+\x201.0)\x20*\x20x,\x20289.0);','\x20\x20}','\x20\x20vec3\x20dist(vec3\x20x,\x20vec3\x20y,\x20vec3\x20z,\x20\x20bool\x20manhattanDistance)\x20{','\x20\x20\x20\x20return\x20manhattanDistance\x20?\x20\x20abs(x)\x20+\x20abs(y)\x20+\x20abs(z)\x20:\x20\x20(x\x20*\x20x\x20+\x20y\x20*\x20y\x20+\x20z\x20*\x20z);','\x20\x20}','\x20\x20vec2\x20worley(vec3\x20P,\x20float\x20jitter,\x20bool\x20manhattanDistance)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20K\x20=\x200.142857142857;','\x20\x20\x20\x20\x20\x20\x20float\x20Ko\x20=\x200.428571428571;','\x20\x20\x20\x20\x20\x20\x20float\x20K2\x20=\x200.020408163265306;','\x20\x20\x20\x20\x20\x20\x20float\x20Kz\x20=\x200.166666666667;','\x20\x20\x20\x20\x20\x20\x20float\x20Kzo\x20=\x200.416666666667;','\x20\x20\x20\x20\x20\x20\x20vec3\x20Pi\x20=\x20mod(floor(P),\x20289.0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Pf\x20=\x20fract(P)\x20-\x200.5;','\x20\x20\x20\x20\x20\x20vec3\x20Pfx\x20=\x20Pf.x\x20+\x20vec3(1.0,\x200.0,\x20-1.0);','\x20\x20\x20\x20\x20\x20vec3\x20Pfy\x20=\x20Pf.y\x20+\x20vec3(1.0,\x200.0,\x20-1.0);','\x20\x20\x20\x20\x20\x20vec3\x20Pfz\x20=\x20Pf.z\x20+\x20vec3(1.0,\x200.0,\x20-1.0);','\x20\x20\x20\x20\x20\x20vec3\x20p\x20=\x20permute(Pi.x\x20+\x20vec3(-1.0,\x200.0,\x201.0));','\x20\x20\x20\x20\x20\x20vec3\x20p1\x20=\x20permute(p\x20+\x20Pi.y\x20-\x201.0);','\x20\x20\x20\x20\x20\x20vec3\x20p2\x20=\x20permute(p\x20+\x20Pi.y);','\x20\x20\x20\x20\x20\x20vec3\x20p3\x20=\x20permute(p\x20+\x20Pi.y\x20+\x201.0);','\x20\x20\x20\x20\x20\x20vec3\x20p11\x20=\x20permute(p1\x20+\x20Pi.z\x20-\x201.0);','\x20\x20\x20\x20\x20\x20vec3\x20p12\x20=\x20permute(p1\x20+\x20Pi.z);','\x20\x20\x20\x20\x20\x20vec3\x20p13\x20=\x20permute(p1\x20+\x20Pi.z\x20+\x201.0);','\x20\x20\x20\x20\x20\x20vec3\x20p21\x20=\x20permute(p2\x20+\x20Pi.z\x20-\x201.0);','\x20\x20\x20\x20\x20\x20vec3\x20p22\x20=\x20permute(p2\x20+\x20Pi.z);','\x20\x20\x20\x20\x20\x20vec3\x20p23\x20=\x20permute(p2\x20+\x20Pi.z\x20+\x201.0);','\x20\x20\x20\x20\x20\x20vec3\x20p31\x20=\x20permute(p3\x20+\x20Pi.z\x20-\x201.0);','\x20\x20\x20\x20\x20\x20vec3\x20p32\x20=\x20permute(p3\x20+\x20Pi.z);','\x20\x20\x20\x20\x20\x20vec3\x20p33\x20=\x20permute(p3\x20+\x20Pi.z\x20+\x201.0);','\x20\x20\x20\x20\x20\x20vec3\x20ox11\x20=\x20fract(p11*K)\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oy11\x20=\x20mod(floor(p11*K),\x207.0)*K\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oz11\x20=\x20floor(p11*K2)*Kz\x20-\x20Kzo;','\x20\x20\x20\x20\x20\x20vec3\x20ox12\x20=\x20fract(p12*K)\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oy12\x20=\x20mod(floor(p12*K),\x207.0)*K\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oz12\x20=\x20floor(p12*K2)*Kz\x20-\x20Kzo;','\x20\x20\x20\x20\x20\x20vec3\x20ox13\x20=\x20fract(p13*K)\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oy13\x20=\x20mod(floor(p13*K),\x207.0)*K\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oz13\x20=\x20floor(p13*K2)*Kz\x20-\x20Kzo;','\x20\x20\x20\x20\x20\x20vec3\x20ox21\x20=\x20fract(p21*K)\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oy21\x20=\x20mod(floor(p21*K),\x207.0)*K\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oz21\x20=\x20floor(p21*K2)*Kz\x20-\x20Kzo;','\x20\x20\x20\x20\x20\x20vec3\x20ox22\x20=\x20fract(p22*K)\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oy22\x20=\x20mod(floor(p22*K),\x207.0)*K\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oz22\x20=\x20floor(p22*K2)*Kz\x20-\x20Kzo;','\x20\x20\x20\x20\x20\x20vec3\x20ox23\x20=\x20fract(p23*K)\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oy23\x20=\x20mod(floor(p23*K),\x207.0)*K\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oz23\x20=\x20floor(p23*K2)*Kz\x20-\x20Kzo;','\x20\x20\x20\x20\x20\x20vec3\x20ox31\x20=\x20fract(p31*K)\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oy31\x20=\x20mod(floor(p31*K),\x207.0)*K\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oz31\x20=\x20floor(p31*K2)*Kz\x20-\x20Kzo;','\x20\x20\x20\x20\x20\x20vec3\x20ox32\x20=\x20fract(p32*K)\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oy32\x20=\x20mod(floor(p32*K),\x207.0)*K\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oz32\x20=\x20floor(p32*K2)*Kz\x20-\x20Kzo;','\x20\x20\x20\x20\x20\x20vec3\x20ox33\x20=\x20fract(p33*K)\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oy33\x20=\x20mod(floor(p33*K),\x207.0)*K\x20-\x20Ko;','\x20\x20\x20\x20\x20\x20vec3\x20oz33\x20=\x20floor(p33*K2)*Kz\x20-\x20Kzo;','\x20\x20\x20\x20\x20\x20vec3\x20dx11\x20=\x20Pfx\x20+\x20jitter*ox11;','\x20\x20\x20\x20\x20\x20vec3\x20dy11\x20=\x20Pfy.x\x20+\x20jitter*oy11;','\x20\x20\x20\x20\x20\x20vec3\x20dz11\x20=\x20Pfz.x\x20+\x20jitter*oz11;','\x20\x20\x20\x20\x20\x20vec3\x20dx12\x20=\x20Pfx\x20+\x20jitter*ox12;','\x20\x20\x20\x20\x20\x20vec3\x20dy12\x20=\x20Pfy.x\x20+\x20jitter*oy12;','\x20\x20\x20\x20\x20\x20vec3\x20dz12\x20=\x20Pfz.y\x20+\x20jitter*oz12;','\x20\x20\x20\x20\x20\x20vec3\x20dx13\x20=\x20Pfx\x20+\x20jitter*ox13;','\x20\x20\x20\x20\x20\x20vec3\x20dy13\x20=\x20Pfy.x\x20+\x20jitter*oy13;','\x20\x20\x20\x20\x20\x20vec3\x20dz13\x20=\x20Pfz.z\x20+\x20jitter*oz13;','\x20\x20\x20\x20\x20\x20vec3\x20dx21\x20=\x20Pfx\x20+\x20jitter*ox21;','\x20\x20\x20\x20\x20\x20vec3\x20dy21\x20=\x20Pfy.y\x20+\x20jitter*oy21;','\x20\x20\x20\x20\x20\x20vec3\x20dz21\x20=\x20Pfz.x\x20+\x20jitter*oz21;','\x20\x20\x20\x20\x20\x20vec3\x20dx22\x20=\x20Pfx\x20+\x20jitter*ox22;','\x20\x20\x20\x20\x20\x20vec3\x20dy22\x20=\x20Pfy.y\x20+\x20jitter*oy22;','\x20\x20\x20\x20\x20\x20vec3\x20dz22\x20=\x20Pfz.y\x20+\x20jitter*oz22;','\x20\x20\x20\x20\x20\x20vec3\x20dx23\x20=\x20Pfx\x20+\x20jitter*ox23;','\x20\x20\x20\x20\x20\x20vec3\x20dy23\x20=\x20Pfy.y\x20+\x20jitter*oy23;','\x20\x20\x20\x20\x20\x20vec3\x20dz23\x20=\x20Pfz.z\x20+\x20jitter*oz23;','\x20\x20\x20\x20\x20\x20vec3\x20dx31\x20=\x20Pfx\x20+\x20jitter*ox31;','\x20\x20\x20\x20\x20\x20vec3\x20dy31\x20=\x20Pfy.z\x20+\x20jitter*oy31;','\x20\x20\x20\x20\x20\x20vec3\x20dz31\x20=\x20Pfz.x\x20+\x20jitter*oz31;','\x20\x20\x20\x20\x20\x20vec3\x20dx32\x20=\x20Pfx\x20+\x20jitter*ox32;','\x20\x20\x20\x20\x20\x20vec3\x20dy32\x20=\x20Pfy.z\x20+\x20jitter*oy32;','\x20\x20\x20\x20\x20\x20vec3\x20dz32\x20=\x20Pfz.y\x20+\x20jitter*oz32;','\x20\x20\x20\x20\x20\x20vec3\x20dx33\x20=\x20Pfx\x20+\x20jitter*ox33;','\x20\x20\x20\x20\x20\x20vec3\x20dy33\x20=\x20Pfy.z\x20+\x20jitter*oy33;','\x20\x20\x20\x20\x20\x20vec3\x20dz33\x20=\x20Pfz.z\x20+\x20jitter*oz33;','\x20\x20\x20\x20\x20\x20vec3\x20d11\x20=\x20dist(dx11,\x20dy11,\x20dz11,\x20manhattanDistance);','\x20\x20\x20\x20\x20\x20vec3\x20d12\x20=dist(dx12,\x20dy12,\x20dz12,\x20manhattanDistance);','\x20\x20\x20\x20\x20\x20vec3\x20d13\x20=\x20dist(dx13,\x20dy13,\x20dz13,\x20manhattanDistance);','\x20\x20\x20\x20\x20\x20vec3\x20d21\x20=\x20dist(dx21,\x20dy21,\x20dz21,\x20manhattanDistance);','\x20\x20\x20\x20\x20\x20vec3\x20d22\x20=\x20dist(dx22,\x20dy22,\x20dz22,\x20manhattanDistance);','\x20\x20\x20\x20\x20\x20vec3\x20d23\x20=\x20dist(dx23,\x20dy23,\x20dz23,\x20manhattanDistance);','\x20\x20\x20\x20\x20\x20vec3\x20d31\x20=\x20dist(dx31,\x20dy31,\x20dz31,\x20manhattanDistance);','\x20\x20\x20\x20\x20\x20vec3\x20d32\x20=\x20dist(dx32,\x20dy32,\x20dz32,\x20manhattanDistance);','\x20\x20\x20\x20\x20\x20vec3\x20d33\x20=\x20dist(dx33,\x20dy33,\x20dz33,\x20manhattanDistance);','\x20\x20\x20\x20\x20\x20vec3\x20d1a\x20=\x20min(d11,\x20d12);','\x20\x20\x20\x20\x20\x20d12\x20=\x20max(d11,\x20d12);','\x20\x20\x20\x20\x20\x20d11\x20=\x20min(d1a,\x20d13);','\x20\x20\x20\x20\x20\x20d13\x20=\x20max(d1a,\x20d13);','\x20\x20\x20\x20\x20\x20d12\x20=\x20min(d12,\x20d13);','\x20\x20\x20\x20\x20\x20vec3\x20d2a\x20=\x20min(d21,\x20d22);','\x20\x20\x20\x20\x20\x20d22\x20=\x20max(d21,\x20d22);','\x20\x20\x20\x20\x20\x20d21\x20=\x20min(d2a,\x20d23);','\x20\x20\x20\x20\x20\x20d23\x20=\x20max(d2a,\x20d23);','\x20\x20\x20\x20\x20\x20d22\x20=\x20min(d22,\x20d23);','\x20\x20\x20\x20\x20\x20vec3\x20d3a\x20=\x20min(d31,\x20d32);','\x20\x20\x20\x20\x20\x20d32\x20=\x20max(d31,\x20d32);','\x20\x20\x20\x20\x20\x20d31\x20=\x20min(d3a,\x20d33);','\x20\x20\x20\x20\x20\x20d33\x20=\x20max(d3a,\x20d33);','\x20\x20\x20\x20\x20\x20d32\x20=\x20min(d32,\x20d33);','\x20\x20\x20\x20\x20\x20vec3\x20da\x20=\x20min(d11,\x20d21);','\x20\x20\x20\x20\x20\x20d21\x20=\x20max(d11,\x20d21);','\x20\x20\x20\x20\x20\x20d11\x20=\x20min(da,\x20d31);','\x20\x20\x20\x20\x20\x20d31\x20=\x20max(da,\x20d31);','\x20\x20\x20\x20\x20\x20d11.xy\x20=\x20(d11.x\x20<\x20d11.y)\x20?\x20d11.xy\x20:\x20d11.yx;','\x20\x20\x20\x20\x20\x20d11.xz\x20=\x20(d11.x\x20<\x20d11.z)\x20?\x20d11.xz\x20:\x20d11.zx;','\x20\x20\x20\x20\x20\x20d12\x20=\x20min(d12,\x20d21);','\x20\x20\x20\x20\x20\x20d12\x20=\x20min(d12,\x20d22);','\x20\x20\x20\x20\x20\x20d12\x20=\x20min(d12,\x20d31);','\x20\x20\x20\x20\x20\x20d12\x20=\x20min(d12,\x20d32);','\x20\x20\x20\x20\x20\x20d11.yz\x20=\x20min(d11.yz,d12.xy);','\x20\x20\x20\x20\x20\x20d11.y\x20=\x20min(d11.y,d12.z);','\x20\x20\x20\x20\x20\x20d11.y\x20=\x20min(d11.y,d11.z);','\x20\x20\x20\x20\x20\x20return\x20sqrt(d11.xy);','\x20\x20}','void\x20main()\x20{','\x20\x20\x20vec2\x20F\x20=\x20worley3D(vPosition*uNoiseScale,\x20uNoiseJitter,\x20uManhattanDistance);','\x20\x20\x20float\x20F1\x20=\x20F.x;','\x20\x20\x20float\x20F2\x20=\x20F.y;','\x20\x20\x20float\x20val\x20=\x20F2\x20-\x20F1;','\x20\x20\x20val\x20*=\x20uNoiseStrength;','\x20\x20\x20o_FragColor\x20=\x20vec4(\x20vec3(val),\x201.0);','}']['join']('\x0a')},'BMFont':{'vertex':['in\x20vec2\x20v_pos;','in\x20vec2\x20v_tex;','in\x20vec4\x20a_pos;','in\x20vec3\x20a_size;','in\x20vec3\x20a_col;','in\x20vec3\x20a_rotate;','uniform\x20mat4\x20u_MVPmatrix;\x20','uniform\x20float\x20u_scale;\x20','out\x20vec2\x20v_texcoord;\x20','out\x20vec4\x20v_color;\x20\x20\x20\x20\x20\x20','void\x20main()\x20{','float\x20texSize=4096.f;\x20//texture\x20size\x20//json-info-scaleW\x20uniform으로\x20전달가능','v_color=vec4(a_col,1.0);\x20//문자열\x20색상\x20','float\x20theta\x20=3.14*a_rotate.z/180.;','vec2\x20r_position;','r_position.x=\x20(a_pos.x-a_rotate.x)*cos(theta)-(a_pos.y-a_rotate.y)*sin(theta);','r_position.y=\x20(a_pos.x-a_rotate.x)*sin(theta)+(a_pos.y-a_rotate.y)*cos(theta);','r_position.x=r_position.x+a_rotate.x;','r_position.y=r_position.y+a_rotate.y;','vec2\x20r_bposition;','r_bposition.x=v_pos.x*a_size[0]*a_size[2]*cos(theta)-v_pos.y*a_size[1]*a_size[2]*sin(theta);','r_bposition.y=v_pos.x*a_size[0]*a_size[2]*sin(theta)+v_pos.y*a_size[1]*a_size[2]*cos(theta);','gl_Position=\x20u_MVPmatrix\x20\x20*\x20\x20vec4(\x20\x20r_position[0]+r_bposition.x,\x20\x20\x20r_position[1]+r_bposition.y\x20,\x20\x200.0,1.0\x20)\x20\x20;','v_texcoord\x20=\x20vec2(\x20(a_pos[2]+\x20\x20v_tex.x*a_size[0])/texSize,(a_pos[3]+a_size[1]*v_tex.y)/texSize\x20\x20\x20);','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','in\x20vec2\x20v_texcoord;','in\x20vec4\x20v_color;','uniform\x20sampler2D\x20u_texture;','out\x20vec4\x20o_FragColor;','void\x20main()\x20{','float\x20alpha=texture(u_texture,\x20v_texcoord).x;','if(alpha<0.1)','discard;','o_FragColor=vec4(v_color.xyz,\x201.0*alpha);\x20\x20','}']['join']('\x0a')},'RayTest':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_PositionTexture;','uniform\x20sampler2D\x20u_NormalTexture;','uniform\x20mat4\x20u_ProjectionInverseMatrix;','uniform\x20mat4\x20u_ProjectionMatrix;','uniform\x20mat4\x20u_ProjectionMatrixSrc;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_Mmatrix;','uniform\x20mat4\x20u_Vmatrix;','uniform\x20mat4\x20u_Pmatrix;','uniform\x20mat4\x20u_IVmatrix;','uniform\x20float\x20uFar;','uniform\x20float\x20uNear;','uniform\x20vec2\x20u_Resolution;','uniform\x20vec3\x20vDirectionalLightPos;','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','void\x20main()\x20{','\x20\x20\x20vec4\x20pos=texture(u_PositionTexture,\x20vUV);','\x20\x20\x20vec4\x20ipos=inverse(u_Vmatrix)*vec4(pos.xyz,1.0);','\x20\x20\x20ipos=ipos/ipos.w;','\x20\x20\x20o_FragColor\x20=\x20vec4(ipos.xyz,1.0);','\x20\x20\x20return;','}']['join']('\x0a')},'Orbit':{'vertex':['uniform\x20int\x20numVerts;','uniform\x20vec2\x20resolution;','uniform\x20float\x20lwidth;','#define\x20PI\x20radians(180.0)','const\x20int\x20numSlices\x20=\x2020;','const\x20int\x20numVertsPerCircle\x20=\x20numSlices\x20*\x203;','\x20vec2\x20computeCircleTriangleVertex(int\x20vertexId)\x20{','\x20\x20int\x20sliceId\x20=\x20vertexId\x20/\x203;','\x20\x20int\x20triVertexId\x20=\x20vertexId\x20%\x203;','\x20\x20int\x20edge\x20=\x20triVertexId\x20+\x20sliceId;','\x20\x20float\x20angleU\x20=\x20float(edge)\x20/\x20float(numSlices);\x20\x20//\x200.0\x20to\x201.0','\x20\x20float\x20angle\x20=\x20angleU\x20*\x20PI\x20*\x202.0;','\x20\x20float\x20radius\x20=\x20step(float(triVertexId),\x201.0);','\x20\x20\x20return\x20vec2(cos(angle),\x20sin(angle))\x20*\x20radius\x20*\x200.1\x20*\x20lwidth;','}','void\x20main()\x20{','int\x20circleId\x20=\x20gl_VertexID\x20/\x20numVertsPerCircle;','int\x20numCircles\x20=\x20numVerts\x20/\x20numVertsPerCircle;','float\x20u\x20=\x20float(circleId)\x20/\x20float(numCircles);\x20\x20//\x20goes\x20from\x200\x20to\x201','float\x20angle\x20=\x20u\x20*\x20PI\x20*\x202.0;\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20//\x20goes\x20from\x200\x20to\x202PI','float\x20radius\x20=\x200.6;','vec2\x20pos\x20=\x20vec2(cos(angle),\x20sin(angle))\x20*\x20radius;','vec2\x20triPos\x20=\x20computeCircleTriangleVertex(gl_VertexID)\x20*\x200.1;','float\x20aspect\x20=\x20resolution.y\x20/\x20resolution.x;','vec2\x20scale\x20=\x20vec2(aspect,\x201);','gl_Position\x20=\x20vec4((pos\x20+\x20triPos)\x20*\x20scale,\x200,\x201);','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec4\x20lcolor;','out\x20vec4\x20outColor;','void\x20main()\x20{','outColor\x20=\x20lcolor;','}']['join']('\x0a')}},this['ShadingLanguage_DemoType_6']={'PBR_v2':{'vertex':['in\x20vec3\x20a_position;','in\x20vec3\x20a_normal;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','out\x20vec2\x20vUV;','out\x20vec3\x20vNormalInterp;','out\x20vec3\x20vVertPos;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','in\x20vec3\x20a_matrixIdx;','#endif','#ifdef\x20SHADING_SHADOW','uniform\x20mat4\x20u_MVPShadowMatrix;','out\x20vec4\x20vShadowCoord;','#endif','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','\x20\x20\x20#ifdef\x20SHADING_SHADOW','\x20\x20\x20vec4\x20shadowPosition\x20=\x20u_MVPShadowMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord\x20=\x20shadowPosition;','\x20\x20\x20#endif','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20float\x20ubPerspectiveView;','#ifdef\x20SHADING_SHADOW','uniform\x20sampler2D\x20uShadowPositionTexture;','uniform\x20float\x20u_ShadowRatio;','uniform\x20float\x20uBias;','in\x20vec4\x20vShadowCoord;','#endif','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20float\x20fShininess;','uniform\x20float\x20u_Roughness;','uniform\x20float\x20u_Metallic;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20int\x20useBump;','uniform\x20sampler2D\x20u_texBump;','uniform\x20int\x20useTextureRoughness;','uniform\x20sampler2D\x20u_texRoughness;','uniform\x20int\x20useTextureMetalness;','uniform\x20sampler2D\x20u_texMetalness;','uniform\x20int\x20useTextureAO;','uniform\x20sampler2D\x20u_texAO;','uniform\x20int\x20useTextureAlpha;','uniform\x20sampler2D\x20u_texAlpha;','uniform\x20int\x20useTextureSpecluar;','\x0a#ifdef\x20SHADING_ENVIRONMENT','uniform\x20samplerCube\x20u_texIrradianceMap;','uniform\x20samplerCube\x20u_texPrefilterMap;','uniform\x20sampler2D\x20\x20u_texbrdfLUT;','\x0a#endif','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','uniform\x20int\x20uLightNum;','uniform\x20vec3\x20vLightPos[4];','uniform\x20vec3\x20vLightColor[4];','in\x20vec2\x20vUV;','in\x20vec3\x20vNormalInterp;','in\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseGraySacle;','const\x20float\x20SH_PI\x20=\x203.14159265359;','const\x20float\x20SH_INV_PI\x20=\x200.31830988618;','out\x20vec4\x20o_FragColor;','vec3\x20lerp(vec3\x20a,\x20vec3\x20b,\x20float\x20w)','{','\x20\x20return\x20a\x20+\x20vec3(w*(b-a));','}','vec3\x20fresnelSchlickRoughness(float\x20cosTheta,\x20vec3\x20F0,\x20float\x20roughness)','{','\x09return\x20F0\x20+\x20(max(vec3(1.0\x20-\x20roughness),\x20F0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelSchlick(float\x20cosTheta,\x20vec3\x20F0)','{','\x09\x20return\x20F0\x20+\x20(vec3(1.0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelLerp\x20(float\x20cosA,\x20vec3\x20F0,\x20vec3\x20F90)','{','\x20\x20\x20\x20float\x20t\x20=\x20\x20pow(1.0\x20-\x20cosA,\x205.0);','\x20\x20\x20\x20return\x20lerp\x20(F0,\x20F90,\x20t);','}','float\x20GeometrySchlickGGX(float\x20NdotV,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20r\x20=\x20(roughness\x20+\x201.0);','\x20\x20\x20\x20float\x20k\x20=\x20(r*r)\x20/\x208.0;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20NdotV;','\x20\x20\x20\x20float\x20denom\x20=\x20NdotV\x20*\x20(1.0\x20-\x20k)\x20+\x20k;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20GeometrySmith(vec3\x20N,\x20vec3\x20V,\x20vec3\x20L,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20NdotV\x20=\x20max(dot(N,\x20V),\x200.0);','\x20\x20\x20\x20float\x20NdotL\x20=\x20max(dot(N,\x20L),\x200.0);','\x20\x20\x20\x20float\x20ggx2\x20=\x20GeometrySchlickGGX(NdotV,\x20roughness);','\x20\x20\x20\x20float\x20ggx1\x20=\x20GeometrySchlickGGX(NdotL,\x20roughness);','\x20\x20\x20\x20return\x20ggx1\x20*\x20ggx2;','}','float\x20DistributionGGX(vec3\x20N,\x20vec3\x20H,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20a\x20=\x20roughness*roughness;','\x20\x20\x20\x20float\x20a2\x20=\x20a*a;','\x20\x20\x20\x20float\x20NdotH\x20=\x20max(dot(N,\x20H),\x200.0);','\x20\x20\x20\x20float\x20NdotH2\x20=\x20NdotH*NdotH;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20a2;','\x20\x20\x20\x20float\x20denom\x20=\x20(NdotH2\x20*\x20(a2\x20-\x201.0)\x20+\x201.0);','\x20\x20\x20\x20denom\x20=\x20SH_PI\x20*\x20denom\x20*\x20denom;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20DisneyDiffuse(float\x20NdV,\x20float\x20NdL,\x20float\x20LdH,\x20float\x20roughness)','{','\x09float\x20fd90\x20=\x200.5\x20+\x202.0\x20*\x20LdH\x20*\x20LdH\x20*\x20roughness;','\x09float\x20lightScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdL,\x205.0));','\x09float\x20viewScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdV,\x205.0));','\x09return\x20lightScatter\x20*\x20viewScatter;','}','float\x20GGXTerm(float\x20NdH,\x20float\x20roughness)','{','\x09float\x20a2\x20=\x20roughness\x20*\x20roughness\x20*\x20roughness\x20*\x20roughness;','\x09float\x20d\x20=\x20(NdH\x20*\x20a2\x20-\x20NdH)\x20*\x20NdH\x20+\x201.0;','\x09return\x20SH_INV_PI\x20*\x20a2\x20/\x20(d\x20*\x20d\x20+\x200.00000001);','}','float\x20SmithJointGGXVisibilityTerm(float\x20NdotL,\x20float\x20NdotV,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness*roughness;','\x09float\x20lambdaV\x20=\x20NdotL\x20*\x20(NdotV\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09float\x20lambdaL\x20=\x20NdotV\x20*\x20(NdotL\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09return\x200.5\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x200.0001);','}','#ifdef\x20SHADING_SHADOW','float\x20ShadowVSM()\x20{','\x20\x20\x20vec3\x20projectedTexcoord\x20=\x20vShadowCoord.xyz\x20/\x20vShadowCoord.w;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20float\x20currentDepth\x20=\x20projectedTexcoord.z;','\x20\x20\x20bool\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','\x20\x20\x20vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture,\x20projectedTexcoord.xy);','\x20\x20\x20float\x20prevViewPosDepth\x20=\x20prevViewPos.z\x20/\x20prevViewPos.w;','\x09prevViewPosDepth\x20=\x20prevViewPosDepth\x20*\x200.5\x20+\x200.5;','\x20\x20\x20float\x20shadowLight\x20=\x20(inRange\x20&&\x20prevViewPosDepth\x20<=\x20currentDepth\x20+\x20uBias)\x20?\x20u_ShadowRatio\x20:\x201.0;','\x20\x20\x20return\x20shadowLight;','}','#endif','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09float\x20shini\x20=\x20fShininess;\x20','\x09float\x20rough\x20=\x20u_Roughness;','\x09float\x20metal\x20=\x20u_Metallic;','\x20\x20\x20if(useTextureRoughness\x20==\x201)\x20{','\x09\x20\x20\x20rough\x20=\x20texture(u_texRoughness,\x20vUV.xy).r;','\x20\x20\x20}','\x20\x20\x20if(useTextureMetalness\x20==\x201)\x20{','\x09\x20\x20\x20\x20metal\x20=\x20texture(u_texMetalness,\x20vUV.xy).g;','\x20\x20\x20}','\x09float\x20shininess\x20=\x20mix(0.0,\x201.0,\x20shini);','\x09float\x20roughness\x20=\x20mix(0.0,\x201.0,\x20rough);','\x09float\x20metallic\x20=\x20mix(0.0,\x201.0,\x20metal);','\x09float\x20smoothness\x20=\x201.0\x20-\x20roughness;','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09vec3\x20baseColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20baseColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x0a#ifdef\x20SHADING_HDR','\x09baseColor\x20=\x20pow(baseColor,\x20vec3(2.2));','\x0a#endif','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20tangentNormal\x20=\x20normalize((texture(u_texNormal,\x20vUV.xy).rgb\x20*\x202.0)\x20-\x201.0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q1\x20\x20=\x20dFdx(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q2\x20\x20=\x20dFdy(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st1\x20=\x20dFdx(vUV);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st2\x20=\x20dFdy(vUV);','\x20\x20\x20\x20\x20\x20\x20vec3\x20N\x20\x20\x20=\x20normal;','\x20\x20\x20\x20\x20\x20\x20vec3\x20T\x20\x20=\x20normalize(Q1*st2.t\x20-\x20Q2*st1.t);','\x20\x20\x20\x20\x20\x20\x20vec3\x20B\x20\x20=\x20-normalize(cross(N,\x20T));','\x20\x20\x20\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(T,\x20B,\x20N);','\x20\x20\x20\x20\x20\x20\x20normal\x20=\x20normalize(TBN\x20*\x20tangentNormal);','\x20\x20\x20}','\x20\x20\x20vec3\x20V\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09vec3\x20N\x20=\x20normalize(normal);','\x20\x20\x20vec3\x20R\x20=\x20reflect(-V,\x20N);\x20','\x09vec3\x20F0\x20=\x20vec3(shininess);','\x09F0\x20=\x20F0\x20*\x200.08;','\x09F0\x20=\x20F0\x20*\x20(1.0\x20-\x20metallic)\x20+\x20baseColor.rgb\x20*\x20metallic;','\x09float\x20NdV\x20=\x20max(dot(N,\x20V),\x200.0);','\x09vec3\x20diffuse\x20=\x20baseColor.rgb;','\x09vec3\x20Lo\x20=\x20vec3(0.0);','\x20\x20\x20for(int\x20i\x20=\x200\x20;\x20i\x20<\x20uLightNum\x20;\x20++i)','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20length(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20attenuation\x20=\x201.0\x20/\x20(distance\x20*\x20distance);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20radiance\x20=\x20vLightColor[i]\x20*\x20attenuation\x20*\x20100.0\x20*\x20100.0;','\x20\x20\x20\x20\x20\x20\x20\x20float\x20NDF\x20=\x20DistributionGGX(N,\x20H,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20G\x20\x20\x20=\x20GeometrySmith(N,\x20V,\x20L,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20F\x20\x20\x20\x20=\x20fresnelSchlick(HdV,\x20F0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20numerator\x20\x20\x20\x20=\x20NDF\x20*\x20G\x20*\x20F;','\x20\x20\x20\x20\x20\x20\x20float\x20denominator\x20=\x204.0\x20*\x20NdV\x20*\x20NdL\x20+\x200.0001;','\x20\x20\x20\x20\x20\x20\x20vec3\x20specular\x20=\x20numerator\x20/\x20denominator;','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20kS\x20=\x20F;','\x20\x20\x20\x20\x20\x20\x20vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20(kD\x20*\x20diffuse\x20/\x20SH_PI\x20+\x20specular)\x20*\x20radiance\x20*\x20NdL;','\x09}','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09\x09vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x09\x09float\x20specColorAlpha\x20=\x201.0;','\x09\x09float\x20oneMinusReflectivity\x20=\x20specColorAlpha\x20-\x20specColorAlpha\x20*\x20metallic;','\x09\x09vec3\x20diffColor\x20=\x20diffuse\x20*\x20oneMinusReflectivity;','\x09\x09float\x20diffuseTerm\x20=\x20DisneyDiffuse(NdV,\x20NdL,\x20LdH,\x20roughness)\x20*\x20NdL;','\x09\x09vec3\x20F\x20=\x20fresnelSchlick(HdV,\x20F0);','\x09\x09vec3\x20kS\x20=\x20F;','\x09\x09vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x09\x09float\x20V\x20=\x20SmithJointGGXVisibilityTerm(NdL,\x20NdV,\x20roughness);','\x09\x09float\x20D\x20=\x20GGXTerm(NdH,\x20roughness);','\x09\x09float\x20specularTerm\x20=\x20V\x20*\x20D\x20*\x20SH_PI;','\x09\x09specularTerm\x20=\x20max(0.0,\x20specularTerm\x20*\x20NdL);','\x09\x09float\x20surfaceReduction\x20=\x201.0\x20/\x20(roughness*roughness*roughness*roughness\x20+\x201.0);','\x09\x09if(F0.x\x20+\x20F0.y\x20+\x20F0.z\x20<=\x200.0)','\x09\x09\x09specularTerm\x20*=\x200.0;','\x09\x09float\x20grazingTerm\x20=\x20smoothness\x20*\x20smoothness\x20+\x20(1.0\x20-\x20oneMinusReflectivity);','\x09\x09grazingTerm\x20=\x20max(min(grazingTerm,\x201.0),\x200.0);','\x09\x09Lo\x20+=\x20kD\x20*\x20diffColor\x20*\x20vDirectionalLightColor\x20*\x20NdL;','\x09}','\x09float\x20AO\x20=\x201.0;','\x20\x20\x20if(useTextureAO\x20==\x201){','\x09\x20\x20\x20\x20AO\x20=\x20texture(u_texAO,\x20vUV.xy).r;','\x20\x20\x20}','\x09vec3\x20ambient\x20=\x20vAmbientColor;','\x20\x20\x20vec3\x20specular\x20=\x20vec3(0.0);','\x09vec3\x20kSA\x20=\x20fresnelSchlickRoughness(NdV,\x20F0,\x20roughness);','\x09vec3\x20kDA\x20=\x20vec3(1.0)\x20-\x20kSA;','\x09kDA\x20*=\x201.0\x20-\x20metallic;','#ifdef\x20SHADING_ENVIRONMENT','\x20\x20\x20vec3\x20irradiance\x20=\x20texture(u_texIrradianceMap,\x20N).rgb;','\x20\x20\x20diffuse\x20=\x20irradiance\x20*\x20diffuse;','\x20\x20\x20const\x20float\x20MAX_REFLECTION_LOD\x20=\x204.0;','\x20\x20\x20vec3\x20prefilteredColor\x20=\x20textureLod(u_texPrefilterMap,\x20R,\x20\x20roughness\x20*\x20MAX_REFLECTION_LOD).rgb;','\x20\x20\x20vec2\x20brdf\x20=\x20texture(u_texbrdfLUT,\x20vec2(NdV,\x20roughness)).xy;','\x20\x20\x20specular\x20=\x20prefilteredColor\x20*\x20(kSA\x20*\x20brdf.x\x20+\x20brdf.y);','#endif','\x09ambient\x20=\x20(kDA\x20*\x20ambient\x20*\x20diffuse\x20+\x20specular)\x20*\x20AO;','\x09vec3\x20fragColor\x20=\x20ambient','\x09+\x20Lo;','#ifdef\x20SHADING_SHADOW','\x20\x20\x20float\x20fShadow\x20=\x20ShadowVSM();','\x20\x20\x20fragColor\x20=\x20fragColor\x20*\x20fShadow;','#endif','#ifdef\x20SHADING_HDR','\x20\x20\x20fragColor\x20=\x20fragColor\x20/\x204.0;','\x20\x20\x20fragColor\x20=\x20pow(fragColor,\x20vec3(1.0\x20/\x202.2));\x20','#endif','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(fragColor.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20fragColor\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x20\x20\x20if(useTextureAlpha\x20==\x201)\x20{','\x20\x20\x20\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20texture(u_texAlpha,\x20vUV.xy).r;','\x20\x20\x20}','\x09o_FragColor\x20=\x20vec4(fragColor,\x20baseAlpha);','\x20\x20\x20if(o_FragColor.a\x20<\x200.1)','\x20\x20\x20\x20discard;','}']['join']('\x0a')}},this['ShadingLanguage_DemoType_7']={'PBR_v2':{'vertex':['in\x20vec3\x20a_position;','in\x20vec3\x20a_normal;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','out\x20vec2\x20vUV;','out\x20vec3\x20vNormalInterp;','out\x20vec3\x20vVertPos;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','in\x20vec3\x20a_matrixIdx;','#endif','#ifdef\x20SHADING_SHADOW','uniform\x20mat4\x20u_MVPShadowMatrix;','out\x20vec4\x20vShadowCoord;','#endif','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','\x20\x20\x20vUV.y\x20=\x201.0\x20-\x20vUV.y;','\x20\x20\x20#ifdef\x20SHADING_SHADOW','\x20\x20\x20vec4\x20shadowPosition\x20=\x20u_MVPShadowMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord\x20=\x20shadowPosition;','\x20\x20\x20#endif','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20float\x20ubPerspectiveView;','\x0a#ifdef\x20SHADING_SHADOW','uniform\x20mat4\x20u_MVPShadowMatrix;','uniform\x20sampler2D\x20uShadowPositionTexture;','uniform\x20mat4\x20u_ProjectionShadowMatrix;','uniform\x20float\x20uBias;','in\x20vec4\x20vShadowCoord;','\x0a#endif','\x0a#ifdef\x20SHADING_FOG','uniform\x20vec4\x20u_fogColor;','uniform\x20vec3\x20u_fogCenter;','uniform\x20float\x20u_fogNear;','uniform\x20float\x20u_fogFar;','\x0a#endif','\x0a#ifdef\x20SHADING_UV_ANIMATION','uniform\x20int\x20useUVAnimation;','uniform\x20vec3\x20u_UV_Direction;','uniform\x20float\x20u_UVTime;','\x0a#endif','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20float\x20fShininess;','uniform\x20float\x20u_Roughness;','uniform\x20float\x20u_Metallic;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20int\x20useBump;','uniform\x20sampler2D\x20u_texBump;','uniform\x20int\x20useTextureRoughness;','uniform\x20sampler2D\x20u_texRoughness;','uniform\x20int\x20useTextureMetalness;','uniform\x20sampler2D\x20u_texMetalness;','uniform\x20int\x20useTextureAO;','uniform\x20sampler2D\x20u_texAO;','uniform\x20int\x20useTextureAlpha;','uniform\x20sampler2D\x20u_texAlpha;','uniform\x20int\x20useTextureSpecluar;','\x0a#ifdef\x20SHADING_ENVIRONMENT','uniform\x20samplerCube\x20u_texIrradianceMap;','uniform\x20samplerCube\x20u_texPrefilterMap;','uniform\x20sampler2D\x20\x20u_texbrdfLUT;','\x0a#endif','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','uniform\x20int\x20uLightNum;','uniform\x20vec3\x20vLightPos[4];','uniform\x20vec3\x20vLightColor[4];','in\x20vec2\x20vUV;','in\x20vec3\x20vNormalInterp;','in\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseGraySacle;','const\x20float\x20SH_PI\x20=\x203.14159265359;','const\x20float\x20SH_INV_PI\x20=\x200.31830988618;','out\x20vec4\x20o_FragColor;','vec3\x20lerp(vec3\x20a,\x20vec3\x20b,\x20float\x20w)','{','\x20\x20return\x20a\x20+\x20vec3(w*(b-a));','}','vec3\x20fresnelSchlickRoughness(float\x20cosTheta,\x20vec3\x20F0,\x20float\x20roughness)','{','\x09return\x20F0\x20+\x20(max(vec3(1.0\x20-\x20roughness),\x20F0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelSchlick(float\x20cosTheta,\x20vec3\x20F0)','{','\x09\x20return\x20F0\x20+\x20(vec3(1.0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelLerp\x20(float\x20cosA,\x20vec3\x20F0,\x20vec3\x20F90)','{','\x20\x20\x20\x20float\x20t\x20=\x20\x20pow(1.0\x20-\x20cosA,\x205.0);','\x20\x20\x20\x20return\x20lerp\x20(F0,\x20F90,\x20t);','}','float\x20GeometrySchlickGGX(float\x20NdotV,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20r\x20=\x20(roughness\x20+\x201.0);','\x20\x20\x20\x20float\x20k\x20=\x20(r*r)\x20/\x208.0;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20NdotV;','\x20\x20\x20\x20float\x20denom\x20=\x20NdotV\x20*\x20(1.0\x20-\x20k)\x20+\x20k;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20GeometrySmith(vec3\x20N,\x20vec3\x20V,\x20vec3\x20L,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20NdotV\x20=\x20max(dot(N,\x20V),\x200.0);','\x20\x20\x20\x20float\x20NdotL\x20=\x20max(dot(N,\x20L),\x200.0);','\x20\x20\x20\x20float\x20ggx2\x20=\x20GeometrySchlickGGX(NdotV,\x20roughness);','\x20\x20\x20\x20float\x20ggx1\x20=\x20GeometrySchlickGGX(NdotL,\x20roughness);','\x20\x20\x20\x20return\x20ggx1\x20*\x20ggx2;','}','float\x20DistributionGGX(vec3\x20N,\x20vec3\x20H,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20a\x20=\x20roughness*roughness;','\x20\x20\x20\x20float\x20a2\x20=\x20a*a;','\x20\x20\x20\x20float\x20NdotH\x20=\x20max(dot(N,\x20H),\x200.0);','\x20\x20\x20\x20float\x20NdotH2\x20=\x20NdotH*NdotH;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20a2;','\x20\x20\x20\x20float\x20denom\x20=\x20(NdotH2\x20*\x20(a2\x20-\x201.0)\x20+\x201.0);','\x20\x20\x20\x20denom\x20=\x20SH_PI\x20*\x20denom\x20*\x20denom;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20DisneyDiffuse(float\x20NdV,\x20float\x20NdL,\x20float\x20LdH,\x20float\x20roughness)','{','\x09float\x20fd90\x20=\x200.5\x20+\x202.0\x20*\x20LdH\x20*\x20LdH\x20*\x20roughness;','\x09float\x20lightScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdL,\x205.0));','\x09float\x20viewScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdV,\x205.0));','\x09return\x20lightScatter\x20*\x20viewScatter;','}','float\x20GGXTerm(float\x20NdH,\x20float\x20roughness)','{','\x09float\x20a2\x20=\x20roughness\x20*\x20roughness\x20*\x20roughness\x20*\x20roughness;','\x09float\x20d\x20=\x20(NdH\x20*\x20a2\x20-\x20NdH)\x20*\x20NdH\x20+\x201.0;','\x09return\x20SH_INV_PI\x20*\x20a2\x20/\x20(d\x20*\x20d\x20+\x200.00000001);','}','float\x20SmithJointGGXVisibilityTerm(float\x20NdotL,\x20float\x20NdotV,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness*roughness;','\x09float\x20lambdaV\x20=\x20NdotL\x20*\x20(NdotV\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09float\x20lambdaL\x20=\x20NdotV\x20*\x20(NdotL\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09return\x200.5\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x200.0001);','}','#ifdef\x20SHADING_SHADOW','float\x20ShadowVSM()\x20{','\x20\x20\x20vec3\x20projectedTexcoord\x20=\x20vShadowCoord.xyz\x20/\x20vShadowCoord.w;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20float\x20currentDepth\x20=\x20projectedTexcoord.z;','\x20\x20\x20bool\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','\x20\x20\x20vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture,\x20projectedTexcoord.xy);','\x20\x20\x20prevViewPos\x20=\x20u_ProjectionShadowMatrix\x20*\x20prevViewPos;','\x20\x20\x20float\x20prevViewPosDepth\x20=\x20prevViewPos.z\x20/\x20prevViewPos.w;','\x09prevViewPosDepth\x20=\x20prevViewPosDepth\x20*\x200.5\x20+\x200.5;','\x20\x20\x20float\x20shadowLight\x20=\x20(inRange\x20&&\x20prevViewPosDepth\x20<=\x20currentDepth\x20+\x20uBias)\x20?\x200.4\x20:\x201.0;','\x20\x20\x20return\x20shadowLight;','}','vec3\x20ShadowVSMColor()\x20{','\x20\x20\x20vec3\x20projectedTexcoord\x20=\x20vShadowCoord.xyz\x20/\x20vShadowCoord.w;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20float\x20currentDepth\x20=\x20projectedTexcoord.z;','\x20\x20\x20bool\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','\x20\x20\x20vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture,\x20projectedTexcoord.xy);','\x20\x20\x20return\x20vec3(prevViewPos.rgb);','}','#endif','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x20\x20\x20vec2\x20uv\x20=\x20vUV;','\x0a#ifdef\x20SHADING_UV_ANIMATION','\x20\x20\x20if(useUVAnimation\x20==\x201)\x20{','\x09\x20\x20\x20uv\x20=\x20vUV\x20+\x20(u_UV_Direction.xy\x20*\x20u_UVTime);','\x20\x20\x20}','\x0a#endif','\x09float\x20shini\x20=\x20fShininess;\x20','\x09float\x20rough\x20=\x20u_Roughness;','\x09float\x20metal\x20=\x20u_Metallic;','\x20\x20\x20if(useTextureRoughness\x20==\x201)\x20{','\x09\x20\x20\x20rough\x20=\x20texture(u_texRoughness,\x20uv.xy).r;','\x20\x20\x20}','\x20\x20\x20if(useTextureMetalness\x20==\x201)\x20{','\x09\x20\x20\x20\x20metal\x20=\x20texture(u_texMetalness,\x20uv.xy).g;','\x20\x20\x20}','\x09float\x20shininess\x20=\x20mix(0.0,\x201.0,\x20shini);','\x09float\x20roughness\x20=\x20mix(0.0,\x201.0,\x20rough);','\x09float\x20metallic\x20=\x20mix(0.0,\x201.0,\x20metal);','\x09float\x20smoothness\x20=\x201.0\x20-\x20roughness;','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09vec3\x20baseColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture(u_Texture,\x20uv.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20baseColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x0a#ifdef\x20SHADING_HDR','\x09baseColor\x20=\x20pow(baseColor,\x20vec3(2.2));','\x0a#endif','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20tangentNormal\x20=\x20normalize((texture(u_texNormal,\x20uv.xy).rgb\x20*\x202.0)\x20-\x201.0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q1\x20\x20=\x20dFdx(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q2\x20\x20=\x20dFdy(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st1\x20=\x20dFdx(uv);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st2\x20=\x20dFdy(uv);','\x20\x20\x20\x20\x20\x20\x20vec3\x20N\x20\x20\x20=\x20normal;','\x20\x20\x20\x20\x20\x20\x20vec3\x20T\x20\x20=\x20normalize(Q1*st2.t\x20-\x20Q2*st1.t);','\x20\x20\x20\x20\x20\x20\x20vec3\x20B\x20\x20=\x20-normalize(cross(N,\x20T));','\x20\x20\x20\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(T,\x20B,\x20N);','\x20\x20\x20\x20\x20\x20\x20normal\x20=\x20normalize(TBN\x20*\x20tangentNormal);','\x20\x20\x20}','\x20\x20\x20vec3\x20V\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09vec3\x20N\x20=\x20normalize(normal);','\x20\x20\x20vec3\x20R\x20=\x20reflect(-V,\x20N);\x20','\x09vec3\x20F0\x20=\x20vec3(shininess);','\x09F0\x20=\x20F0\x20*\x200.08;','\x09F0\x20=\x20F0\x20*\x20(1.0\x20-\x20metallic)\x20+\x20baseColor.rgb\x20*\x20metallic;','\x09float\x20NdV\x20=\x20max(dot(N,\x20V),\x200.0);','\x09vec3\x20diffuse\x20=\x20baseColor.rgb;','\x09vec3\x20Lo\x20=\x20vec3(0.0);','\x20\x20\x20for(int\x20i\x20=\x200\x20;\x20i\x20<\x20uLightNum\x20;\x20++i)','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20length(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20attenuation\x20=\x201.0\x20/\x20(distance\x20*\x20distance);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20radiance\x20=\x20vLightColor[i]\x20*\x20attenuation\x20*\x20100.0\x20*\x20100.0;','\x20\x20\x20\x20\x20\x20\x20\x20float\x20NDF\x20=\x20DistributionGGX(N,\x20H,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20G\x20\x20\x20=\x20GeometrySmith(N,\x20V,\x20L,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20F\x20\x20\x20\x20=\x20fresnelSchlick(HdV,\x20F0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20numerator\x20\x20\x20\x20=\x20NDF\x20*\x20G\x20*\x20F;','\x20\x20\x20\x20\x20\x20\x20float\x20denominator\x20=\x204.0\x20*\x20NdV\x20*\x20NdL\x20+\x200.0001;','\x20\x20\x20\x20\x20\x20\x20vec3\x20specular\x20=\x20numerator\x20/\x20denominator;','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20kS\x20=\x20F;','\x20\x20\x20\x20\x20\x20\x20vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20(kD\x20*\x20diffuse\x20/\x20SH_PI\x20+\x20specular)\x20*\x20radiance\x20*\x20NdL;','\x09}','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09\x09vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x09\x09float\x20specColorAlpha\x20=\x201.0;','\x09\x09float\x20oneMinusReflectivity\x20=\x20specColorAlpha\x20-\x20specColorAlpha\x20*\x20metallic;','\x09\x09vec3\x20diffColor\x20=\x20diffuse\x20*\x20oneMinusReflectivity;','\x09\x09float\x20diffuseTerm\x20=\x20DisneyDiffuse(NdV,\x20NdL,\x20LdH,\x20roughness)\x20*\x20NdL;','\x09\x09vec3\x20F\x20=\x20fresnelSchlick(HdV,\x20F0);','\x09\x09vec3\x20kS\x20=\x20F;','\x09\x09vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x09\x09float\x20V\x20=\x20SmithJointGGXVisibilityTerm(NdL,\x20NdV,\x20roughness);','\x09\x09float\x20D\x20=\x20GGXTerm(NdH,\x20roughness);','\x09\x09float\x20specularTerm\x20=\x20V\x20*\x20D\x20*\x20SH_PI;','\x09\x09specularTerm\x20=\x20max(0.0,\x20specularTerm\x20*\x20NdL);','\x09\x09float\x20surfaceReduction\x20=\x201.0\x20/\x20(roughness*roughness*roughness*roughness\x20+\x201.0);','\x09\x09if(F0.x\x20+\x20F0.y\x20+\x20F0.z\x20<=\x200.0)','\x09\x09\x09specularTerm\x20*=\x200.0;','\x09\x09float\x20grazingTerm\x20=\x20smoothness\x20*\x20smoothness\x20+\x20(1.0\x20-\x20oneMinusReflectivity);','\x09\x09grazingTerm\x20=\x20max(min(grazingTerm,\x201.0),\x200.0);','\x09\x09Lo\x20+=\x20kD\x20*\x20diffColor\x20*\x20vDirectionalLightColor\x20*\x20NdL;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20vDirectionalLightColor\x20*\x20specularTerm\x20*\x20fresnelSchlick(LdH,\x20F0);','\x09}','\x09float\x20AO\x20=\x201.0;','\x20\x20\x20if(useTextureAO\x20==\x201){','\x09\x20\x20\x20\x20AO\x20=\x20texture(u_texAO,\x20uv.xy).r;','\x20\x20\x20}','\x09vec3\x20ambient\x20=\x20vAmbientColor;','\x20\x20\x20vec3\x20specular\x20=\x20vec3(0.0);','\x09vec3\x20kSA\x20=\x20fresnelSchlickRoughness(NdV,\x20F0,\x20roughness);','\x09vec3\x20kDA\x20=\x20vec3(1.0)\x20-\x20kSA;','\x09kDA\x20*=\x201.0\x20-\x20metallic;','\x0a#ifdef\x20SHADING_ENVIRONMENT','\x20\x20\x20vec3\x20irradiance\x20=\x20texture(u_texIrradianceMap,\x20N).rgb;','\x20\x20\x20diffuse\x20=\x20irradiance\x20*\x20diffuse;','\x20\x20\x20const\x20float\x20MAX_REFLECTION_LOD\x20=\x204.0;','\x20\x20\x20vec3\x20prefilteredColor\x20=\x20textureLod(u_texPrefilterMap,\x20R,\x20\x20roughness\x20*\x20MAX_REFLECTION_LOD).rgb;','\x20\x20\x20vec2\x20brdf\x20=\x20texture(u_texbrdfLUT,\x20vec2(NdV,\x20roughness)).xy;','\x20\x20\x20specular\x20=\x20prefilteredColor\x20*\x20(kSA\x20*\x20brdf.x\x20+\x20brdf.y);','\x0a#endif','\x09ambient\x20=\x20(kDA\x20*\x20ambient\x20*\x20diffuse\x20+\x20specular)\x20*\x20AO;','\x09vec3\x20fragColor\x20=\x20ambient','\x09+\x20Lo;','\x0a#ifdef\x20SHADING_SHADOW','\x20\x20\x20float\x20fShadow\x20=\x20ShadowVSM();','\x20\x20\x20fragColor\x20=\x20fragColor\x20*\x20fShadow;','\x0a#endif','\x0a#ifdef\x20SHADING_HDR','\x20\x20\x20fragColor\x20=\x20fragColor\x20/\x20(fragColor\x20+\x20vec3(1.0));','\x20\x20\x20fragColor\x20=\x20pow(fragColor,\x20vec3(1.0\x20/\x202.2));\x20','\x0a#endif','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(fragColor.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20fragColor\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x20\x20\x20if(useTextureAlpha\x20==\x201)\x20{','\x20\x20\x20\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20texture(u_texAlpha,\x20uv.xy).r;','\x20\x20\x20}','vec4\x20glslColor\x20=\x20vec4(fragColor,\x20baseAlpha);','\x0a#ifdef\x20SHADING_FOG','float\x20fogAmount\x20=\x201.0;','float\x20fogDepth\x20=\x20length(u_fogCenter\x20-\x20vVertPos);','fogAmount\x20=\x20smoothstep(u_fogNear,\x20u_fogFar,\x20fogDepth);','glslColor\x20=\x20glslColor\x20*\x20(1.0\x20-\x20fogAmount)\x20+\x20u_fogColor\x20*\x20fogAmount;','\x0a#endif','\x09o_FragColor\x20=\x20glslColor;','\x20\x20\x20if(o_FragColor.a\x20<\x200.003)','\x20\x20\x20\x20discard;','}']['join']('\x0a')}},this['ShadingLanguage_Util']={'RangeMap':{'vertex':[]['join']('\x0a'),'fragment':['float\x20RangeMapFloat(\x20float\x20value,\x20float\x20inMin,\x20float\x20inMax,\x20float\x20outMin,\x20float\x20outMax\x20)','{','\x20\x20\x20\x20float\x20mappedValue\x20=\x20value;','\x20\x20\x20\x20if\x20(\x20(\x20inMax\x20-\x20inMin\x20)\x20==\x200.0f\x20)','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20mappedValue\x20=\x20(\x20outMax\x20+\x20outMin\x20)\x20*\x200.5f;','\x20\x20\x20\x20}','\x20\x20\x20\x20else','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20mappedValue\x20=\x20outMin\x20+\x20(\x20(\x20(\x20mappedValue\x20-\x20inMin\x20)\x20/\x20(\x20inMax\x20-\x20inMin\x20)\x20)\x20*\x20(\x20outMax\x20-\x20outMin\x20)\x20);','\x20\x20\x20\x20}','\x20\x20\x20\x20return\x20mappedValue;','}','vec2\x20RangeMapVec2(\x20vec2\x20value,\x20vec2\x20inMin,\x20vec2\x20inMax,\x20vec2\x20outMin,\x20vec2\x20outMax\x20)','{','\x20\x20\x20\x20vec2\x20mappedValue\x20=\x20value;','\x20\x20\x20\x20if\x20(\x20(\x20inMax\x20-\x20inMin\x20)\x20==\x20vec2(\x200.0f\x20)\x20)','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20mappedValue\x20=\x20(\x20outMax\x20+\x20outMin\x20)\x20*\x200.5f;','\x20\x20\x20\x20}','\x20\x20\x20\x20else','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20mappedValue\x20=\x20outMin\x20+\x20(\x20(\x20(\x20mappedValue\x20-\x20inMin\x20)\x20/\x20(\x20inMax\x20-\x20inMin\x20)\x20)\x20*\x20(\x20outMax\x20-\x20outMin\x20)\x20);','\x20\x20\x20\x20}','\x20\x20\x20\x20return\x20mappedValue;','}','vec3\x20RangeMapVec3(\x20vec3\x20value,\x20vec3\x20inMin,\x20vec3\x20inMax,\x20vec3\x20outMin,\x20vec3\x20outMax\x20)','{','\x20\x20\x20\x20vec3\x20mappedValue\x20=\x20value;','\x20\x20\x20\x20if\x20(\x20(\x20inMax\x20-\x20inMin\x20)\x20==\x20vec3(\x200.0f\x20)\x20)','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20mappedValue\x20=\x20(\x20outMax\x20+\x20outMin\x20)\x20*\x200.5f;','\x20\x20\x20\x20}','\x20\x20\x20\x20else','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20mappedValue\x20=\x20outMin\x20+\x20(\x20(\x20(\x20mappedValue\x20-\x20inMin\x20)\x20/\x20(\x20inMax\x20-\x20inMin\x20)\x20)\x20*\x20(\x20outMax\x20-\x20outMin\x20)\x20);','\x20\x20\x20\x20}','\x20\x20\x20\x20return\x20mappedValue;','}','vec4\x20RangeMapVec4(\x20vec4\x20value,\x20vec4\x20inMin,\x20vec4\x20inMax,\x20vec4\x20outMin,\x20vec4\x20outMax\x20)','{','\x20\x20\x20\x20vec4\x20mappedValue\x20=\x20value;','\x20\x20\x20\x20if\x20(\x20(\x20inMax\x20-\x20inMin\x20)\x20==\x20vec4(\x200.0f\x20)\x20)','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20mappedValue\x20=\x20(\x20outMax\x20+\x20outMin\x20)\x20*\x200.5f;','\x20\x20\x20\x20}','\x20\x20\x20\x20else','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20mappedValue\x20=\x20outMin\x20+\x20(\x20(\x20(\x20mappedValue\x20-\x20inMin\x20)\x20/\x20(\x20inMax\x20-\x20inMin\x20)\x20)\x20*\x20(\x20outMax\x20-\x20outMin\x20)\x20);','\x20\x20\x20\x20}','\x20\x20\x20\x20return\x20mappedValue;','}']['join']('\x0a')}};function c(){if(a['useWebGL2']){b['ShadingLanguage']=b['ShadingLanguage_v2'];if(a['DemoType']===0x6)b['ShadingLanguage']['PBR_v2']=b['ShadingLanguage_DemoType_6']['PBR_v2'];else a['DemoType']===0x7&&(b['ShadingLanguage']['PBR_v2']=b['ShadingLanguage_DemoType_7']['PBR_v2']);}b['ShadingLanguage']===undefined&&(b['ShadingLanguage']=b['ShadingLanguage_v1']);}c();};export default ShaderGLSL;