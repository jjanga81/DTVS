class RenderWGL{constructor(a,b){let c=this,d=a['gl']['TRIANGLES'],e=undefined,f=!![],g=![];this['listMultiviewObjectManager']=[[0x0]];let h=new Map(),i=function(r){let s={'id':r,'positionArray':[],'colorArray':[],'normalArray':[],'uvArray':[],'animationArray':[],'positionBuffer':undefined,'normalBuffer':undefined,'uvBuffer':undefined,'colorBuffer':undefined,'indexBuffer':undefined,'drawNum':0x0};return s;},j=new Map(),k=-0x1,l='';function m(){let r={'id':'','listProcess':[],'query':undefined,'queryInProgress':![],'occluded':![],'renderEnableOcclusion':![]};return r;};function n(){let r={'start':0x0,'length':0x0,'action':null,'processKind':0x0};return r;};o();function o(){j['clear'](),h['clear']();}function p(r,s){return a['Util']['EqualAction'](r,s);}this['SetUpdateClipping']=function(r){f=r;},this['GetUpdateClipping']=function(){return f;},this['SetUpdateLightRotate']=function(r){g=r;},this['GetUpdateLightRotate']=function(){return g;},this['InitRenderPipeline']=function(r,s){k=-0x1;let t=j['get'](r['uuid']);if(r['sInd']!==undefined)r['sInd']=new Set();if(!r['flag']['updateProcess'])return t;let u=undefined;t!==undefined&&(u=t['query']);{t=m(),t['id']=r['uuid'],j['set'](r['uuid'],t);if(a['useWebGL2']){if(u===undefined&&a['Renderer']['enableOcclusion'])t['query']=a['gl']['createQuery']();else t['query']=u;}}let v=0x0,w=0x0,x=a['Data']['ActionItem']();if(r['attribs']['a_index']!==null){let y=-0x1,z=[];a['Renderer']['GetEnableColorMap']()&&s&&(a['ColorMap']['SetCurrentObject'](r),a['ColorMap']['SetCurrentColorMapInfo'](r['id_file']),a['ColorMap']['CheckColorMapArray'](r['mapId']),a['ColorMap']['triCountList']=[]);for(let A=0x0;A<r['tag']['length'];A++){let B=r['tag'][A];a['Renderer']['GetEnableColorMap']()&&s&&(a['ColorMap']['SetCurrentBody'](B),a['ColorMap']['triCountList']['push'](B['m_nTris']));{}let C=a['Data']['ShapeAction']['GetAction'](r['id_file'],B['origin_id']);if(C===undefined)continue;if(v>0x0){if(p(C,x))v+=B['m_nTris'];else{if(v>0x0){let D=n();D['start']=w,D['length']=v,D['processKind']=0x0,D['action']=a['Data']['ActionItem'](),a['Data']['ShapeAction']['CopyAction'](D['action'],x),t['listProcess']['push'](D),z['push'](y),v=0x0;}}}v===0x0&&C['visible']&&!C['drawViewDistanceBBox']&&(w=B['m_triIdx'],v=B['m_nTris'],y=B['material'],a['Data']['ShapeAction']['CopyAction'](x,C));if(a['Renderer']['GetEnableColorMap']()&&s){if(!C['visible']){let E=new b['Color']();E['set'](0x0,0x0,0x0,0x0),a['ColorMap']['SetColorMapArray_Body'](E);}}if(v>0x0&&r['tag']['length']-0x1===A){let F=n();F['start']=w,F['length']=v,F['processKind']=0x0,F['action']=a['Data']['ActionItem'](),a['Data']['ShapeAction']['CopyAction'](F['action'],x),t['listProcess']['push'](F),z['push'](y);}}for(let G=0x0;G<z['length'];G++){if(a['Renderer']['GetEnableColorMap']()&&s){a['ColorMap']['SetCurrentProcess'](t['listProcess'][G]);if(!t['listProcess'][G]['action']['transform']['equals'](new b['Matrix4']())){t['listProcess'][G]['action']['material']<0x0&&(t['listProcess'][G]['action']['material']=z[G]);r['tInd']===undefined&&(r['tInd']=new Set());r['tInd']['add'](G);let H=new b['Color']();H['set'](0x0,0x0,0x0,0x0),a['ColorMap']['SetColorMapArray_Pipeline'](H);continue;}else{if(r['tInd']!==undefined&&r['tInd']['size']>0x0)r['tInd']['delete'](G);}if(t['listProcess'][G]['action']['color']!==undefined){a['ColorMap']['SetColorMapArray_Pipeline'](t['listProcess'][G]['action']['color']);if(t['listProcess'][G]['action']['color']['a']<0xff){if(r['opaque']===undefined)r['opaque']=new Set();r['opaque']['add'](G);}}if(t['listProcess'][G]['action']['selection']&&a['Configuration']['Model']['Selection']['Mode']===b['Enum']['SelectionVisibleMode']['SHADED']){if(r['sInd']===undefined)r['sInd']=new Set();r['sInd']['add'](G);if(a['Configuration']['Model']['Selection']['Color']['a']<0xff){if(r['opaque']===undefined)r['opaque']=new Set();r['opaque']['add'](G);}if(a['Configuration']['Model']['Selection']['Kind']===b['Enum']['SelectionObject3DTypes']['OPAQUE_OBJECT3D'])a['ColorMap']['SetColorMapArray_Pipeline'](0x200);else{if(a['Configuration']['Model']['Selection']['Kind']===b['Enum']['SelectionObject3DTypes']['CUSTOMCOLOR_OBJECT3D'])a['ColorMap']['SetColorMapArray_Pipeline'](0x200);else a['ColorMap']['SetColorMapArray_Pipeline'](0x200);}}else{if(t['listProcess'][G]['action']['selection']&&a['Configuration']['Model']['Selection']['Mode']===b['Enum']['SelectionVisibleMode']['HIGHLIGHT_SHADED']){if(r['sInd']===undefined)r['sInd']=new Set();r['sInd']['add'](G),a['ColorMap']['SetColorMapArray_Pipeline'](0x300);}else{if(t['listProcess'][G]['action']['selection']&&a['Configuration']['Model']['Selection']['Mode']===b['Enum']['SelectionVisibleMode']['EDGE']){if(r['sInd']===undefined)r['sInd']=new Set();r['sInd']['add'](G);if(t['listProcess'][G]['action']['color']!==undefined){a['ColorMap']['SetColorMapArray_Pipeline'](0x300);if(t['listProcess'][G]['action']['color']['a']<0xff)a['ColorMap']['SetColorMapArray_Pipeline'](0x400+t['listProcess'][G]['action']['color']['a']);}else{if(r['tag'][0x0]['color']['a']<0xff)a['ColorMap']['SetColorMapArray_Pipeline'](0x400+r['tag'][0x0]['color']['a']);else a['ColorMap']['SetColorMapArray_Pipeline'](0x300);}}else{if(t['listProcess'][G]['action']['customColor']){if(r['tInd']!==undefined)r['tInd']['delete'](G);let I=t['listProcess'][G]['action']['color'];I['r']=I['r']+0x100,I['g']=I['g']+0x100,I['b']=I['b']+0x100,a['ColorMap']['SetColorMapArray_Pipeline'](I);}else{if(r['sInd']!==undefined&&r['sInd']['size']>0x0)r['sInd']['delete'](G);if(r['opaque']!==undefined&&r['opaque']['size']>0x0)r['opaque']['delete'](G);{a['ColorMap']['SetColorMapArray_Pipeline'](r['tag'][0x0]['color']);if(r['tag'][0x0]['color']['a']<0xff){if(r['opaque']===undefined)r['opaque']=new Set();r['opaque']['add'](G);}}a['Renderer']['GetXrayMode']()&&t['listProcess'][G]['action']['useEffectMode']&&a['ColorMap']['SetColorMapArray_Pipeline'](a['Renderer']['GetXrayModeColor']()['a']);if(a['Renderer']['GetPlasticMode']()&&t['listProcess'][G]['action']['useEffectMode']){let J=a['Renderer']['GetPlasticModeColor']();a['ColorMap']['SetColorMapArray_Pipeline'](J);if(J['a']<0xff){if(r['opaque']===undefined)r['opaque']=new Set();r['opaque']['add'](G);}}}}}}if(a['MultiView'][a['IsolateViewId']]['eventEnabled']){let K=c['listMultiviewObjectManager'][t['listProcess'][G]['action']['multiViewIdx']],L=K['findIndex'](M=>M===a['IsolateViewId']);if(L<0x0){}else a['ColorMap']['SetColorMapArray_Pipeline_v2'](0xff*0x5);}}t['listProcess'][G]['action']['material']<0x0&&(t['listProcess'][G]['action']['material']=z[G]);}}return r['flag']['updateProcess']=![],r['flag']['renderEnable']=!![],t;},this['InitRenderPipelineSample']=function(r,s){let t=j['get'](r['uuid']);if(!r['flag']['updateProcess'])return t;let u=undefined;t!==undefined&&(u=t['query']);{t=m(),t['id']=r['uuid'],j['set'](r['uuid'],t),a['useWebGL2']&&(t['query']=u);}if(s===undefined)s=new b['Matrix4']();if(r['attribs']['a_index']!==null){let v=0xf618,w=Math['ceil'](r['attribs']['a_index']['array']['length']/v),x=0x0;for(let y=0x0;y<w;y++){let z=r['attribs']['a_index']['array']['length']-y*v;z>v&&(z=v);let A=n();A['start']=x,A['length']=z,A['processKind']=0x0,A['action']=a['Data']['ActionItem'](),A['action']['visible']=!![],A['action']['selection']=![],A['action']['transform']['copy'](s),t['listProcess']['push'](A),x+=z;}}return r['flag']['updateProcess']=![],r['flag']['renderEnable']=!![],t;},this['InitRenderPipelineByWireframe']=function(r,s){q(r,s);};function q(r,s){if(!r['flag']['updateProcess'])return s;let t=0x0,u=0x0,v=a['Data']['ActionItem']();if(r['attribs']['a_index']['buffer']!==null){if(r['attribs']['sub']['a_wireframe']['buffer']===null){let y=[],z=0x0;for(let A=0x0;A<r['attribs']['a_index']['array']['length']/0x3;A++){y[z]=r['attribs']['a_index']['array'][A*0x3],z++,y[z]=r['attribs']['a_index']['array'][A*0x3+0x1],z++,y[z]=r['attribs']['a_index']['array'][A*0x3+0x1],z++,y[z]=r['attribs']['a_index']['array'][A*0x3+0x2],z++,y[z]=r['attribs']['a_index']['array'][A*0x3+0x2],z++,y[z]=r['attribs']['a_index']['array'][A*0x3],z++;}r['attribs']['sub']['a_wireframe']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['sub']['a_wireframe']['buffer']),a['gl']['bufferData'](a['gl']['ELEMENT_ARRAY_BUFFER'],new Uint16Array(y),a['gl']['STATIC_DRAW']);}let w=0x0,x=0xf618;for(let B=0x0;B<r['tag']['length'];B++){let C=r['tag'][B],D=a['Data']['ShapeAction']['GetAction'](r['id_file'],C['origin_id']);if(t>0x0){if(p(D,v)&&t+C['m_nTris']*0x2<x)t+=C['m_nTris']*0x2;else{let E=n();E['start']=u,E['length']=t,E['processKind']=0x1,E['action']=a['Data']['ActionItem'](),a['Data']['ShapeAction']['CopyAction'](E['action'],v),s['listProcess']['push'](E),t=0x0;}}t===0x0&&D['visible']&&(u=w+C['m_triIdx']*0x2,t=C['m_nTris']*0x2,a['Data']['ShapeAction']['CopyAction'](v,D));if(t>0x0&&r['tag']['length']-0x1===B){let F=n();F['start']=u,F['length']=t,F['processKind']=0x1,F['action']=a['Data']['ActionItem'](),a['Data']['ShapeAction']['CopyAction'](F['action'],v),s['listProcess']['push'](F);}}}r['flag']['updateProcess']=![],r['flag']['renderEnable']=!![];}this['ClearProcess']=function(){let r=function(t,u,v){if(t['query']!==undefined)a['gl']['deleteQuery'](t['query']);};j['forEach'](r),j['clear']();let s=function(t,u,v){if(t['positionBuffer']!==undefined)a['gl']['deleteBuffer'](t['positionBuffer']);if(t['normalBuffer']!==undefined)a['gl']['deleteBuffer'](t['normalBuffer']);if(t['uvBuffer']!==undefined)a['gl']['deleteBuffer'](t['uvBuffer']);if(t['colorBuffer']!==undefined)a['gl']['deleteBuffer'](t['colorBuffer']);if(t['indexBuffer']!==undefined)a['gl']['deleteBuffer'](t['indexBuffer']);};h['forEach'](s),h['clear'](),c['listMultiviewObjectManager']=[0x0];},this['DeleteUtilWGLItem']=function(r){if(!h['has'](r))return;let s=h['get'](r);if(s['positionBuffer']!==undefined)a['gl']['deleteBuffer'](s['positionBuffer']);if(s['normalBuffer']!==undefined)a['gl']['deleteBuffer'](s['normalBuffer']);if(s['uvBuffer']!==undefined)a['gl']['deleteBuffer'](s['uvBuffer']);if(s['colorBuffer']!==undefined)a['gl']['deleteBuffer'](s['colorBuffer']);if(s['indexBuffer']!==undefined)a['gl']['deleteBuffer'](s['indexBuffer']);h['delete'](r);},this['GetPipeline']=function(r){return j['get'](r);},this['DeletePipeline']=function(r){let s=c['GetPipeline'](r);if(s===undefined)return;if(s['query']!==undefined)a['gl']['deleteQuery'](s['query']);j['delete'](r);},this['DeleteUtilWGLItem']=function(r){let s=h['get'](r);if(s){if(s['positionBuffer']!==undefined)a['gl']['deleteBuffer'](s['positionBuffer']);if(s['normalBuffer']!==undefined)a['gl']['deleteBuffer'](s['normalBuffer']);if(s['uvBuffer']!==undefined)a['gl']['deleteBuffer'](s['uvBuffer']);if(s['colorBuffer']!==undefined)a['gl']['deleteBuffer'](s['colorBuffer']);if(s['indexBuffer']!==undefined)a['gl']['deleteBuffer'](s['indexBuffer']);h['delete'](r);}},this['SetGLDrawMode']=function(r){d=r;},this['SetDataByObject']=function(r){let s=![];r['attribs']['a_index']['buffer']===null&&r['attribs']['a_index']['array']['length']>0x0&&(r['attribs']['a_index']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']),a['gl']['bufferData'](a['gl']['ELEMENT_ARRAY_BUFFER'],new Uint16Array(r['attribs']['a_index']['array']),a['gl']['STATIC_DRAW']),s=!![]);r['attribs']['a_position']['buffer']===null&&r['attribs']['a_position']['array']['length']>0x0&&(r['attribs']['a_position']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(r['attribs']['a_position']['array']),a['gl']['STATIC_DRAW']),s=!![]);r['attribs']['a_normal']['buffer']===null&&r['attribs']['a_normal']['array']['length']>0x0&&(r['attribs']['a_normal']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(r['attribs']['a_normal']['array']),a['gl']['STATIC_DRAW']),s=!![]);if(a['UV_DEBUG'])r['attribs']['a_uv']['buffer']===null&&r['attribs']['a_uv']['array']['length']>0x0&&(r['attribs']['a_uv']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_uv']['buffer']),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(r['attribs']['a_uv']['array']),a['gl']['STATIC_DRAW']),s=!![]);r['attribs']['a_color']['buffer']===null&&r['attribs']['a_color']['array']['length']>0x0&&(r['attribs']['a_color']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_color']['buffer']),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Uint8Array(r['attribs']['a_color']['array']),a['gl']['STATIC_DRAW']),s=!![]);r['attribs']['a_matrixIndex']!==undefined&&(r['attribs']['a_matrixIndex']['buffer']===null&&r['attribs']['a_position']['array']['length']>0x0&&r['attribs']['a_matrixIndex']['array']['length']>0x0&&(r['attribs']['a_matrixIndex']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_matrixIndex']['buffer']),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Uint16Array(r['attribs']['a_matrixIndex']['array']),a['gl']['STATIC_DRAW']),s=!![]));if(r['attribs']['sub']['biped']!==undefined){if(r['attribs']['sub']['biped']['a_biped']['buffer']===null&&r['attribs']['sub']['biped']['a_biped']['array']['length']>0x0){r['attribs']['sub']['biped']['a_biped']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['sub']['biped']['a_biped']['buffer']);let t=[],u=0x0;for(let v=0x0;v<r['attribs']['sub']['biped']['a_biped']['array']['length'];v++){for(let x=0x0;x<0x4;x++){t[u]=r['attribs']['sub']['biped']['a_biped']['array'][v][x],u++;}}a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(t),a['gl']['STATIC_DRAW']),s=!![];}if(r['attribs']['sub']['biped']['a_weight']['buffer']===null&&r['attribs']['sub']['biped']['a_weight']['array']['length']>0x0){r['attribs']['sub']['biped']['a_weight']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['sub']['biped']['a_weight']['buffer']);let y=[],z=0x0;for(let A=0x0;A<r['attribs']['sub']['biped']['a_weight']['array']['length'];A++){for(let B=0x0;B<0x4;B++){y[z]=r['attribs']['sub']['biped']['a_weight']['array'][A][B],z++;}}a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(y),a['gl']['STATIC_DRAW']),s=!![];}}s&&(r['flag']['updateProcess']=!![]);},this['ReleaseDataByObject']=function(r){r['attribs']['a_index']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['a_index']['buffer']),r['attribs']['a_index']['buffer']=null,r['attribs']['a_index']['array']=[]);r['attribs']['a_position']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['a_position']['buffer']),r['attribs']['a_position']['buffer']=null,r['attribs']['a_position']['array']=[]);r['attribs']['a_normal']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['a_normal']['buffer']),r['attribs']['a_normal']['buffer']=null,r['attribs']['a_normal']['array']=[]);if(a['UV_DEBUG'])r['attribs']['a_uv']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['a_uv']['buffer']),r['attribs']['a_uv']['buffer']=null,r['attribs']['a_uv']['array']=[]);r['attribs']['a_color']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['a_color']['buffer']),r['attribs']['a_color']['buffer']=null,r['attribs']['a_color']['array']=[]),a['Renderer']['GetEnableColorMap']()&&(r['attribs']['a_tInd']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['a_tInd']['buffer']),r['attribs']['a_tInd']['buffer']=null,r['attribs']['a_tInd']['array']=[])),r['attribs']['a_matrixIndex']!==undefined&&(r['attribs']['a_matrixIndex']['buffer']===null&&(a['gl']['deleteBuffer'](r['attribs']['a_matrixIndex']['buffer']),r['attribs']['a_matrixIndex']['buffer']=null,r['attribs']['a_matrixIndex']['array']=[])),r['attribs']['sub']['a_wireframe']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['sub']['a_wireframe']['buffer']),r['attribs']['sub']['a_wireframe']['buffer']=null),r['attribs']['sub']['biped']!==undefined&&(r['attribs']['sub']['biped']['a_biped']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['sub']['biped']['a_biped']['buffer']),r['attribs']['sub']['biped']['a_biped']['buffer']=null),r['attribs']['sub']['biped']['a_weight']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['sub']['biped']['a_weight']['buffer']),r['attribs']['sub']['biped']['a_weight']['buffer']=null));},this['RemoveGLBuffer']=function(r,s){if(s===undefined)s=![];if(!s){if(!r['flag']['cache'])return;}r['attribs']['a_index']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['a_index']['buffer']),r['attribs']['a_index']['buffer']=null),r['attribs']['a_position']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['a_position']['buffer']),r['attribs']['a_position']['buffer']=null),r['attribs']['a_normal']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['a_normal']['buffer']),r['attribs']['a_normal']['buffer']=null),a['UV_DEBUG']&&(r['attribs']['a_uv']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['a_uv']['buffer']),r['attribs']['a_uv']['buffer']=null)),r['attribs']['a_color']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['a_color']['buffer']),r['attribs']['a_color']['buffer']=null),r['attribs']['a_matrixIndex']!==undefined&&(r['attribs']['a_matrixIndex']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['a_matrixIndex']['buffer']),r['attribs']['a_matrixIndex']['buffer']=null)),r['attribs']['sub']['a_wireframe']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['sub']['a_wireframe']['buffer']),r['attribs']['sub']['a_wireframe']['buffer']=null),r['attribs']['sub']['biped']['a_biped']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['sub']['biped']['a_biped']['buffer']),r['attribs']['sub']['biped']['a_biped']['buffer']=null),r['attribs']['sub']['biped']['a_weight']['buffer']!==null&&(a['gl']['deleteBuffer'](r['attribs']['sub']['biped']['a_weight']['buffer']),r['attribs']['sub']['biped']['a_weight']['buffer']=null);},this['UpdateOcclusion']=function(r){if(a['Renderer']['enableOcclusion']===![])return;if(a['Renderer']['occlusionProcessCount']>0x400)return;a['gl']['colorMask'](![],![],![],![]),a['gl']['depthMask'](![]);let s=new b['Color'](0xff,0xff,0xff,0xff);a['Shader']['BeginShader'](b['Enum']['SHADER_TYPES']['BASIC2D']),c['UpdateRenderProcessByObjectOcclusion_v2'](r,s),a['Shader']['EndShader'](),a['gl']['colorMask'](!![],!![],!![],!![]),a['gl']['depthMask'](!![]);},this['UpdateRenderProcessByTriangles']=function(r,s){if(a['Shader']['currentShaderType']===undefined)return;let t=a['gl']['createBuffer'](),u=[],v=a['gl']['createBuffer'](),w=[],x=0x0;for(let D=0x0;D<r['length'];D++){let E=x,F=x;u[E]=r[D]['vertex']['v1']['x'],E++,u[E]=r[D]['vertex']['v1']['y'],E++,u[E]=r[D]['vertex']['v1']['z'],E++,u[E]=r[D]['vertex']['v2']['x'],E++,u[E]=r[D]['vertex']['v2']['y'],E++,u[E]=r[D]['vertex']['v2']['z'],E++,u[E]=r[D]['vertex']['v3']['x'],E++,u[E]=r[D]['vertex']['v3']['y'],E++,u[E]=r[D]['vertex']['v3']['z'],E++,a['Shader']['normalAttributeLocation']>=0x0&&(w[F]=r[D]['normal']['v1']['x'],F++,w[F]=r[D]['normal']['v1']['y'],F++,w[F]=r[D]['normal']['v1']['z'],F++,w[F]=r[D]['normal']['v2']['x'],F++,w[F]=r[D]['normal']['v2']['y'],F++,w[F]=r[D]['normal']['v2']['z'],F++,w[F]=r[D]['normal']['v3']['x'],F++,w[F]=r[D]['normal']['v3']['y'],F++,w[F]=r[D]['normal']['v3']['z'],F++),x=E;}a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],t),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(u),a['gl']['STATIC_DRAW']);a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],v),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(w),a['gl']['STATIC_DRAW']));a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],t);let y=0x3,z=a['gl']['FLOAT'],A=![],B=0x0,C=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],y,z,A,B,C);a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],v),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],y,z,A,B,C));{const G=new b['Matrix4']()['copy'](a['Camera']['matMV']),H=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](H,G);let I=s;if(I===undefined)I=new b['Color']();let J=I['glColor']();a['Shader']['SetGLColor'](J['r'],J['g'],J['b'],J['a']),a['gl']['drawArrays'](a['gl']['TRIANGLES'],0x0,x);}a['gl']['deleteBuffer'](t),a['gl']['deleteBuffer'](v);},this['UpdateRenderProcessByPoints']=function(r,s){if(a['Shader']['currentShaderType']===undefined)return;let t=a['gl']['createBuffer'](),u=[],v=0x0;for(let B=0x0;B<triangles['length'];B++){let C=v;u[C]=r[B]['x'],C++,u[C]=r[B]['y'],C++,u[C]=r[B]['z'],C++,v=C;}a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],t),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(u),a['gl']['STATIC_DRAW']),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],t);let w=0x3,x=a['gl']['FLOAT'],y=![],z=0x0,A=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],w,x,y,z,A);{const D=new b['Matrix4']()['copy'](a['Camera']['matMV']),E=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](E,D);let F=s;if(F===undefined)F=new b['Color']();let G=F['glColor']();a['Shader']['SetGLColor'](G['r'],G['g'],G['b'],G['a']),a['gl']['drawArrays'](a['gl']['POINTS'],0x0,v);}a['gl']['deleteBuffer'](t);},this['UpdateRenderProcessByObject_v2']=function(r,s){c['UpdateRenderProcessByObject_v3'](r,s,b['Enum']['SHADER_TYPES']['NONE']);},this['UpdateRenderProcessByObject_v3']=function(r,s,t){if(!r['flag']['renderEnable'])return;let u=j['get'](r['uuid']);if(u===undefined)return;if(u['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']){if(u['occluded'])return;if(!u['renderEnableOcclusion'])return;}else{if(!r['flag']['renderEnable'])return;}let v=a['Renderer']['GetWireframeMode'](),w=function(){a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let C=0x3,D=a['gl']['FLOAT'],E=![],F=0x0,G=0x0;if(a['Shader']['positionAttributeLocation']!==-0x1)a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],C,D,E,F,G);a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']);if(a['Shader']['normalAttributeLocation']!==-0x1)a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],C,D,E,F,G);a['UV_DEBUG']&&(a['Shader']['uvAttributeLocation']>=0x0&&(r['attribs']['a_uv']['buffer']!==null?(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_uv']['buffer']),a['gl']['enableVertexAttribArray'](a['Shader']['uvAttributeLocation']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)):a['gl']['disableVertexAttribArray'](a['Shader']['uvAttributeLocation'])));if(v&&r['attribs']['sub']['a_wireframe']['buffer']===undefined)v=![];if(!v)a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);else a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['sub']['a_wireframe']['buffer']);{const H=new b['Matrix4']()['copy'](a['Camera']['matMV']),I=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](I,H),a['Shader']['SetGLCameraData'](),a['Shader']['SetMVPMatrix'](a['Camera']['matMV'],a['Camera']['viewMatrix'],a['Camera']['projectionMatrixSrc']);if(f)a['Shader']['SetClipping'](H);else a['Shader']['SetClipping'](undefined);a['Shader']['SetGLLight'](g);}};if(e!==t)a['Shader']['EndShader']();let x=a['Shader']['currentShaderType'];if(x===undefined){}else w();let y=r['tag'][0x0],z=y['color'],A=d;if(v)d=a['gl']['LINES'];let B=new b['Matrix4']();for(let C=0x0;C<u['listProcess']['length'];C++){let D=u['listProcess'][C],E=t;if(v&&D['processKind']==0x0)continue;if(!v&&D['processKind']==0x1)continue;if(a['MultiView'][a['CameraIndex']]['UseisolateView']){let I=c['listMultiviewObjectManager'][D['action']['multiViewIdx']],J=I['findIndex'](K=>K===a['CameraIndex']);if(J<0x0)continue;}if(x===undefined){let K=a['Material']['GetMaterial'](D['action']['material']);K!==undefined&&(E=K['shaderType']);if(E===b['Enum']['SHADER_TYPES']['NONE'])continue;a['Shader']['currentProgram']===undefined&&(a['Shader']['BeginShader'](E),a['Shader']['currentProgram']!==undefined&&(e=E)),w();}let F=new b['Color']()['copy'](z),G=![];D['action']['color']!==undefined&&F['copy'](D['action']['color']);if(D['action']['selection']&&a['Configuration']['Model']['Selection']['Mode']===b['Enum']['SelectionVisibleMode']['SHADED'])F['copy'](a['Configuration']['Model']['Selection']['Color']),a['Shader']['SetGLMaterial'](D['action']['material']),G=a['Material']['IsAlphaMaterial'](D['action']['material']);else{if(D['action']['selection']&&a['Configuration']['Model']['Selection']['Mode']===b['Enum']['SelectionVisibleMode']['EDGE']){a['Shader']['SetGLMaterial'](D['action']['material']);if(D['action']['material']>=0x0){let L=a['Material']['GetMaterial'](D['action']['material']);if(L!==undefined){F['copy'](L['color']),G=a['Material']['IsAlphaMaterial'](D['action']['material']);if(t!==L['shaderType'])continue;}if(!a['Renderer']['enableMaterialTextureLoadingDrawModel']){let M=a['Material']['IsFinishMaterialTextureDownalodByID'](D['action']['material']);if(!M)continue;}}}else{if(D['action']['customColor']){a['Shader']['SetGLMaterial'](D['action']['material']);if(D['action']['material']>=0x0){let N=a['Material']['GetMaterial'](D['action']['material']);if(N!==undefined){F['copy'](N['color']),G=a['Material']['IsAlphaMaterial'](D['action']['material']);if(t!==N['shaderType'])continue;}if(!a['Renderer']['enableMaterialTextureLoadingDrawModel']){let O=a['Material']['IsFinishMaterialTextureDownalodByID'](D['action']['material']);if(!O)continue;}}D['action']['color']!==undefined&&F['copy'](D['action']['color']);}else{a['Shader']['SetGLMaterial'](D['action']['material']);if(D['action']['material']>=0x0){let P=a['Material']['GetMaterial'](D['action']['material']);P!==undefined&&(F['copy'](P['color']),G=a['Material']['IsAlphaMaterial'](D['action']['material']));if(!a['Renderer']['enableMaterialTextureLoadingDrawModel']){let Q=a['Material']['IsFinishMaterialTextureDownalodByID'](D['action']['material']);if(!Q)continue;}}a['Renderer']['GetXrayMode']()&&D['action']['useEffectMode']&&(F['a']=a['Renderer']['GetXrayModeColor']()['a']),a['Renderer']['GetPlasticMode']()&&D['action']['useEffectMode']&&F['copy'](a['Renderer']['GetPlasticModeColor']());}}}if(!G){if(F['a']===0xff)G=![];else{if(F['a']!==0xff)G=!![];}}if(s&&!G)continue;if(!s&&G)continue;let H=F['glColor']();a['Shader']['SetGLColor'](H['r'],H['g'],H['b'],H['a']);if(a['Shader']['GetUseUpdateMatrixManager']()&&D['action']['transformIdx']>0x0)a['Shader']['SetUpdateModelMatrixData'](r['uuid'],D['action']['transformIdx']),r['attribs']['a_matrixIndex']['buffer']!==null&&a['Shader']['updateMatrixAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_matrixIndex']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['updateMatrixAttributeLocation'],0x3,a['gl']['UNSIGNED_SHORT'],![],0x0,0x0));else{a['Shader']['SetUpdateModelMatrixData'](r['uuid'],-0x1);{B['copy'](D['action']['transform']);const R=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],B),S=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],R);a['Shader']['SetMatrix'](S,R);}}a['gl']['drawElements'](d,D['length'],a['gl']['UNSIGNED_SHORT'],D['start']*0x2);if(x===undefined){if(e===undefined)a['Shader']['EndShader']();}a['Renderer']['AddDrawCount']();}d=A;},this['UpdateRenderProcessByObject_v4']=function(r,s){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;if(s&&(r['opaque']===undefined||r['opaque']['size']===0x0))return;let t=j['get'](r['uuid']);if(!s&&r['opaque']!==undefined&&r['opaque']['size']!==0x0&&t['listProcess']['length']===0x1)return;if(t===undefined)return;if(t['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']){if(t['occluded'])return;if(!t['renderEnableOcclusion'])return;}else{if(!r['flag']['renderEnable'])return;}let u=a['Renderer']['GetWireframeMode'](),v=function(){a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let x=0x3,y=a['gl']['FLOAT'],z=![],A=0x0,B=0x0;if(a['Shader']['positionAttributeLocation']!==-0x1)a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],x,y,z,A,B);a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']);if(a['Shader']['normalAttributeLocation']!==-0x1)a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],x,y,z,A,B);{a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_tInd']['buffer']);if(a['Shader']['tindAttributeLocation']!==-0x1)a['gl']['vertexAttribPointer'](a['Shader']['tindAttributeLocation'],0x1,a['gl']['UNSIGNED_INT'],z,A,B);}{let C=a['ColorMap']['GetColorMapTexture']();(r['mapId']!=k||r['id_file']!=l)&&(a['ColorMap']['SetCurrentColorMapInfo'](r['id_file']),a['ColorMap']['SetColorMapTexture'](r['mapId']),k=r['mapId'],l=r['id_file']),a['Shader']['SetCurrentTexture']('u_ColorMap',a['gl']['TEXTURE_2D'],C);}a['UV_DEBUG']&&(a['Shader']['uvAttributeLocation']>=0x0&&(r['attribs']['a_uv']['buffer']!==null?(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_uv']['buffer']),a['gl']['enableVertexAttribArray'](a['Shader']['uvAttributeLocation']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)):a['gl']['disableVertexAttribArray'](a['Shader']['uvAttributeLocation'])));if(u&&r['attribs']['sub']['a_wireframe']['buffer']===undefined)u=![];if(!u)a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);else a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['sub']['a_wireframe']['buffer']);},w=d;if(u)d=a['gl']['LINES'];v();if(u)a['gl']['drawElements'](d,r['attribs']['a_index']['array']['length']*0x2,a['gl']['UNSIGNED_SHORT'],0x0);else a['gl']['drawElements'](d,r['attribs']['a_index']['array']['length'],a['gl']['UNSIGNED_SHORT'],0x0);d=w,a['Renderer']['AddDrawCount']();},this['UpdateRenderProcessByObject_v4_t']=function(r,s,t){let u=r['tInd'];if(u===undefined||u['size']===0x0)return;if(!r['flag']['renderEnable'])return;let v=j['get'](r['uuid']);if(v===undefined)return;if(v['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']){if(v['occluded'])return;if(!v['renderEnableOcclusion'])return;}else{if(!r['flag']['renderEnable'])return;}let w=a['Renderer']['GetWireframeMode'](),x=function(){a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let C=0x3,D=a['gl']['FLOAT'],E=![],F=0x0,G=0x0;if(a['Shader']['positionAttributeLocation']!==-0x1)a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],C,D,E,F,G);a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']);if(a['Shader']['normalAttributeLocation']!==-0x1)a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],C,D,E,F,G);a['UV_DEBUG']&&(a['Shader']['uvAttributeLocation']>=0x0&&(r['attribs']['a_uv']['buffer']!==null?(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_uv']['buffer']),a['gl']['enableVertexAttribArray'](a['Shader']['uvAttributeLocation']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)):a['gl']['disableVertexAttribArray'](a['Shader']['uvAttributeLocation'])));if(w&&r['attribs']['sub']['a_wireframe']['buffer']===undefined)w=![];if(!w)a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);else a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['sub']['a_wireframe']['buffer']);{const H=new b['Matrix4']()['copy'](a['Camera']['matMV']),I=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](I,H);if(f)a['Shader']['SetClipping'](H);else a['Shader']['SetClipping'](undefined);a['Shader']['SetGLLight'](g);}},y=r['tag'][0x0],z=y['color'],A=d;if(w)d=a['gl']['LINES'];let B=new b['Matrix4']();for(let C=0x0;C<u['size'];C++){let D=v['listProcess'][Array['from'](u)[C]];if(D===undefined){u['delete'](Array['from'](u)[C]);continue;}if(w&&D['processKind']==0x0)continue;if(!w&&D['processKind']==0x1)continue;if(a['MultiView'][a['CameraIndex']]['UseisolateView']){let E=c['listMultiviewObjectManager'][D['action']['multiViewIdx']],F=E['findIndex'](G=>G===a['CameraIndex']);if(F<0x0)continue;}B['copy'](D['action']['transform']);if(!B['equals'](new b['Matrix4']())){a['Shader']['SetUpdateModelMatrixData'](r['uuid'],-0x1),x();let G=new b['Color']()['copy'](z),H=![];D['action']['color']!==undefined&&G['copy'](D['action']['color']);if(D['action']['selection']&&a['Configuration']['Model']['Selection']['Mode']===b['Enum']['SelectionVisibleMode']['SHADED'])G['copy'](a['Configuration']['Model']['Selection']['Color']),a['Shader']['SetGLMaterial'](D['action']['material']),H=a['Material']['IsAlphaMaterial'](D['action']['material']);else{if(D['action']['selection']&&a['Configuration']['Model']['Selection']['Mode']===b['Enum']['SelectionVisibleMode']['EDGE']){a['Shader']['SetGLMaterial'](D['action']['material']);if(D['action']['material']>=0x0){let J=a['Material']['GetMaterial'](D['action']['material']);if(J!==undefined){G['copy'](J['color']),H=a['Material']['IsAlphaMaterial'](D['action']['material']);if(t!==J['shaderType'])continue;}if(!a['Renderer']['enableMaterialTextureLoadingDrawModel']){let K=a['Material']['IsFinishMaterialTextureDownalodByID'](D['action']['material']);if(!K)continue;}}}else{if(D['action']['customColor']){a['Shader']['SetGLMaterial'](D['action']['material']);if(D['action']['material']>=0x0){let L=a['Material']['GetMaterial'](D['action']['material']);if(L!==undefined){G['copy'](L['color']),H=a['Material']['IsAlphaMaterial'](D['action']['material']);if(t!==L['shaderType'])continue;}if(!a['Renderer']['enableMaterialTextureLoadingDrawModel']){let M=a['Material']['IsFinishMaterialTextureDownalodByID'](D['action']['material']);if(!M)continue;}}D['action']['color']!==undefined&&G['copy'](D['action']['color']);}else{a['Shader']['SetGLMaterial'](D['action']['material']);if(D['action']['material']>=0x0){let N=a['Material']['GetMaterial'](D['action']['material']);N!==undefined&&(G['copy'](N['color']),H=a['Material']['IsAlphaMaterial'](D['action']['material']));if(!a['Renderer']['enableMaterialTextureLoadingDrawModel']){let O=a['Material']['IsFinishMaterialTextureDownalodByID'](D['action']['material']);if(!O)continue;}}a['Renderer']['GetXrayMode']()&&D['action']['useEffectMode']&&(G['a']=a['Renderer']['GetXrayModeColor']()['a']),a['Renderer']['GetPlasticMode']()&&D['action']['useEffectMode']&&G['copy'](a['Renderer']['GetPlasticModeColor']());}}}if(!H){if(G['a']===0xff)H=![];else{if(G['a']!==0xff)H=!![];}}if(s&&!H)continue;if(!s&&H)continue;let I=G['glColor']();a['Shader']['SetGLColor'](I['r'],I['g'],I['b'],I['a']);if(a['Shader']['GetUseUpdateMatrixManager']()&&D['action']['transformIdx']>0x0)a['Shader']['SetUpdateModelMatrixData'](r['uuid'],D['action']['transformIdx']),r['attribs']['a_matrixIndex']['buffer']!==null&&a['Shader']['updateMatrixAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_matrixIndex']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['updateMatrixAttributeLocation'],0x3,a['gl']['UNSIGNED_SHORT'],![],0x0,0x0)),a['gl']['drawElements'](d,D['length'],a['gl']['UNSIGNED_SHORT'],D['start']*0x2);else{const P=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],B),Q=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],P);a['Shader']['SetMatrix'](Q,P),a['Shader']['SetClipping'](P),a['gl']['drawElements'](d,D['length'],a['gl']['UNSIGNED_SHORT'],D['start']*0x2),a['Renderer']['AddDrawCount']();}}}d=A;},this['UpdateRenderProcessBySelectObject_v2']=function(r,s){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let t=j['get'](r['uuid']);if(t===undefined)return;if(t['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']){if(t['occluded'])return;if(!t['renderEnableOcclusion'])return;}else{if(!r['flag']['renderEnable'])return;}let u=a['Renderer']['GetWireframeMode']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let v=0x3,w=a['gl']['FLOAT'],x=![],y=0x0,z=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],v,w,x,y,z),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],v,w,x,y,z);a['UV_DEBUG']&&(a['Shader']['uvAttributeLocation']>=0x0&&(r['attribs']['a_uv']['buffer']!==null?(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_uv']['buffer']),a['gl']['enableVertexAttribArray'](a['Shader']['uvAttributeLocation']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)):a['gl']['disableVertexAttribArray'](a['Shader']['uvAttributeLocation'])));if(u&&r['attribs']['sub']['a_wireframe']['buffer']===undefined)u=![];if(!u)a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);else a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['sub']['a_wireframe']['buffer']);let A=r['tag'][0x0],B=A['color'],C=d;if(u)d=a['gl']['LINES'];{const E=new b['Matrix4']()['copy'](a['Camera']['matMV']),F=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](F,E);}let D=new b['Matrix4']();for(let G=0x0;G<t['listProcess']['length'];G++){let H=t['listProcess'][G];if(u&&H['processKind']==0x0)continue;if(!u&&H['processKind']==0x1)continue;if(!H['action']['selection'])continue;if(a['MultiView'][a['CameraIndex']]['UseisolateView']){let L=c['listMultiviewObjectManager'][H['action']['multiViewIdx']],M=L['findIndex'](N=>N===a['CameraIndex']);if(M<0x0)continue;}let I=new b['Color']()['copy'](B),J=![];H['action']['color']!==undefined&&I['copy'](H['action']['color']);if(H['action']['selection']&&a['Configuration']['Model']['Selection']['Mode']===b['Enum']['SelectionVisibleMode']['SHADED'])I['copy'](a['Configuration']['Model']['Selection']['Color']),a['Shader']['SetGLMaterial'](-0x1);else{if(H['action']['customColor'])H['action']['color']!==undefined&&I['copy'](H['action']['color']);else{a['Shader']['SetGLMaterial'](H['action']['material']);if(H['action']['material']>=0x0){let N=a['Material']['GetMaterial'](H['action']['material']);N!==undefined&&I['copy'](N['color']);}a['Renderer']['GetXrayMode']()&&H['action']['useEffectMode']&&(I['a']=a['Renderer']['GetXrayModeColor']()['a']),a['Renderer']['GetPlasticMode']()&&H['action']['useEffectMode']&&I['copy'](a['Renderer']['GetPlasticModeColor']());}}if(s&&I['a']===0xff)continue;if(!s&&I['a']!==0xff)continue;let K=I['glColor']();a['Shader']['SetGLColor'](K['r'],K['g'],K['b'],K['a']);if(a['Shader']['GetUseUpdateMatrixManager']()&&H['action']['transformIdx']>0x0)a['Shader']['SetUpdateModelMatrixData'](r['uuid'],H['action']['transformIdx']),r['attribs']['a_matrixIndex']['buffer']!==null&&a['Shader']['updateMatrixAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_matrixIndex']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['updateMatrixAttributeLocation'],0x3,a['gl']['UNSIGNED_SHORT'],![],0x0,0x0));else{a['Shader']['SetUpdateModelMatrixData'](r['uuid'],-0x1);if(!D['equals'](H['action']['transform'])){D['copy'](H['action']['transform']);const O=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],D),P=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],O);a['Shader']['SetMatrix'](P,O);}}a['gl']['drawElements'](d,H['length'],a['gl']['UNSIGNED_SHORT'],H['start']*0x2),a['Renderer']['AddDrawCount']();}d=C;},this['UpdateRenderProcessByPickObject_v2']=function(r){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let s=j['get'](r['uuid']);if(s===undefined)return;if(s['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&s['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let t=0x3,u=a['gl']['FLOAT'],v=![],w=0x0,x=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],t,u,v,w,x);r['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['colorAttributeLocation']>=0x0&&r['attribs']['a_color']['buffer']!==null&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],v,w,x));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);let y=r['tag'][0x0],z=y['color'];{const B=new b['Matrix4']()['copy'](a['Camera']['matMV']),C=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](C,B);}let A=new b['Matrix4']();for(let D=0x0;D<s['listProcess']['length'];D++){let E=s['listProcess'][D];if(E['processKind']===0x1)continue;if(!E['action']['useSelection'])continue;if(a['MultiView'][a['CameraIndex']]['UseisolateView']){let F=c['listMultiviewObjectManager'][E['action']['multiViewIdx']],G=F['findIndex'](H=>H===a['CameraIndex']);if(G<0x0)continue;}if(a['Configuration']['Model']['Selection']['Kind']===b['Enum']['SelectionObject3DTypes']['OPAQUE_OBJECT3D']){let H=new b['Color']()['copy'](z);if(E['action']['customColor'])E['action']['color']!==undefined&&H['copy'](E['action']['color']);else{if(E['action']['material']>=0x0){let I=a['Material']['GetMaterial'](E['action']['material']);if(I!==undefined)H['copy'](I['color']);}a['Renderer']['GetXrayMode']()&&E['action']['useEffectMode']&&(H['a']=a['Renderer']['GetXrayModeColor']()['a']),a['Renderer']['GetPlasticMode']()&&E['action']['useEffectMode']&&H['copy'](a['Renderer']['GetPlasticModeColor']());}if(H['a']<0xff)continue;}else{if(a['Configuration']['Model']['Selection']['Kind']===b['Enum']['SelectionObject3DTypes']['CUSTOMCOLOR_OBJECT3D']){if(!E['action']['customColor'])continue;}}if(!A['equals'](E['action']['transform'])){A['copy'](E['action']['transform']);const J=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],A),K=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],J);a['Shader']['SetMatrix'](K,J);}a['gl']['drawElements'](d,E['length'],a['gl']['UNSIGNED_SHORT'],E['start']*0x2);}},this['UpdateRenderProcessByPickObject_v3']=function(r){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let s=j['get'](r['uuid']);if(s===undefined)return;if(s['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&s['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let t=0x3,u=a['gl']['FLOAT'],v=![],w=0x0,x=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],t,u,v,w,x);r['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['colorAttributeLocation']>=0x0&&r['attribs']['a_color']['buffer']!==null&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],v,w,x));a['Shader']['tindAttributeLocation']!==null&&a['Shader']['tindAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_tInd']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['tindAttributeLocation'],0x1,a['gl']['UNSIGNED_INT'],v,w,x));{let y=a['ColorMap']['GetColorMapTexture']();(r['mapId']!=k||r['id_file']!=l)&&(a['ColorMap']['SetCurrentColorMapInfo'](r['id_file']),a['ColorMap']['SetColorMapTexture'](r['mapId']),k=r['mapId'],l=r['id_file']),a['Shader']['SetCurrentTexture']('u_ColorMap',a['gl']['TEXTURE_2D'],y);}a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']),a['gl']['drawElements'](d,r['attribs']['a_index']['array']['length'],a['gl']['UNSIGNED_SHORT'],0x0);},this['UpdateRenderProcessByPickObject_v3_t']=function(r){let s=r['tInd'];if(s===undefined||s['size']===0x0)return;if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let t=j['get'](r['uuid']);if(t===undefined)return;if(t['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&t['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let u=0x3,v=a['gl']['FLOAT'],w=![],x=0x0,y=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],u,v,w,x,y);r['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['colorAttributeLocation']>=0x0&&r['attribs']['a_color']['buffer']!==null&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],w,x,y));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);let z=r['tag'][0x0],A=z['color'],B=new b['Matrix4']();for(let C=0x0;C<t['listProcess']['length'];C++){let D=t['listProcess'][C];if(D===undefined)continue;if(D['processKind']===0x1)continue;if(!D['action']['useSelection'])continue;if(a['MultiView'][a['CameraIndex']]['UseisolateView']){let E=c['listMultiviewObjectManager'][D['action']['multiViewIdx']],F=E['findIndex'](G=>G===a['CameraIndex']);if(F<0x0)continue;}B['copy'](D['action']['transform']);if(!B['equals'](new b['Matrix4']())){if(a['Configuration']['Model']['Selection']['Kind']===b['Enum']['SelectionObject3DTypes']['OPAQUE_OBJECT3D']){let G=new b['Color']()['copy'](A);if(D['action']['customColor'])D['action']['color']!==undefined&&G['copy'](D['action']['color']);else{if(D['action']['material']>=0x0){let H=a['Material']['GetMaterial'](D['action']['material']);if(H!==undefined)G['copy'](H['color']);}a['Renderer']['GetXrayMode']()&&D['action']['useEffectMode']&&(G['a']=a['Renderer']['GetXrayModeColor']()['a']),a['Renderer']['GetPlasticMode']()&&D['action']['useEffectMode']&&G['copy'](a['Renderer']['GetPlasticModeColor']());}if(G['a']<0xff)continue;}else{if(a['Configuration']['Model']['Selection']['Kind']===b['Enum']['SelectionObject3DTypes']['CUSTOMCOLOR_OBJECT3D']){if(!D['action']['customColor'])continue;}}if(a['Shader']['GetUseUpdateMatrixManager']()&&D['action']['transformIdx']>0x0)a['Shader']['SetUpdateModelMatrixData'](r['uuid'],D['action']['transformIdx']),r['attribs']['a_matrixIndex']['buffer']!==null&&a['Shader']['updateMatrixAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_matrixIndex']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['updateMatrixAttributeLocation'],0x3,a['gl']['UNSIGNED_SHORT'],![],0x0,0x0)),a['gl']['drawElements'](d,D['length'],a['gl']['UNSIGNED_SHORT'],D['start']*0x2);else{const I=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],B),J=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],I);a['Shader']['SetMatrix'](J,I),a['gl']['drawElements'](d,D['length'],a['gl']['UNSIGNED_SHORT'],D['start']*0x2);}}}},this['UpdateRenderProcessBySelectPickObject_v2']=function(r){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let s=j['get'](r['uuid']);if(s===undefined)return;if(s['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let t=0x3,u=a['gl']['FLOAT'],v=![],w=0x0,x=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],t,u,v,w,x);a['Shader']['colorAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],v,w,x));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);{const z=new b['Matrix4']();z['copy'](a['Camera']['cameraMatrix']);const A=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],z);a['Shader']['SetMatrix'](A,z);}let y=new b['Matrix4']();for(let B=0x0;B<s['listProcess']['length'];B++){let C=s['listProcess'][B];if(!C['action']['selection'])continue;if(C['processKind']!==0x0)continue;if(a['MultiView'][a['CameraIndex']]['UseisolateView']){let D=c['listMultiviewObjectManager'][C['action']['multiViewIdx']],E=D['findIndex'](F=>F===a['CameraIndex']);if(E<0x0)continue;}if(a['Shader']['GetUseUpdateMatrixManager']()&&C['action']['transformIdx']>0x0)a['Shader']['SetUpdateModelMatrixData'](r['uuid'],C['action']['transformIdx']),r['attribs']['a_matrixIndex']['buffer']!==null&&a['Shader']['updateMatrixAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_matrixIndex']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['updateMatrixAttributeLocation'],0x3,a['gl']['UNSIGNED_SHORT'],![],0x0,0x0));else{a['Shader']['SetUpdateModelMatrixData'](r['uuid'],-0x1);if(!y['equals'](C['action']['transform'])){y['copy'](C['action']['transform']);const F=new b['Matrix4']()['multiplyMatrices'](a['Camera']['cameraMatrix'],y),G=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],F);a['Shader']['SetMatrix'](G,F);}}a['gl']['drawElements'](d,C['length'],a['gl']['UNSIGNED_SHORT'],C['start']*0x2);}},this['UpdateRenderProcessBySelectPickObject_v3']=function(r){let s=r['sInd'];if(s===undefined||s['size']===0x0)return;if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let t=j['get'](r['uuid']);if(t===undefined)return;if(t['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&t['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let u=0x3,v=a['gl']['FLOAT'],w=![],x=0x0,y=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],u,v,w,x,y);r['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['colorAttributeLocation']>=0x0&&r['attribs']['a_color']['buffer']!==null&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],w,x,y));a['Shader']['uvAttributeLocation']>=0x0&&(r['attribs']['a_uv']['buffer']!==null?(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_uv']['buffer']),a['gl']['enableVertexAttribArray'](a['Shader']['uvAttributeLocation']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)):a['gl']['disableVertexAttribArray'](a['Shader']['uvAttributeLocation']));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);a['Shader']['tindAttributeLocation']!==null&&a['Shader']['tindAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_tInd']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['tindAttributeLocation'],0x1,a['gl']['UNSIGNED_INT'],w,x,y));{let z=a['ColorMap']['GetColorMapTexture']();(r['mapId']!=k||r['id_file']!=l)&&(a['ColorMap']['SetCurrentColorMapInfo'](r['id_file']),a['ColorMap']['SetColorMapTexture'](r['mapId']),k=r['mapId'],l=r['id_file']),a['Shader']['SetCurrentTexture']('u_ColorMap',a['gl']['TEXTURE_2D'],z);}a['gl']['drawElements'](d,r['attribs']['a_index']['array']['length'],a['gl']['UNSIGNED_SHORT'],0x0);},this['UpdateRenderProcessBySelectPickObject_v3_t']=function(r){let s=r['tInd'];if(s===undefined||s['size']===0x0)return;if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let t=j['get'](r['uuid']);if(t===undefined)return;if(t['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let u=0x3,v=a['gl']['FLOAT'],w=![],x=0x0,y=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],u,v,w,x,y);a['Shader']['colorAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],w,x,y));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);{const A=new b['Matrix4']();A['copy'](a['Camera']['cameraMatrix']);const B=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],A);a['Shader']['SetMatrix'](B,A);}let z=new b['Matrix4']();for(let C=0x0;C<t['listProcess']['length'];C++){let D=t['listProcess'][C];if(!D['action']['selection'])continue;if(D['processKind']!==0x0)continue;if(a['MultiView'][a['CameraIndex']]['UseisolateView']){let E=c['listMultiviewObjectManager'][D['action']['multiViewIdx']],F=E['findIndex'](G=>G===a['CameraIndex']);if(F<0x0)continue;}if(a['Shader']['GetUseUpdateMatrixManager']()&&D['action']['transformIdx']>0x0)a['Shader']['SetUpdateModelMatrixData'](r['uuid'],D['action']['transformIdx']),r['attribs']['a_matrixIndex']['buffer']!==null&&a['Shader']['updateMatrixAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_matrixIndex']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['updateMatrixAttributeLocation'],0x3,a['gl']['UNSIGNED_SHORT'],![],0x0,0x0));else{a['Shader']['SetUpdateModelMatrixData'](r['uuid'],-0x1);if(!z['equals'](D['action']['transform'])){z['copy'](D['action']['transform']);const G=new b['Matrix4']()['multiplyMatrices'](a['Camera']['cameraMatrix'],z),H=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],G);a['Shader']['SetMatrix'](H,G);}}a['gl']['drawElements'](d,D['length'],a['gl']['UNSIGNED_SHORT'],D['start']*0x2);}},this['UpdateRenderProcessByColorID_v2']=function(r){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let s=j['get'](r['uuid']);if(s===undefined)return;if(s['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&s['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let t=0x3,u=a['gl']['FLOAT'],v=![],w=0x0,x=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],t,u,v,w,x);r['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['colorAttributeLocation']>=0x0&&r['attribs']['a_color']['buffer']!==null&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],v,w,x));a['Shader']['uvAttributeLocation']>=0x0&&(r['attribs']['a_uv']['buffer']!==null?(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_uv']['buffer']),a['gl']['enableVertexAttribArray'](a['Shader']['uvAttributeLocation']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)):a['gl']['disableVertexAttribArray'](a['Shader']['uvAttributeLocation']));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);{const z=new b['Matrix4']()['copy'](a['Camera']['matMV']),A=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](A,z),a['Shader']['SetMVPMatrix'](a['Camera']['matMV'],a['Camera']['viewMatrix'],a['Camera']['projectionMatrixSrc']);}let y=new b['Matrix4']();for(let B=0x0;B<s['listProcess']['length'];B++){let C=s['listProcess'][B];if(C['processKind']===0x1)continue;if(a['MultiView'][a['CameraIndex']]['UseisolateView']){let D=c['listMultiviewObjectManager'][C['action']['multiViewIdx']],E=D['findIndex'](F=>F===a['CameraIndex']);if(E<0x0)continue;}if(!y['equals'](C['action']['transform'])){y['copy'](C['action']['transform']);const F=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],y),G=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],F),H=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrixSrc'],F);a['Shader']['SetMVPMatrix'](F,a['Camera']['viewMatrix'],H),a['Shader']['SetMatrix'](G,F);}a['Shader']['SetGLMaterial'](C['action']['material']),a['gl']['drawElements'](d,C['length'],a['gl']['UNSIGNED_SHORT'],C['start']*0x2);}},this['UpdateRenderProcessByColorID_v3']=function(r){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let s=j['get'](r['uuid']);if(s===undefined)return;if(s['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&s['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let t=0x3,u=a['gl']['FLOAT'],v=![],w=0x0,x=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],t,u,v,w,x);r['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['colorAttributeLocation']>=0x0&&r['attribs']['a_color']['buffer']!==null&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],v,w,x));a['Shader']['uvAttributeLocation']>=0x0&&(r['attribs']['a_uv']['buffer']!==null?(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_uv']['buffer']),a['gl']['enableVertexAttribArray'](a['Shader']['uvAttributeLocation']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)):a['gl']['disableVertexAttribArray'](a['Shader']['uvAttributeLocation']));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);a['Shader']['tindAttributeLocation']!==null&&a['Shader']['tindAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_tInd']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['tindAttributeLocation'],0x1,a['gl']['UNSIGNED_INT'],v,w,x));{let y=a['ColorMap']['GetColorMapTexture']();(r['mapId']!=k||r['id_file']!=l)&&(a['ColorMap']['SetCurrentColorMapInfo'](r['id_file']),a['ColorMap']['SetColorMapTexture'](r['mapId']),k=r['mapId'],l=r['id_file']),a['Shader']['SetCurrentTexture']('u_ColorMap',a['gl']['TEXTURE_2D'],y);}a['gl']['drawElements'](d,r['attribs']['a_index']['array']['length'],a['gl']['UNSIGNED_SHORT'],0x0);},this['UpdateRenderProcessByColorID_v3_t']=function(r){let s=r['tInd'];if(s===undefined||s['size']===0x0)return;if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let t=j['get'](r['uuid']);if(t===undefined)return;if(t['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&t['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let u=0x3,v=a['gl']['FLOAT'],w=![],x=0x0,y=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],u,v,w,x,y);r['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['colorAttributeLocation']>=0x0&&r['attribs']['a_color']['buffer']!==null&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],w,x,y));a['Shader']['uvAttributeLocation']>=0x0&&(r['attribs']['a_uv']['buffer']!==null?(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_uv']['buffer']),a['gl']['enableVertexAttribArray'](a['Shader']['uvAttributeLocation']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)):a['gl']['disableVertexAttribArray'](a['Shader']['uvAttributeLocation']));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);{const A=new b['Matrix4']()['copy'](a['Camera']['matMV']),B=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](B,A),a['Shader']['SetMVPMatrix'](a['Camera']['matMV'],a['Camera']['viewMatrix'],a['Camera']['projectionMatrixSrc']);}let z=new b['Matrix4']();for(let C=0x0;C<s['size'];C++){let D=t['listProcess'][Array['from'](s)[C]];if(D===undefined)continue;if(D['processKind']===0x1)continue;if(a['MultiView'][a['CameraIndex']]['UseisolateView']){let E=c['listMultiviewObjectManager'][D['action']['multiViewIdx']],F=E['findIndex'](G=>G===a['CameraIndex']);if(F<0x0)continue;}z['copy'](D['action']['transform']);if(!z['equals'](new b['Matrix4']())){const G=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],z),H=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],G),I=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrixSrc'],G);a['Shader']['SetMVPMatrix'](G,a['Camera']['viewMatrix'],I),a['Shader']['SetMatrix'](H,G),a['Shader']['SetGLMaterial'](D['action']['material']),a['gl']['drawElements'](d,D['length'],a['gl']['UNSIGNED_SHORT'],D['start']*0x2);}}},this['UpdateRenderProcessByColorIDByMatrix_v2']=function(r,s,t){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let u=j['get'](r['uuid']);if(u===undefined)return;if(u['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&u['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let v=0x3,w=a['gl']['FLOAT'],x=![],y=0x0,z=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],v,w,x,y,z);r['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['colorAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],x,y,z));a['UV_DEBUG']&&(r['attribs']['a_uv']['buffer']!==null&&a['Shader']['uvAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_uv']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);{const B=new b['Matrix4']()['copy'](t),C=new b['Matrix4']()['multiplyMatrices'](s,t);a['Shader']['SetMatrix'](C,B);}let A=new b['Matrix4']();for(let D=0x0;D<u['listProcess']['length'];D++){let E=u['listProcess'][D];if(E['processKind']!==0x0)continue;if(a['MultiView'][a['CameraIndex']]['UseisolateView']){let F=c['listMultiviewObjectManager'][E['action']['multiViewIdx']],G=F['findIndex'](H=>H===a['CameraIndex']);if(G<0x0)continue;}if(a['Shader']['GetUseUpdateMatrixManager']()&&E['action']['transformIdx']>0x0)a['Shader']['SetUpdateModelMatrixData'](r['uuid'],E['action']['transformIdx']),r['attribs']['a_matrixIndex']['buffer']!==null&&a['Shader']['updateMatrixAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_matrixIndex']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['updateMatrixAttributeLocation'],0x3,a['gl']['UNSIGNED_SHORT'],![],0x0,0x0));else{a['Shader']['SetUpdateModelMatrixData'](r['uuid'],-0x1);if(!A['equals'](E['action']['transform'])){A['copy'](E['action']['transform']);const H=new b['Matrix4']()['multiplyMatrices'](t,A),I=new b['Matrix4']()['multiplyMatrices'](s,H);a['Shader']['SetMatrix'](I,H);}}a['Shader']['SetGLMaterial'](E['action']['material']),a['gl']['drawElements'](d,E['length'],a['gl']['UNSIGNED_SHORT'],E['start']*0x2);}},this['UpdateRenderProcessByColorIDByMatrix_v3']=function(r){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let s=j['get'](r['uuid']);if(s===undefined)return;if(s['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&s['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let t=0x3,u=a['gl']['FLOAT'],v=![],w=0x0,x=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],t,u,v,w,x),a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']),a['gl']['drawElements'](d,r['attribs']['a_index']['array']['length'],a['gl']['UNSIGNED_SHORT'],0x0);},this['UpdateRenderProcessByCustomEdgeColorID_v2']=function(r){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let s=j['get'](r['uuid']);if(s===undefined)return;if(s['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&s['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0);r['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['colorAttributeLocation']>=0x0&&r['attribs']['a_color']['buffer']!==null&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],![],0x0,0x0));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);{const u=new b['Matrix4']()['copy'](a['Camera']['matMV']),v=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](v,u);}let t=new b['Matrix4']();for(let w=0x0;w<s['listProcess']['length'];w++){let x=s['listProcess'][w];if(!x['action']['useCustomEdge'])continue;if(x['processKind']===0x1)continue;if(!t['equals'](x['action']['transform'])){t['copy'](x['action']['transform']);const y=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],t),z=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],y);a['Shader']['SetMatrix'](z,y);}a['Shader']['SetGLMaterial'](x['action']['material']),a['gl']['drawElements'](d,x['length'],a['gl']['UNSIGNED_SHORT'],x['start']*0x2);}},this['UpdateRenderProcessByGroupIdx']=function(r,s){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let t=j['get'](r['uuid']);if(t===undefined)return;if(t['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&t['occluded'])return 0x0;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0);r['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['colorAttributeLocation']>=0x0&&r['attribs']['a_color']['buffer']!==null&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],![],0x0,0x0));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);{const v=new b['Matrix4']()['copy'](a['Camera']['matMV']),w=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](w,v);}let u=new b['Matrix4']();for(let x=0x0;x<t['listProcess']['length'];x++){let y=t['listProcess'][x];if(y['action']['groupIdx']!==s)continue;if(y['processKind']===0x1)continue;if(!u['equals'](y['action']['transform'])){u['copy'](y['action']['transform']);const z=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],u),A=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],z);a['Shader']['SetMatrix'](A,z);}a['gl']['drawElements'](d,y['length'],a['gl']['UNSIGNED_SHORT'],y['start']*0x2);}},this['UpdateRenderProcessByGroupColor']=function(r,s,t,u){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let v=j['get'](r['uuid']);if(v===undefined)return;if(v['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&v['occluded'])return 0x0;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0);r['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['colorAttributeLocation']>=0x0&&r['attribs']['a_color']['buffer']!==null&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],![],0x0,0x0));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);{const x=new b['Matrix4']()['copy'](a['Camera']['matMV']),y=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](y,x);}let w=new b['Matrix4']();for(let z=0x0;z<v['listProcess']['length'];z++){let A=v['listProcess'][z];if(A['action']['groupIdx']>=0x0){if(!s[A['action']['groupIdx']]['effect'])continue;}if(A['processKind']===0x1)continue;if(!w['equals'](A['action']['transform'])){w['copy'](A['action']['transform']);const B=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],w),C=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],B);a['Shader']['SetMatrix'](C,B);}if(A['action']['groupIdx']<0x0){let D=u['glColor']();a['Shader']['SetGLColor'](D['r'],D['g'],D['b'],D['a']);}else{let E=t[A['action']['groupIdx']]['glColor']();a['Shader']['SetGLColor'](E['r'],E['g'],E['b'],E['a']);}a['gl']['drawElements'](d,A['length'],a['gl']['UNSIGNED_SHORT'],A['start']*0x2);}},this['UpdateRenderProcessByObjectOneColor_v2']=function(r,s){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let t=j['get'](r['uuid']);if(t===undefined)return;if(t['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&t['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let u=0x3,v=a['gl']['FLOAT'],w=![],x=0x0,y=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],u,v,w,x,y);r['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],u,v,w,x,y));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);{a['Shader']['SetMatrix'](a['Camera']['matMVP'],a['Camera']['matMV']);let A=s===undefined?new b['Color'](0x0,0x0,0x0,0xff):s,B=A['glColor']();a['Shader']['SetGLColor'](B['r'],B['g'],B['b'],B['a']);}let z=new b['Matrix4']();for(let C=0x0;C<t['listProcess']['length'];C++){let D=t['listProcess'][C];if(D['processKind']===0x1)continue;if(a['MultiView'][a['CameraIndex']]['UseisolateView']){let E=c['listMultiviewObjectManager'][D['action']['multiViewIdx']],F=E['findIndex'](G=>G===a['CameraIndex']);if(F<0x0)continue;}if(a['Shader']['GetUseUpdateMatrixManager']()&&D['action']['transformIdx']>0x0)a['Shader']['SetUpdateModelMatrixData'](r['uuid'],D['action']['transformIdx']),r['attribs']['a_matrixIndex']['buffer']!==null&&a['Shader']['updateMatrixAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_matrixIndex']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['updateMatrixAttributeLocation'],0x3,a['gl']['UNSIGNED_SHORT'],![],0x0,0x0));else{a['Shader']['SetUpdateModelMatrixData'](r['uuid'],-0x1,-0x1);if(!z['equals'](D['action']['transform'])){z['copy'](D['action']['transform']);const G=new b['Matrix4']()['multiplyMatrices'](a['Camera']['cameraMatrix'],z),H=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],G);a['Shader']['SetMatrix'](H,G);}}a['gl']['drawElements'](d,D['length'],a['gl']['UNSIGNED_SHORT'],D['start']*0x2);}},this['UpdateRenderProcessByObjectOneColor_v3']=function(r,s){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let t=j['get'](r['uuid']);if(t===undefined)return;if(t['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&t['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let u=0x3,v=a['gl']['FLOAT'],w=![],x=0x0,y=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],u,v,w,x,y);r['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],u,v,w,x,y));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);{a['Shader']['SetMatrix'](a['Camera']['matMVP'],a['Camera']['matMV']);let z=s===undefined?new b['Color'](0x0,0x0,0x0,0xff):s,A=z['glColor']();a['Shader']['SetGLColor'](A['r'],A['g'],A['b'],A['a']);}a['gl']['drawElements'](d,r['attribs']['a_index']['array']['length'],a['gl']['UNSIGNED_SHORT'],0x0);},this['UpdateRenderProcessByAnimationObject_v2']=function(r){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let s=j['get'](r['uuid']);if(s===undefined)return;if(s['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&s['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let t=0x3,u=a['gl']['FLOAT'],v=![],w=0x0,x=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],t,u,v,w,x),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],t,u,v,w,x);a['UV_DEBUG']&&(r['attribs']['a_uv']['buffer']!==null&&a['Shader']['uvAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_uv']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)));a['Shader']['subBipedIdxAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['sub']['biped']['a_biped']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['subBipedIdxAttributeLocation'],0x4,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['subBipedWeightAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['sub']['biped']['a_weight']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['subBipedWeightAttributeLocation'],0x4,a['gl']['FLOAT'],![],0x0,0x0));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);let y=r['tag'][0x0],z=y['color'];{const B=new b['Matrix4']()['copy'](a['Camera']['matMV']),C=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](C,B);}let A=new b['Matrix4']();for(let D=0x0;D<s['listProcess']['length'];D++){let E=s['listProcess'][D];if(E['processKind']===0x1)continue;let F=z;E['action']['color']!==undefined&&(F=E['action']['color']);if(E['action']['selection']&&a['Configuration']['Model']['Selection']['Mode']===b['Enum']['SelectionVisibleMode']['SHADED'])F=a['Configuration']['Model']['Selection']['Color'],a['Shader']['SetGLMaterial'](-0x1);else{a['Shader']['SetGLMaterial'](E['action']['material']);if(E['action']['material']>=0x0){let H=a['Material']['GetMaterial'](E['action']['material']);if(H!==undefined)F=H['color'];}}if(a['MultiView'][a['CameraIndex']]['UseisolateView']){let I=c['listMultiviewObjectManager'][E['action']['multiViewIdx']],J=I['findIndex'](K=>K===a['CameraIndex']);if(J<0x0)continue;}let G=F['glColor']();a['Shader']['SetGLColor'](G['r'],G['g'],G['b'],G['a']);if(!A['equals'](E['action']['transform'])){A['copy'](E['action']['transform']);const K=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],A),L=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],K);a['Shader']['SetMatrix'](L,K);}a['gl']['drawElements'](a['gl']['TRIANGLES'],E['length'],a['gl']['UNSIGNED_SHORT'],E['start']*0x2);}},this['UpdateRenderProcessByAnimationObjectOneColor_v2']=function(r,s){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let t=j['get'](r['uuid']);if(t===undefined)return;if(t['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&t['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let u=0x3,v=a['gl']['FLOAT'],w=![],x=0x0,y=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],u,v,w,x,y);r['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],u,v,w,x,y));a['UV_DEBUG']&&(r['attribs']['a_uv']['buffer']!==null&&a['Shader']['uvAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_uv']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)));a['Shader']['subBipedIdxAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['sub']['biped']['a_biped']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['subBipedIdxAttributeLocation'],0x4,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['subBipedWeightAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['sub']['biped']['a_weight']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['subBipedWeightAttributeLocation'],0x4,a['gl']['FLOAT'],![],0x0,0x0));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);{const A=new b['Matrix4']()['copy'](a['Camera']['matMV']),B=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](B,A);}let z=new b['Matrix4']();for(let C=0x0;C<t['listProcess']['length'];C++){let D=t['listProcess'][C];if(D['processKind']===0x1)continue;if(a['MultiView'][a['CameraIndex']]['UseisolateView']){let G=c['listMultiviewObjectManager'][D['action']['multiViewIdx']],H=G['findIndex'](I=>I===a['CameraIndex']);if(H<0x0)continue;}let E=s,F=E['glColor']();a['Shader']['SetGLColor'](F['r'],F['g'],F['b'],F['a']);if(!z['equals'](D['action']['transform'])){z['copy'](D['action']['transform']);const I=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],z),J=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],I);a['Shader']['SetMatrix'](J,I);}a['gl']['drawElements'](a['gl']['TRIANGLES'],D['length'],a['gl']['UNSIGNED_SHORT'],D['start']*0x2);}},this['UpdateRenderProcessByPickAnimationObject_v2']=function(r){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let s=j['get'](r['uuid']);if(s===undefined)return;if(s['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&s['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let t=0x3,u=a['gl']['FLOAT'],v=![],w=0x0,x=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],t,u,v,w,x);a['Shader']['colorAttributeLocation']>=0x0&&r['attribs']['a_color']['buffer']!==null&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],v,w,x));a['Shader']['subBipedIdxAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['sub']['biped']['a_biped']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['subBipedIdxAttributeLocation'],0x4,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['subBipedWeightAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['sub']['biped']['a_weight']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['subBipedWeightAttributeLocation'],0x4,a['gl']['FLOAT'],![],0x0,0x0));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);{const z=new b['Matrix4']()['copy'](a['Camera']['matMV']),A=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](A,z);}let y=new b['Matrix4']();for(let B=0x0;B<s['listProcess']['length'];B++){let C=s['listProcess'][B];if(!y['equals'](C['action']['transform'])){y['copy'](C['action']['transform']);const D=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],y),E=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],D);a['Shader']['SetMatrix'](E,D);}a['gl']['drawElements'](a['gl']['TRIANGLES'],C['length'],a['gl']['UNSIGNED_SHORT'],C['start']*0x2);}},this['UpdateRenderProcessByLinesOneColor_v2']=function(r,s){if(a['Shader']['currentShaderType']===undefined)return;if(!r['flag']['renderEnable'])return;let t=j['get'](r['uuid']);if(t===undefined)return;if(t['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&t['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let u=0x3,v=a['gl']['FLOAT'],w=![],x=0x0,y=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],u,v,w,x,y);let z=a['gl']['getAttribLocation'](a['Shader']['currentProgram'],'a_nextPosition');z>=0x0&&(a['gl']['enableVertexAttribArray'](z),a['gl']['vertexAttribPointer'](z,u,v,w,0x0,0x3));r['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],u,v,w,x,y));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);{a['Shader']['SetMatrix'](a['Camera']['matMVP'],a['Camera']['matMV']);let B=s===undefined?new b['Color'](0x0,0x0,0x0,0xff):s,C=B['glColor']();a['Shader']['SetGLColor'](C['r'],C['g'],C['b'],C['a']);}let A=new b['Matrix4']();for(let D=0x0;D<t['listProcess']['length'];D++){let E=t['listProcess'][D];if(E['processKind']===0x1)continue;if(a['Shader']['GetUseUpdateMatrixManager']()&&E['action']['transformIdx']>0x0)a['Shader']['SetUpdateModelMatrixData'](r['uuid'],E['action']['transformIdx']),r['attribs']['a_matrixIndex']['buffer']!==null&&a['Shader']['updateMatrixAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_matrixIndex']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['updateMatrixAttributeLocation'],0x3,a['gl']['UNSIGNED_SHORT'],![],0x0,0x0));else{a['Shader']['SetUpdateModelMatrixData'](r['uuid'],-0x1,-0x1);if(!A['equals'](E['action']['transform'])){A['copy'](E['action']['transform']);const F=new b['Matrix4']()['multiplyMatrices'](a['Camera']['cameraMatrix'],A),G=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],F);a['Shader']['SetMatrix'](G,F);}}a['gl']['drawElements'](a['gl']['LINES'],E['length'],a['gl']['UNSIGNED_SHORT'],E['start']*0x2);}z>=0x0&&a['gl']['disableVertexAttribArray'](z);},this['UpdateRenderProcessByObjectOcclusion_v2']=function(r,s){if(a['Shader']['currentShaderType']===undefined)return;let t=j['get'](r['uuid']);if(t===undefined)return;if(t['query']===undefined)return;if(t['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(t['listProcess']['length']>0x1){t['renderEnableOcclusion']=!![];return;}if(t['queryInProgress']&&a['gl']['getQueryParameter'](t['query'],a['gl']['QUERY_RESULT_AVAILABLE'])){let A=!a['gl']['getQueryParameter'](t['query'],a['gl']['QUERY_RESULT']);A!=t['occluded']&&(t['renderEnableOcclusion']=!A),t['occluded']=A,t['queryInProgress']=![],a['Renderer']['occlusionProcessCount']--;}if(t['occluded'])a['Renderer']['AddOcclusionCullingCount']();if(t['queryInProgress']){t['renderEnableOcclusion']=!t['occluded'];return;}if(!r['flag']['renderEnable'])return;if(t['listProcess']['length']<=0x0)return;if(r['attribs']['a_index']['buffer']===null)return;if(t['queryInProgress'])return;a['gl']['beginQuery'](a['gl']['ANY_SAMPLES_PASSED_CONSERVATIVE'],t['query']),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_position']['buffer']);let u=0x3,v=a['gl']['FLOAT'],w=![],x=0x0,y=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],u,v,w,x,y);r['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],u,v,w,x,y));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],r['attribs']['a_index']['buffer']);{a['Shader']['SetMatrix'](a['Camera']['matMVP'],a['Camera']['matMV']);let B=s===undefined?new b['Color'](0x0,0x0,0x0,0xff):s,C=B['glColor']();a['Shader']['SetGLColor'](C['r'],C['g'],C['b'],C['a']);}let z=new b['Matrix4']();for(let D=0x0;D<t['listProcess']['length'];D++){let E=t['listProcess'][D];if(E['processKind']===0x1)continue;if(a['Shader']['GetUseUpdateMatrixManager']()&&E['action']['transformIdx']>0x0)a['Shader']['SetUpdateModelMatrixData'](r['uuid'],E['action']['transformIdx']),r['attribs']['a_matrixIndex']['buffer']!==null&&a['Shader']['updateMatrixAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['attribs']['a_matrixIndex']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['updateMatrixAttributeLocation'],0x3,a['gl']['UNSIGNED_SHORT'],![],0x0,0x0));else{a['Shader']['SetUpdateModelMatrixData'](r['uuid'],-0x1,-0x1);if(!z['equals'](E['action']['transform'])){z['copy'](E['action']['transform']);const F=new b['Matrix4']()['multiplyMatrices'](a['Camera']['cameraMatrix'],z),G=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],F);a['Shader']['SetMatrix'](G,F);}}a['gl']['drawElements'](a['gl']['TRIANGLES'],E['length'],a['gl']['UNSIGNED_SHORT'],E['start']*0x2);}a['gl']['endQuery'](a['gl']['ANY_SAMPLES_PASSED_CONSERVATIVE']),t['queryInProgress']=!![],a['Renderer']['occlusionProcessCount']++,t['renderEnableOcclusion']=!t['occluded'];},this['Util_RenderQuad']=function(r){if(a['Shader']['currentShaderType']===undefined)return;let s=undefined;if(r===undefined||!r)s=h['get'](0x0);else s=h['get'](0x1);if(s===undefined){let t;r===undefined||!r?(t=[-0x1,-0x1,0x0,0x1,-0x1,0x0,-0x1,0x1,0x0,0x1,0x1,0x0],s=i(0x0)):(t=[-0x1,0x1,0x0,0x1,0x1,0x0,-0x1,-0x1,0x0,0x1,-0x1,0x0],s=i(0x1));let u=[0x0,0x0,0x1,0x0,0x0,0x1,0x1,0x1],v=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],v),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(t),a['gl']['STATIC_DRAW']);let w=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],w),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(u),a['gl']['STATIC_DRAW']),s['positionBuffer']=v,s['uvBuffer']=w,h['set'](s['id'],s);}a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],s['positionBuffer']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['Shader']['uvAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],s['uvBuffer']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)),a['gl']['drawArrays'](a['gl']['TRIANGLE_STRIP'],0x0,0x4);},this['Util_RenderCube']=function(){if(a['Shader']['currentShaderType']===undefined)return;let r=h['get'](0x2);if(r===undefined){r=i(0x2);let s=[-0x1,-0x1,-0x1,0x1,0x1,-0x1,0x1,-0x1,-0x1,0x1,0x1,-0x1,-0x1,-0x1,-0x1,-0x1,0x1,-0x1,-0x1,-0x1,0x1,0x1,-0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,-0x1,0x1,0x1,-0x1,-0x1,0x1,-0x1,0x1,0x1,-0x1,0x1,-0x1,-0x1,-0x1,-0x1,-0x1,-0x1,-0x1,-0x1,-0x1,0x1,-0x1,0x1,0x1,0x1,0x1,0x1,0x1,-0x1,-0x1,0x1,0x1,-0x1,0x1,-0x1,-0x1,0x1,0x1,0x1,0x1,-0x1,0x1,-0x1,-0x1,-0x1,0x1,-0x1,-0x1,0x1,-0x1,0x1,0x1,-0x1,0x1,-0x1,-0x1,0x1,-0x1,-0x1,-0x1,-0x1,0x1,-0x1,0x1,0x1,0x1,0x1,0x1,-0x1,0x1,0x1,0x1,-0x1,0x1,-0x1,-0x1,0x1,0x1],t=[0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0],u=[0x0,0x0,0x1,0x1,0x1,0x0,0x1,0x1,0x0,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x1,0x1,0x1,0x1,0x0,0x1,0x0,0x0,0x1,0x0,0x1,0x1,0x0,0x1,0x0,0x1,0x0,0x0,0x1,0x0,0x1,0x0,0x0,0x1,0x1,0x1,0x0,0x1,0x1,0x0,0x0,0x0,0x0,0x1,0x1,0x1,0x1,0x0,0x1,0x0,0x0,0x0,0x0,0x1,0x0,0x1,0x1,0x0,0x1,0x1,0x1,0x0,0x0,0x1,0x0,0x0],v=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],v),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(s),a['gl']['STATIC_DRAW']);let w=undefined;w=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],w),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(t),a['gl']['STATIC_DRAW']);let x=undefined;x=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],x),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(u),a['gl']['STATIC_DRAW']),r['positionBuffer']=v,r['normalBuffer']=w,r['uvBuffer']=x,h['set'](r['id'],r);}a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['positionBuffer']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['normalBuffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0)),a['Shader']['uvAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['uvBuffer']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)),a['gl']['drawArrays'](a['gl']['TRIANGLES'],0x0,0x24);},this['Util_RenderRain']=function(r,s,t,u,w){if(a['Shader']['currentShaderType']===undefined)return;if(s===0x0)return;let A=h['get'](0x3),B=Math['abs'](r['max']['x']-r['min']['x'])*0.5,C=Math['abs'](r['max']['y']-r['min']['y'])*0.5,D=Math['abs'](r['max']['z']-r['min']['z'])*0.5,E=0x0,F=[],G=0x0,H=[],I=0x0,J=[];if(A===undefined){A=i(0x3);let N=[],O=[],P=[],Q=[],R=0x0,S=0x0,T=0x0,U=0x0,V=[],W=[],X=[];for(let Z=0x0;Z<w;Z++){let a0=Math['random'](),a1=Math['random'](),a2=Math['random']();a0=(a0-0.5)*0x2,a1=(a1-0.5)*0x2,a2=(a2-0.5)*0x2,a0=r['center']['x']+a0*B,a1=r['center']['y']+a1*C,a2=r['center']['z']+a2*D;let a3=new b['Vector3'](a0,a1,a2);V[Z]=a3;let a4=0.3+Math['random']()*0.7*0x2,a5=0.6+Math['random']()*1.2*0x28,a6=Math['random']();W[Z]=new b['Vector3'](a4,a5,a6);let a7=0.25,a8=Math['floor'](Math['random']()*0x4),a9=0x0;X[Z]=new b['Vector3'](a7*a8,a7*a9,0x0);}let Y;for(let aa=0x0;aa<w;aa++){let ab=V[aa],ac=W[aa],ad=X[aa];Y=ab,N[R]=Y['x'],R++,N[R]=Y['y'],R++,N[R]=Y['z'],R++,O[S]=ac['x'],S++,O[S]=ac['y'],S++,O[S]=ac['z'],S++,P[T]=0x1,T++,P[T]=0x1,T++,P[T]=0x1,T++,P[T]=0x0,T++,Q[U]=ad['x'],U++,Q[U]=ad['y'],U++;}A['positionArray']=N,A['normalArray']=O,A['colorArray']=P,A['uvArray']=Q,h['set'](A['id'],A);return;}else{let ae=a['RenderProcessTime']-a['LastRenderProcessTime'],af=ae*u,ag=0.001,ah=new b['Matrix4']()['copy'](a['Camera']['matMVP']),ai=[],aj=[],ak=function(){let ap={'depth':0x0,'index':-0x1};return ap;},al=new b['Matrix4']()['copy'](a['Camera']['matMV']);al['setPosition'](new b['Vector3']());let am=new b['Matrix4']()['getInverse'](al),an=new b['Vector3'](0x1,0x0,0x0),ao=new b['Vector3'](0x0,0x1,0x0);an['applyMatrix4'](am),ao['applyMatrix4'](am);for(let ap=0x0,aq=A['positionArray']['length']/0x3;ap<aq;ap++){let ar=ap*0x3,as=ap*0x3,at=new b['Vector3'](A['positionArray'][ar+0x0],A['positionArray'][ar+0x1],A['positionArray'][ar+0x2]),au=0x0;{const ay=t['x']*af,az=t['y']*af,aA=t['z']*af;at['add'](new b['Vector3'](ay,az,aA));if(!r['isInBoundBox'](at,ag))au++;}if(au===0x1){let aB=Math['random'](),aC=Math['random'](),aD=Math['random']();aB=(aB-0.5)*0x2,aC=(aC-0.5)*0x2,aB=r['center']['x']+aB*B,aC=r['center']['y']+aC*C,aD=r['center']['z']+aD*D;let aE=new b['Vector3'](aB,aC,aD),aF=new b['Vector3']()['subVectors'](aE,at);at=at['add'](aF);}A['positionArray'][ar+0x0]=at['x'],A['positionArray'][ar+0x1]=at['y'],A['positionArray'][ar+0x2]=at['z'],ai[ap]=at;let av=ak();av['depth']=new b['Vector3']()['copy'](at)['applyMatrix4'](ah)['z'],av['index']=ap,aj[ap]=av;let aw=ap*0x4,ax=0x1;at['z']>r['max']['z']-s&&(at['z']>r['max']['z']?ax=0x0:(ax=Math['abs'](r['max']['z']-at['z'])/s,ax*=0.5,ax=Math['min'](0x1,ax),ax=Math['max'](0x0,ax))),A['colorArray'][aw+0x3]=ax;}aj['sort'](function(aG,aH){if(aG['depth']<aH['depth'])return 0x1;if(aG['depth']>aH['depth'])return-0x1;return 0x0;});for(let aG=0x0,aH=ai['length'];aG<aH;aG++){if(aj[aG]['depth']>0x1)continue;let aI=aj[aG]['index']*0x4,aJ=A['colorArray'][aI+0x0],aK=A['colorArray'][aI+0x1],aL=A['colorArray'][aI+0x2],aM=A['colorArray'][aI+0x3],aN=ai[aj[aG]['index']],aO=Math['random']()*(s-s/0x2)+0x1,aP=aj[aG]['index']*0x3,aQ=A['normalArray'][aP+0x0],aR=A['normalArray'][aP+0x1],aS=aj[aG]['index']*0x2,aT=a['MeshProcess']['GetPanel3DVertices'](aN,an,ao,s*aQ,s*aR,!![]);for(let aU=0x0;aU<aT['vertices']['length'];aU++){F[E]=aT['vertices'][aU],E++;}for(let aV=0x0;aV<aT['vertices']['length'];aV+=0x3){H[G]=aJ,H[G+0x1]=aK,H[G+0x2]=aL,H[G+0x3]=aM,G+=0x4;}for(let aW=0x0;aW<aT['uv']['length'];aW+=0x2){let aX=aT['uv'][aW+0x0],aY=aT['uv'][aW+0x1];aX*=0.25,J[I]=aX+A['uvArray'][aS+0x0],I++,J[I]=aY+A['uvArray'][aS+0x1],I++;}}}let K=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],K),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(F),a['gl']['STATIC_DRAW']);let L=undefined;a['Shader']['colorAttributeLocation']>=0x0&&(H['length']>0x0?(a['gl']['enableVertexAttribArray'](a['Shader']['colorAttributeLocation']),L=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],L),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(H),a['gl']['STATIC_DRAW'])):a['gl']['disableVertexAttribArray'](a['Shader']['colorAttributeLocation']));let M=undefined;a['Shader']['uvAttributeLocation']>=0x0&&(J['length']>0x0?(a['gl']['enableVertexAttribArray'](a['Shader']['uvAttributeLocation']),M=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],M),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(J),a['gl']['STATIC_DRAW'])):a['gl']['disableVertexAttribArray'](a['Shader']['uvAttributeLocation']));a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],K),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0);L!==undefined&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],L),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['FLOAT'],![],0x0,0x0));M!==undefined&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],M),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0));a['gl']['drawArrays'](a['gl']['TRIANGLES'],0x0,E/0x3);if(K!==undefined)a['gl']['deleteBuffer'](K);if(L!==undefined)a['gl']['deleteBuffer'](L);if(M!==undefined)a['gl']['deleteBuffer'](M);},this['Util_RenderScreenRain']=function(){if(a['Shader']['currentShaderType']===undefined)return;let r=h['get'](0x3),s=0x3e8;if(r===undefined){r=i(0x3);let t=new b['Vector3'](0x1,0x0,0x0),u=new b['Vector3'](0x0,0x1,0x0),v=new b['Vector3'](0x0,0x0,0x1),w=0.002,A=0.04,B=[],C=[],D=[0x0,0x0,0x0,0x1,0x1,0x0,0x0,0x1,0x1,0x0,0x1,0x1],E=0x0,F=0x0,G=[];for(let J=0x0;J<s;J++){let K=Math['random'](),L=Math['random'](),M=Math['random']();K=(K-0.5)*0x2,L=(L-0.5)*0x2;if(L>0x0)L=L*0x2;M=M*0x5+0.1;let N=new b['Vector3'](K,L,M);G[J]=N;}G['sort']((O,P)=>{if(O['z']<P['z'])return-0x1;if(O['z']>P['z'])return 0x1;return 0x0;});if(![])for(let O=0x0;O<s;O++){let P=G[O],Q=new b['Vector3']()['addVectors'](P,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](t)['multiplyScalar'](-w),new b['Vector3']()['copy'](u)['multiplyScalar'](-A))),R=new b['Vector3']()['addVectors'](P,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](t)['multiplyScalar'](-w),new b['Vector3']()['copy'](u)['multiplyScalar'](A))),S=new b['Vector3']()['addVectors'](P,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](t)['multiplyScalar'](w),new b['Vector3']()['copy'](u)['multiplyScalar'](-A))),T=new b['Vector3']()['addVectors'](P,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](t)['multiplyScalar'](w),new b['Vector3']()['copy'](u)['multiplyScalar'](A)));B[E]=Q['x'],E++,B[E]=Q['y'],E++,B[E]=Q['z'],E++,B[E]=R['x'],E++,B[E]=R['y'],E++,B[E]=R['z'],E++,B[E]=S['x'],E++,B[E]=S['y'],E++,B[E]=S['z'],E++,B[E]=R['x'],E++,B[E]=R['y'],E++,B[E]=R['z'],E++,B[E]=S['x'],E++,B[E]=S['y'],E++,B[E]=S['z'],E++,B[E]=T['x'],E++,B[E]=T['y'],E++,B[E]=T['z'],E++;for(let U=0x0,V=D['length'];U<V;U++){C[F]=D[U],F++;}}for(let W=0x0;W<s;W++){let X=G[W],Y,Z,a0,a1;W%0x2===0x0?(Y=new b['Vector3']()['addVectors'](X,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](t)['multiplyScalar'](-w),new b['Vector3']()['copy'](u)['multiplyScalar'](-A))),Z=new b['Vector3']()['addVectors'](X,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](t)['multiplyScalar'](-w),new b['Vector3']()['copy'](u)['multiplyScalar'](A))),a0=new b['Vector3']()['addVectors'](X,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](t)['multiplyScalar'](w),new b['Vector3']()['copy'](u)['multiplyScalar'](-A))),a1=new b['Vector3']()['addVectors'](X,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](t)['multiplyScalar'](w),new b['Vector3']()['copy'](u)['multiplyScalar'](A)))):(Y=new b['Vector3']()['addVectors'](X,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](v)['multiplyScalar'](-w),new b['Vector3']()['copy'](u)['multiplyScalar'](-A))),Z=new b['Vector3']()['addVectors'](X,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](v)['multiplyScalar'](-w),new b['Vector3']()['copy'](u)['multiplyScalar'](A))),a0=new b['Vector3']()['addVectors'](X,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](v)['multiplyScalar'](w),new b['Vector3']()['copy'](u)['multiplyScalar'](-A))),a1=new b['Vector3']()['addVectors'](X,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](v)['multiplyScalar'](w),new b['Vector3']()['copy'](u)['multiplyScalar'](A))));B[E]=Y['x'],E++,B[E]=Y['y'],E++,B[E]=Y['z'],E++,B[E]=Z['x'],E++,B[E]=Z['y'],E++,B[E]=Z['z'],E++,B[E]=a0['x'],E++,B[E]=a0['y'],E++,B[E]=a0['z'],E++,B[E]=Z['x'],E++,B[E]=Z['y'],E++,B[E]=Z['z'],E++,B[E]=a0['x'],E++,B[E]=a0['y'],E++,B[E]=a0['z'],E++,B[E]=a1['x'],E++,B[E]=a1['y'],E++,B[E]=a1['z'],E++;for(let a2=0x0,a3=D['length'];a2<a3;a2++){C[F]=D[a2],F++;}}let H=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],H),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(B),a['gl']['STATIC_DRAW']);let I=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],I),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(C),a['gl']['STATIC_DRAW']),r['positionBuffer']=H,r['uvBuffer']=I,h['set'](r['id'],r);}a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['positionBuffer']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['Shader']['uvAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r['uvBuffer']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)),a['gl']['drawArrays'](a['gl']['TRIANGLES'],0x0,s*0x6);},this['Util_RenderSnow_v1']=function(r,s,t,u,w){if(a['Shader']['currentShaderType']===undefined)return;if(s===0x0)return;let A=h['get'](0x4),B=Math['abs'](r['max']['x']-r['min']['x'])*0.5,C=Math['abs'](r['max']['y']-r['min']['y'])*0.5,D=Math['abs'](r['max']['z']-r['min']['z'])*0.5,E=0x0,F=[],G=0x0,H=[];if(A===undefined){A=i(0x4);let L=[],M=[],N=[],O=0x0,P=0x0,Q=0x0,R=[],S=[];for(let U=0x0;U<w;U++){let V=Math['random'](),W=Math['random'](),X=Math['random']();V=(V-0.5)*0x2,W=(W-0.5)*0x2,X=(X-0.5)*0x2,V=r['center']['x']+V*B,W=r['center']['y']+W*C,X=r['center']['z']+X*D;let Y=new b['Vector3'](V,W,X);R[U]=Y;let Z=Math['random']()*t['x'],a0=Math['random']()*t['y'],a1=Math['random']()*t['z'];S[U]=new b['Vector3'](Z,a0,a1);}let T;for(let a2=0x0;a2<w;a2++){let a3=R[a2],a4=S[a2];T=a3,L[O]=T['x'],O++,L[O]=T['y'],O++,L[O]=T['z'],O++,M[P]=a4['x'],P++,M[P]=a4['y'],P++,M[P]=a4['z'],P++,N[Q]=0x1,Q++,N[Q]=0x1,Q++,N[Q]=0x1,Q++,N[Q]=0x0,Q++;}A['positionArray']=L,A['normalArray']=M,A['colorArray']=N,h['set'](A['id'],A);return;}else{let a5=a['RenderProcessTime']-a['LastRenderProcessTime'],a6=a5*u,a7=0.001,a8=new b['Matrix4']()['copy'](a['Camera']['matMVP']),a9=[],aa=[],ab=function(){let ag={'depth':0x0,'index':-0x1};return ag;},ac=new b['Matrix4']()['copy'](a['Camera']['matMV']);ac['setPosition'](new b['Vector3']());let ad=new b['Matrix4']()['getInverse'](ac),ae=new b['Vector3'](0x1,0x0,0x0),af=new b['Vector3'](0x0,0x1,0x0);ae['applyMatrix4'](ad),af['applyMatrix4'](ad);for(let ag=0x0,ah=A['positionArray']['length']/0x3;ag<ah;ag++){let ai=ag*0x3,aj=ag*0x3,ak=new b['Vector3'](A['positionArray'][ai+0x0],A['positionArray'][ai+0x1],A['positionArray'][ai+0x2]),al=new b['Vector3'](A['normalArray'][aj+0x0],A['normalArray'][aj+0x1],A['normalArray'][aj+0x2]),am=0x0;{const aq=0x0,ar=0x0,as=t['z']*a6;ak['add'](new b['Vector3'](aq,ar,as)),ak['z']<r['min']['z']&&am++;}if(am===0x1){let at=Math['random'](),au=Math['random'](),av=Math['random']();at=(at-0.5)*0x2,au=(au-0.5)*0x2,at=r['center']['x']+at*B,au=r['center']['y']+au*C,av=r['max']['z']+av*D;let aw=new b['Vector3'](at,au,av),ax=new b['Vector3']()['subVectors'](aw,ak);ak=ak['add'](ax);}A['positionArray'][ai+0x0]=ak['x'],A['positionArray'][ai+0x1]=ak['y'],A['positionArray'][ai+0x2]=ak['z'],a9[ag]=ak;let an=ab();an['depth']=new b['Vector3']()['copy'](ak)['applyMatrix4'](a8)['z'],an['index']=ag,aa[ag]=an;let ao=ag*0x4,ap=0x1;ak['z']>r['max']['z']-s&&(ak['z']>r['max']['z']?ap=0x0:(ap=Math['abs'](r['max']['z']-ak['z'])/s,ap*=0.5,ap=Math['min'](0x1,ap),ap=Math['max'](0x0,ap))),A['colorArray'][ao+0x3]=ap;}aa['sort'](function(ay,az){if(ay['depth']<az['depth'])return 0x1;if(ay['depth']>az['depth'])return-0x1;return 0x0;});for(let ay=0x0,az=a9['length'];ay<az;ay++){if(aa[ay]['depth']>0x1)continue;let aA=aa[ay]['index']*0x4,aB=A['colorArray'][aA+0x0],aC=A['colorArray'][aA+0x1],aD=A['colorArray'][aA+0x2],aE=A['colorArray'][aA+0x3],aF=a9[aa[ay]['index']],aG=a['MeshProcess']['Get2D3DCircleVertices'](aF,ae,af,s,0x0,0x168);for(let aH=0x1;aH<aG['vertices']['length'];aH++){for(let aI=0x1;aI>=0x0;aI--){F[E]=aG['vertices'][aH-aI]['x'],F[E+0x1]=aG['vertices'][aH-aI]['y'],F[E+0x2]=aG['vertices'][aH-aI]['z'],E+=0x3,H[G]=aB,H[G+0x1]=aC,H[G+0x2]=aD,H[G+0x3]=0x0,G+=0x4;}F[E]=aF['x'],F[E+0x1]=aF['y'],F[E+0x2]=aF['z'],E+=0x3,H[G]=aB,H[G+0x1]=aC,H[G+0x2]=aD,H[G+0x3]=aE,G+=0x4;}}}let I=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],I),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(F),a['gl']['STATIC_DRAW']);let J=undefined;a['Shader']['colorAttributeLocation']>=0x0&&(H['length']>0x0?(a['gl']['enableVertexAttribArray'](a['Shader']['colorAttributeLocation']),J=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],J),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(H),a['gl']['STATIC_DRAW'])):a['gl']['disableVertexAttribArray'](a['Shader']['colorAttributeLocation']));let K=undefined;a['Shader']['uvAttributeLocation']>=0x0&&a['gl']['disableVertexAttribArray'](a['Shader']['uvAttributeLocation']);a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],I),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0);J!==undefined&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],J),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['FLOAT'],![],0x0,0x0));K!==undefined&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],K),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0));a['gl']['drawArrays'](a['gl']['TRIANGLES'],0x0,E/0x3);if(I!==undefined)a['gl']['deleteBuffer'](I);if(J!==undefined)a['gl']['deleteBuffer'](J);if(K!==undefined)a['gl']['deleteBuffer'](K);},this['Util_RenderSnow']=function(r,s,t,u,w){if(a['Shader']['currentShaderType']===undefined)return;if(s===0x0)return;let A=h['get'](0x4),B=Math['abs'](r['max']['x']-r['min']['x'])*0.5,C=Math['abs'](r['max']['y']-r['min']['y'])*0.5,D=Math['abs'](r['max']['z']-r['min']['z'])*0.5,E=0x0,F=[],G=0x0,H=[],I=0x0,J=[];if(A===undefined){A=i(0x4);let N=[],O=[],P=[],Q=0x0,R=0x0,S=0x0,T=[],U=[];for(let W=0x0;W<w;W++){let X=Math['random'](),Y=Math['random'](),Z=Math['random']();X=(X-0.5)*0x2,Y=(Y-0.5)*0x2,Z=(Z-0.5)*0x2,X=r['center']['x']+X*B,Y=r['center']['y']+Y*C,Z=r['center']['z']+Z*D;let a0=new b['Vector3'](X,Y,Z);T[W]=a0;let a1=Math['random']()*t['x'],a2=Math['random']()*t['y'],a3=Math['random']()*t['z'];U[W]=new b['Vector3'](a1,a2,a3);}let V;for(let a4=0x0;a4<w;a4++){let a5=T[a4],a6=U[a4];V=a5,N[Q]=V['x'],Q++,N[Q]=V['y'],Q++,N[Q]=V['z'],Q++,O[R]=a6['x'],R++,O[R]=a6['y'],R++,O[R]=a6['z'],R++,P[S]=0x1,S++,P[S]=0x1,S++,P[S]=0x1,S++,P[S]=0x0,S++;}A['positionArray']=N,A['normalArray']=O,A['colorArray']=P,h['set'](A['id'],A);return;}else{let a7=a['RenderProcessTime']-a['LastRenderProcessTime'],a8=a7*u,a9=0.001,aa=new b['Matrix4']()['copy'](a['Camera']['matMVP']),ab=[],ac=[],ad=function(){let ai={'depth':0x0,'index':-0x1};return ai;},ae=new b['Matrix4']()['copy'](a['Camera']['matMV']);ae['setPosition'](new b['Vector3']());let af=new b['Matrix4']()['getInverse'](ae),ag=new b['Vector3'](0x1,0x0,0x0),ah=new b['Vector3'](0x0,0x1,0x0);ag['applyMatrix4'](af),ah['applyMatrix4'](af);for(let ai=0x0,aj=A['positionArray']['length']/0x3;ai<aj;ai++){let ak=ai*0x3,al=ai*0x3,am=new b['Vector3'](A['positionArray'][ak+0x0],A['positionArray'][ak+0x1],A['positionArray'][ak+0x2]),an=new b['Vector3'](A['normalArray'][al+0x0],A['normalArray'][al+0x1],A['normalArray'][al+0x2]),ao=0x0;{const as=0x0,at=0x0,au=t['z']*a8;am['add'](new b['Vector3'](as,at,au)),am['z']<r['min']['z']&&ao++;}if(ao===0x1){let av=Math['random'](),aw=Math['random'](),ax=Math['random']();av=(av-0.5)*0x2,aw=(aw-0.5)*0x2,av=r['center']['x']+av*B,aw=r['center']['y']+aw*C,ax=r['max']['z']+ax*D;let ay=new b['Vector3'](av,aw,ax),az=new b['Vector3']()['subVectors'](ay,am);am=am['add'](az);}A['positionArray'][ak+0x0]=am['x'],A['positionArray'][ak+0x1]=am['y'],A['positionArray'][ak+0x2]=am['z'],ab[ai]=am;let ap=ad();ap['depth']=new b['Vector3']()['copy'](am)['applyMatrix4'](aa)['z'],ap['index']=ai,ac[ai]=ap;let aq=ai*0x4,ar=0x1;am['z']>r['max']['z']-s&&(am['z']>r['max']['z']?ar=0x0:(ar=Math['abs'](r['max']['z']-am['z'])/s,ar*=0.5,ar=Math['min'](0x1,ar),ar=Math['max'](0x0,ar))),A['colorArray'][aq+0x3]=ar;}ac['sort'](function(aA,aB){if(aA['depth']<aB['depth'])return 0x1;if(aA['depth']>aB['depth'])return-0x1;return 0x0;});for(let aA=0x0,aB=ab['length'];aA<aB;aA++){if(ac[aA]['depth']>0x1)continue;let aC=ac[aA]['index']*0x4,aD=A['colorArray'][aC+0x0],aE=A['colorArray'][aC+0x1],aF=A['colorArray'][aC+0x2],aG=A['colorArray'][aC+0x3],aH=ab[ac[aA]['index']],aI=a['MeshProcess']['GetPanel3DVertices'](aH,ag,ah,s,s,!![]);for(let aJ=0x0;aJ<aI['vertices']['length'];aJ++){F[E]=aI['vertices'][aJ],E++;}for(let aK=0x0;aK<aI['vertices']['length'];aK+=0x3){H[G]=aD,H[G+0x1]=aE,H[G+0x2]=aF,H[G+0x3]=aG,G+=0x4;}for(let aL=0x0;aL<aI['uv']['length'];aL++){J[I]=aI['uv'][aL],I++;}}}let K=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],K),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(F),a['gl']['STATIC_DRAW']);let L=undefined;a['Shader']['colorAttributeLocation']>=0x0&&(H['length']>0x0?(a['gl']['enableVertexAttribArray'](a['Shader']['colorAttributeLocation']),L=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],L),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(H),a['gl']['STATIC_DRAW'])):a['gl']['disableVertexAttribArray'](a['Shader']['colorAttributeLocation']));let M=undefined;a['Shader']['uvAttributeLocation']>=0x0&&(J['length']>0x0?(a['gl']['enableVertexAttribArray'](a['Shader']['uvAttributeLocation']),M=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],M),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(J),a['gl']['STATIC_DRAW'])):a['gl']['disableVertexAttribArray'](a['Shader']['uvAttributeLocation']));a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],K),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0);L!==undefined&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],L),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['FLOAT'],![],0x0,0x0));M!==undefined&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],M),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0));a['gl']['drawArrays'](a['gl']['TRIANGLES'],0x0,E/0x3);if(K!==undefined)a['gl']['deleteBuffer'](K);if(L!==undefined)a['gl']['deleteBuffer'](L);if(M!==undefined)a['gl']['deleteBuffer'](M);},this['Util_RenderScreenSnow']=function(){if(a['Shader']['currentShaderType']===undefined)return;let r=h['get'](0x4),s=0x258;if(r===undefined){r=i(0x4);let v=new b['Vector3'](0x1,0x0,0x0),w=new b['Vector3'](0x0,0x1,0x0),A=new b['Vector3'](0x0,0x0,0x1),B=0.008,C=0.008,D=[],E=[],F=[0x0,0x0,0x0,0x1,0x1,0x0,0x0,0x1,0x1,0x0,0x1,0x1],G=0x0,H=0x0,I=[];for(let J=0x0;J<s;J++){let K=Math['random'](),L=Math['random'](),M=Math['random']();K=(K-0.5)*0x2,L=(L-0.5)*0x2,M=M*-0x5+0.3;let N=new b['Vector3'](K,L,M);I[J]=N;}I['sort']((O,P)=>{if(O['z']<P['z'])return-0x1;if(O['z']>P['z'])return 0x1;return 0x0;});for(let O=0x0;O<s;O++){let P=I[O],Q,R,S,T;O%0x2===0x0?(Q=new b['Vector3']()['addVectors'](P,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](A)['multiplyScalar'](-B),new b['Vector3']()['copy'](v)['multiplyScalar'](-C))),R=new b['Vector3']()['addVectors'](P,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](A)['multiplyScalar'](-B),new b['Vector3']()['copy'](v)['multiplyScalar'](C))),S=new b['Vector3']()['addVectors'](P,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](A)['multiplyScalar'](B),new b['Vector3']()['copy'](v)['multiplyScalar'](-C))),T=new b['Vector3']()['addVectors'](P,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](A)['multiplyScalar'](B),new b['Vector3']()['copy'](v)['multiplyScalar'](C)))):(Q=new b['Vector3']()['addVectors'](P,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](A)['multiplyScalar'](-B),new b['Vector3']()['copy'](w)['multiplyScalar'](-C))),R=new b['Vector3']()['addVectors'](P,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](A)['multiplyScalar'](-B),new b['Vector3']()['copy'](w)['multiplyScalar'](C))),S=new b['Vector3']()['addVectors'](P,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](A)['multiplyScalar'](B),new b['Vector3']()['copy'](w)['multiplyScalar'](-C))),T=new b['Vector3']()['addVectors'](P,new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](A)['multiplyScalar'](B),new b['Vector3']()['copy'](w)['multiplyScalar'](C))));D[G]=Q['x'],G++,D[G]=Q['y'],G++,D[G]=Q['z'],G++,D[G]=R['x'],G++,D[G]=R['y'],G++,D[G]=R['z'],G++,D[G]=S['x'],G++,D[G]=S['y'],G++,D[G]=S['z'],G++,D[G]=R['x'],G++,D[G]=R['y'],G++,D[G]=R['z'],G++,D[G]=S['x'],G++,D[G]=S['y'],G++,D[G]=S['z'],G++,D[G]=T['x'],G++,D[G]=T['y'],G++,D[G]=T['z'],G++;for(let U=0x0,V=F['length'];U<V;U++){E[H]=F[U],H++;}}r['positionArray']=D,r['uvArray']=E,h['set'](r['id'],r);}else{let W=a['RenderProcessTime']-a['LastRenderProcessTime'];for(let X=0x0;X<r['positionArray']['length'];X+=0x12){let Y=[],Z=0x2;Y[0x0]=r['positionArray'][X+Z],Y[0x1]=r['positionArray'][X+0x3+Z],Y[0x2]=r['positionArray'][X+0x6+Z],Y[0x3]=r['positionArray'][X+0x9+Z],Y[0x4]=r['positionArray'][X+0xc+Z],Y[0x5]=r['positionArray'][X+0xf+Z];let a0=W*0.00015,a1=![];for(let a2=0x0;a2<0x6;a2++){Y[a2]+=a0;if(Y[a2]>0x1)a1=!![];}if(a1){let a3=Math['random']()*-0x5+0.3;for(let a4=0x0;a4<0x6;a4++)Y[a4]+=a3;}r['positionArray'][X+Z]=Y[0x0],r['positionArray'][X+0x3+Z]=Y[0x1],r['positionArray'][X+0x6+Z]=Y[0x2],r['positionArray'][X+0x9+Z]=Y[0x3],r['positionArray'][X+0xc+Z]=Y[0x4],r['positionArray'][X+0xf+Z]=Y[0x5];}}let t=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],t),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(r['positionArray']),a['gl']['STATIC_DRAW']);let u=undefined;a['Shader']['uvAttributeLocation']>=0x0&&(u=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],u),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(r['uvArray']),a['gl']['STATIC_DRAW']));a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],t),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0);a['Shader']['uvAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],u),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0));a['gl']['drawArrays'](a['gl']['TRIANGLES'],0x0,s*0x6);if(t!==undefined)a['gl']['deleteBuffer'](t);if(u!==undefined)a['gl']['deleteBuffer'](u);},this['Util_RenderCloud']=function(r,s,t,u,w){if(a['Shader']['currentShaderType']===undefined)return;if(s===0x0)return;let A=h['get'](0x6),B=Math['abs'](r['max']['x']-r['min']['x'])*0.5,C=Math['abs'](r['max']['y']-r['min']['y'])*0.5,D=Math['abs'](r['max']['z']-r['min']['z'])*0.5,E=0x0,F=[],G=0x0,H=[],I=0x0,J=[];if(A===undefined){A=i(0x6);let N=[],O=[],P=[],Q=[],R=[],S=0x0,T=0x0,U=0x0,V=0x0,W=[],X=[],Y=[];for(let a0=0x0;a0<w;a0++){let a1=Math['random'](),a2=Math['random'](),a3=Math['random']();a1=(a1-0.5)*0x2,a2=(a2-0.5)*0x2,a1=r['center']['x']+a1*B,a2=r['center']['y']+a2*C;let a4=s/0x2;a3=r['max']['z']-a3*a4;let a5=new b['Vector3'](a1,a2,a3);W[a0]=a5;let a6=0.3+Math['random']()*0.7,a7=a6,a8=Math['random']();X[a0]=new b['Vector3'](a6,a7,a8);let a9=0.5,aa=Math['floor'](Math['random']()*0x2),ab=Math['floor'](Math['random']()*0x2);Y[a0]=new b['Vector3'](a9*aa,a9*ab,0x0);}let Z;for(let ac=0x0;ac<w;ac++){let ad=W[ac],ae=X[ac],af=Y[ac];Z=ad,N[S]=Z['x'],S++,N[S]=Z['y'],S++,N[S]=Z['z'],S++,O[T]=ae['x'],T++,O[T]=ae['y'],T++,O[T]=ae['z'],T++,P[U]=0x1,U++,P[U]=0x1,U++,P[U]=0x1,U++,P[U]=0x0,U++,Q[V]=af['x'],V++,Q[V]=af['y'],V++,R[ac]=0.8+Math['random']()*0.2;}A['positionArray']=N,A['normalArray']=O,A['colorArray']=P,A['uvArray']=Q,A['animationArray']=R,h['set'](A['id'],A);return;}else{let ag=a['RenderProcessTime']-a['LastRenderProcessTime'],ah=ag*u,ai=0.001,aj=new b['Matrix4']()['copy'](a['Camera']['matMVP']),ak=[],al=[],am=function(){let ar={'depth':0x0,'index':-0x1};return ar;},an=new b['Matrix4']()['copy'](a['Camera']['matMV']);an['setPosition'](new b['Vector3']());let ao=new b['Matrix4']()['getInverse'](an),ap=new b['Vector3'](0x1,0x0,0x0),aq=new b['Vector3'](0x0,0x1,0x0);ap['applyMatrix4'](ao),aq['applyMatrix4'](ao);for(let ar=0x0,as=A['positionArray']['length']/0x3;ar<as;ar++){let at=ar*0x3,au=ar*0x3,av=new b['Vector3'](A['positionArray'][at+0x0],A['positionArray'][at+0x1],A['positionArray'][at+0x2]),aw=new b['Vector3'](A['normalArray'][au+0x0],A['normalArray'][au+0x1],A['normalArray'][au+0x2]),ax=A['animationArray'][ar],ay=0x0;{const aC=t['x']*ah*ax,aD=t['y']*ah*ax,aE=t['z']*ah*ax;av['add'](new b['Vector3'](aC,aD,aE));if(!r['isInBoundBox'](av,ai))ay++;}if(ay===0x1){let aF=Math['random'](),aG=Math['random']();aF=(aF-0.5)*0x2,aG=(aG-0.5)*0x2,aF=r['min']['x']-Math['abs'](r['center']['x'])+aF*B,aG=r['center']['y']+aG*C;let aH=new b['Vector3'](aF,aG,av['z']),aI=new b['Vector3']()['subVectors'](aH,av);av=av['add'](aI);}A['positionArray'][at+0x0]=av['x'],A['positionArray'][at+0x1]=av['y'],A['positionArray'][at+0x2]=av['z'],ak[ar]=av;let az=am();az['depth']=new b['Vector3']()['copy'](av)['applyMatrix4'](aj)['z'],az['index']=ar,al[ar]=az;let aA=ar*0x4,aB=0x1;if(av['x']>r['max']['x']-s)av['x']>r['max']['x']?aB=0x0:(aB=Math['abs'](r['max']['x']-av['x'])/s,aB*=0.5,aB=Math['min'](0x1,aB),aB=Math['max'](0x0,aB));else av['x']<r['min']['x']+s&&(av['x']<r['min']['x']?aB=0x0:(aB=Math['abs'](r['min']['x']-av['x'])/s,aB*=0.5,aB=Math['min'](0x1,aB),aB=Math['max'](0x0,aB)));A['colorArray'][aA+0x3]=aB;}al['sort'](function(aJ,aK){if(aJ['depth']<aK['depth'])return 0x1;if(aJ['depth']>aK['depth'])return-0x1;return 0x0;});for(let aJ=0x0,aK=ak['length'];aJ<aK;aJ++){if(al[aJ]['depth']>0x1)continue;let aL=al[aJ]['index']*0x4,aM=A['colorArray'][aL+0x0],aN=A['colorArray'][aL+0x1],aO=A['colorArray'][aL+0x2],aP=A['colorArray'][aL+0x3],aQ=ak[al[aJ]['index']],aR=Math['random']()*(s-s/0x2)+0x1,aS=al[aJ]['index']*0x3,aT=A['normalArray'][aS+0x0],aU=A['normalArray'][aS+0x1],aV=al[aJ]['index']*0x2,aW=a['MeshProcess']['GetPanel3DVertices'](aQ,ap,aq,s*aT,s*aU,!![]);for(let aX=0x0;aX<aW['vertices']['length'];aX++){F[E]=aW['vertices'][aX],E++;}for(let aY=0x0;aY<aW['vertices']['length'];aY+=0x3){H[G]=aM,H[G+0x1]=aN,H[G+0x2]=aO,H[G+0x3]=aP,G+=0x4;}for(let aZ=0x0;aZ<aW['uv']['length'];aZ+=0x2){let b0=aW['uv'][aZ+0x0],b1=aW['uv'][aZ+0x1];b0*=0.5,b1*=0.5,J[I]=b0+A['uvArray'][aV+0x0],I++,J[I]=b1+A['uvArray'][aV+0x1],I++;}}}let K=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],K),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(F),a['gl']['STATIC_DRAW']);let L=undefined;a['Shader']['colorAttributeLocation']>=0x0&&(H['length']>0x0?(a['gl']['enableVertexAttribArray'](a['Shader']['colorAttributeLocation']),L=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],L),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(H),a['gl']['STATIC_DRAW'])):a['gl']['disableVertexAttribArray'](a['Shader']['colorAttributeLocation']));let M=undefined;a['Shader']['uvAttributeLocation']>=0x0&&(J['length']>0x0?(a['gl']['enableVertexAttribArray'](a['Shader']['uvAttributeLocation']),M=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],M),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(J),a['gl']['STATIC_DRAW'])):a['gl']['disableVertexAttribArray'](a['Shader']['uvAttributeLocation']));a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],K),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0);L!==undefined&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],L),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['FLOAT'],![],0x0,0x0));M!==undefined&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],M),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0));a['gl']['drawArrays'](a['gl']['TRIANGLES'],0x0,E/0x3);if(K!==undefined)a['gl']['deleteBuffer'](K);if(L!==undefined)a['gl']['deleteBuffer'](L);if(M!==undefined)a['gl']['deleteBuffer'](M);},this['Util_RenderMist']=function(r,s,t,u,w){if(a['Shader']['currentShaderType']===undefined)return;if(s===0x0)return;let A=h['get'](0x6),B=Math['abs'](r['max']['x']-r['min']['x'])*0.5,C=Math['abs'](r['max']['y']-r['min']['y'])*0.5,D=Math['abs'](r['max']['z']-r['min']['z'])*0.5,E=0x0,F=[],G=0x0,H=[],I=0x0,J=[];if(A===undefined){A=i(0x6);let N=[],O=[],P=[],Q=[],R=[],S=0x0,T=0x0,U=0x0,V=0x0,W=[],X=[],Y=[];for(let a0=0x0;a0<w;a0++){let a1=Math['random'](),a2=Math['random'](),a3=Math['random']();a1=(a1-0.5)*0x2,a2=(a2-0.5)*0x2,a1=r['center']['x']+a1*B,a2=r['center']['y']+a2*C,a3=r['min']['z']+a3*D;let a4=new b['Vector3'](a1,a2,a3);W[a0]=a4;let a5=0.3+Math['random']()*0.7,a6=a5,a7=Math['random']();X[a0]=new b['Vector3'](a5,a6,a7);let a8=0.5,a9=Math['floor'](Math['random']()*0x2),aa=Math['floor'](Math['random']()*0x2);Y[a0]=new b['Vector3'](a8*a9,a8*aa,0x0);}let Z;for(let ab=0x0;ab<w;ab++){let ac=W[ab],ad=X[ab],ae=Y[ab];Z=ac,N[S]=Z['x'],S++,N[S]=Z['y'],S++,N[S]=Z['z'],S++,O[T]=ad['x'],T++,O[T]=ad['y'],T++,O[T]=ad['z'],T++,P[U]=0x1,U++,P[U]=0x1,U++,P[U]=0x1,U++,P[U]=0x0,U++,Q[V]=ae['x'],V++,Q[V]=ae['y'],V++;if(ab%0x5===0x0)R[ab]=0x1+Math['random']()*0.2;else{if(ab%0x5===0x1)R[ab]=0x0+Math['random']()*2.5;else R[ab]=0x0;}R[ab]=Math['random']()*0x3;}A['positionArray']=N,A['normalArray']=O,A['colorArray']=P,A['uvArray']=Q,A['animationArray']=R,h['set'](A['id'],A);return;}else{let af=a['RenderProcessTime']-a['LastRenderProcessTime'],ag=af*u,ah=0.001,ai=new b['Matrix4']()['copy'](a['Camera']['matMVP']),aj=[],ak=[],al=function(){let aq={'depth':0x0,'index':-0x1};return aq;},am=new b['Matrix4']()['copy'](a['Camera']['matMV']);am['setPosition'](new b['Vector3']());let an=new b['Matrix4']()['getInverse'](am),ao=new b['Vector3'](0x1,0x0,0x0),ap=new b['Vector3'](0x0,0x1,0x0);ao['applyMatrix4'](an),ap['applyMatrix4'](an);for(let aq=0x0,ar=A['positionArray']['length']/0x3;aq<ar;aq++){let as=aq*0x3,at=aq*0x3,au=new b['Vector3'](A['positionArray'][as+0x0],A['positionArray'][as+0x1],A['positionArray'][as+0x2]),av=new b['Vector3'](A['normalArray'][at+0x0],A['normalArray'][at+0x1],A['normalArray'][at+0x2]),aw=A['animationArray'][aq],ax=0x0;{const aB=t['x']*ag*aw,aC=t['y']*ag*aw,aD=t['z']*ag*aw;au['add'](new b['Vector3'](aB,aC,aD));if(!r['isInBoundBox'](au,ah))ax++;}if(ax===0x1){let aE=Math['random'](),aF=Math['random']();aE=(aE-0.5)*0x2,aF=(aF-0.5)*0x2,aE=r['min']['x'],aF=r['center']['y']+aF*C;let aG=new b['Vector3'](aE,aF,au['z']),aH=new b['Vector3']()['subVectors'](aG,au);au=au['add'](aH);}A['positionArray'][as+0x0]=au['x'],A['positionArray'][as+0x1]=au['y'],A['positionArray'][as+0x2]=au['z'],aj[aq]=au;let ay=al();ay['depth']=new b['Vector3']()['copy'](au)['applyMatrix4'](ai)['z'],ay['index']=aq,ak[aq]=ay;let az=aq*0x4,aA=0x1;if(au['x']>r['max']['x']-s)au['x']>r['max']['x']?aA=0x0:(aA=Math['abs'](r['max']['x']-au['x'])/s,aA*=0.5,aA=Math['min'](0x1,aA),aA=Math['max'](0x0,aA));else au['x']<r['min']['x']+s&&(au['x']<r['min']['x']?aA=0x0:(aA=Math['abs'](r['min']['x']-au['x'])/s,aA*=0.5,aA=Math['min'](0x1,aA),aA=Math['max'](0x0,aA)));A['colorArray'][az+0x3]=aA;}ak['sort'](function(aI,aJ){if(aI['depth']<aJ['depth'])return 0x1;if(aI['depth']>aJ['depth'])return-0x1;return 0x0;});for(let aI=0x0,aJ=aj['length'];aI<aJ;aI++){if(ak[aI]['depth']>0x1)continue;let aK=ak[aI]['index']*0x4,aL=A['colorArray'][aK+0x0],aM=A['colorArray'][aK+0x1],aN=A['colorArray'][aK+0x2],aO=A['colorArray'][aK+0x3],aP=aj[ak[aI]['index']],aQ=Math['random']()*(s-s/0x2)+0x1,aR=ak[aI]['index']*0x3,aS=A['normalArray'][aR+0x0],aT=A['normalArray'][aR+0x1],aU=ak[aI]['index']*0x2,aV=a['MeshProcess']['GetPanel3DVertices'](aP,ao,ap,s*aS,s*aT,!![]);for(let aW=0x0;aW<aV['vertices']['length'];aW++){F[E]=aV['vertices'][aW],E++;}for(let aX=0x0;aX<aV['vertices']['length'];aX+=0x3){H[G]=aL,H[G+0x1]=aM,H[G+0x2]=aN,H[G+0x3]=aO,G+=0x4;}for(let aY=0x0;aY<aV['uv']['length'];aY+=0x2){let aZ=aV['uv'][aY+0x0],b0=aV['uv'][aY+0x1];aZ*=0.5,b0*=0.5,J[I]=aZ+A['uvArray'][aU+0x0],I++,J[I]=b0+A['uvArray'][aU+0x1],I++;}}}let K=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],K),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(F),a['gl']['STATIC_DRAW']);let L=undefined;a['Shader']['colorAttributeLocation']>=0x0&&(H['length']>0x0?(a['gl']['enableVertexAttribArray'](a['Shader']['colorAttributeLocation']),L=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],L),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(H),a['gl']['STATIC_DRAW'])):a['gl']['disableVertexAttribArray'](a['Shader']['colorAttributeLocation']));let M=undefined;a['Shader']['uvAttributeLocation']>=0x0&&(J['length']>0x0?(a['gl']['enableVertexAttribArray'](a['Shader']['uvAttributeLocation']),M=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],M),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(J),a['gl']['STATIC_DRAW'])):a['gl']['disableVertexAttribArray'](a['Shader']['uvAttributeLocation']));a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],K),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0);L!==undefined&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],L),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['FLOAT'],![],0x0,0x0));M!==undefined&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],M),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0));a['gl']['drawArrays'](a['gl']['TRIANGLES'],0x0,E/0x3);if(K!==undefined)a['gl']['deleteBuffer'](K);if(L!==undefined)a['gl']['deleteBuffer'](L);if(M!==undefined)a['gl']['deleteBuffer'](M);},this['Util_RenderViewDistBBox']=function(r,s){let t=h['get'](0x5);const u=new b['Matrix4']()['copy'](a['Camera']['matMV']),v=new b['Matrix4']()['copy'](a['Camera']['matMVP']);if(t===undefined){t=i(0x5);let w=0x0,x=[],y=[],z=0x0,A=[],B=[],C=a['Renderer']['GetReviewNearPlane'](),D=new b['Matrix4']();for(let G=0x0;G<r;G++){let H=a['Data']['Objects'][G];if(!H['flag']['renderEnable'])continue;let I=j['get'](H['uuid']);if(I!==undefined){if(a['Renderer']['enableOcclusion']&&I['occluded'])continue;}for(let J=0x0;J<H['tag']['length'];J++){let K=H['tag'][J],L=a['Data']['ShapeAction']['GetAction'](H['id_file'],K['origin_id']);if(L===undefined)continue;if(!L['drawViewDistanceBBox'])continue;if(!L['visible'])continue;let M=new b['BBox']()['copy'](K['BBox']);if(!L['transform']['equals'](D))M=a['Util']['GetBBoxFormMatrix'](M,L['transform']);let N=a['MeshProcess']['GetBoundboxVertices'](M);for(let O=0x0;O<N['vertices']['length'];O++){x[w]=N['vertices'][O]['x'],y[w]=N['normals'][O]['x'],w++,x[w]=N['vertices'][O]['y'],y[w]=N['normals'][O]['y'],w++,x[w]=N['vertices'][O]['z'],y[w]=N['normals'][O]['z'],w++;}}}let E=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],E),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(x),a['gl']['STATIC_DRAW']);let F=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],F),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(y),a['gl']['STATIC_DRAW']),t['positionBuffer']=E,t['normalBuffer']=F,t['drawNum']=w,h['set'](t['id'],t);}if(t===undefined)return;if(t['drawNum']>0x0){a['Shader']['BeginShader'](b['Enum']['SHADER_TYPES']['PHONG']),a['Shader']['SetGLLight'](),a['Shader']['SetClipping'](undefined),a['Shader']['SetMatrix'](v,u);let P=new b['Color']()['copy'](s),Q=P['glColor']();a['Shader']['SetGLColor'](Q['r'],Q['g'],Q['b'],Q['a']),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],t['positionBuffer']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],t['normalBuffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['gl']['drawArrays'](a['gl']['TRIANGLES'],0x0,t['drawNum']),a['Shader']['EndShader']();}};}}export default RenderWGL;