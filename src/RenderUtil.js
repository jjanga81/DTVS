class RenderUtil{constructor(a,b){let c=this;this['GetTextMetrics']=function(d,e){let f,g=h=>{let j=undefined,k=(h['match'](/<fa/g)||[])['length'];if(k>0x0){let l=h['split']('</fa>'),m='';for(let n=0x0;n<l['length'];n++){let o=l[n],p=o['indexOf']('>'),q=o['length'],r=o['substring'](p+0x1,q);m+=r;}j=d['measureText'](m);}else j=d['measureText'](h);return j;};for(let h=0x0;h<e['header']['text']['value']['length'];h++){let j=g(e['header']['text']['value'][h]);if(h===0x0)f=j;else{if(f['width']<j['width'])f=j;}}for(let k=0x0;k<e['text']['value']['length'];k++){let l=g(e['text']['value'][k]);if(k===0x0)f=l;else{if(f['width']<l['width'])f=l;}}return e['text']['value']['length']>0x0&&(f['height']=e['style']['font']['size']*1.5,f['ascent']=e['style']['font']['size']+e['style']['font']['size']*0.1,f['descent']=e['style']['font']['size']*0.15),f;},this['GetTextMetricsByFont']=function(d,e,f){let g=undefined,h=d['font'];d['font']=c['GetFontString'](f);if(Array['isArray'](e))for(let k=0x0;k<e['length'];k++){if(Array['isArray'](e[k])){let l=e[k],m='\x20',n='';for(let p=0x0;p<l['length'];p++){n+=m+l[p]+m;}let o=d['measureText'](n);if(g===undefined)g=o;else{if(g['width']<o['width'])g=o;}}else{let q=d['measureText'](e[k]);if(g===undefined)g=q;else{if(g['width']<q['width'])g=q;}}}else{let r=d['measureText'](e);if(g===undefined)g=r;}return e['length']>0x0&&(g['height']=f['size']*1.5,g['ascent']=f['size']+f['size']*0.1),d['font']=h,g;},this['GetFontString']=function(d){let e='';if(d['bold'])e+='bold\x20';if(d['italic'])e+='italic\x20';return e+d['size']+'pt\x20'+d['face'];},this['GetTextSizeByFont']=function(d,e,f){let g=d['font'];d['font']=c['GetFontString'](f);let h=[];for(let k=0x0;k<e['length'];k++){if(Array['isArray'](e[k])){let l=e[k],m='\x20',n=m;for(let o=0x0;o<l['length'];o++){let p=m+l[o]+m,q=d['measureText'](p);h[o]===undefined?h[o]=q['width']:h[o]=Math['max'](h[o],q['width']);}}else{let r=d['measureText'](e[k]);h[j]!==undefined?h[j]=r['width']:h[j]=Math['max'](h[j],r['width']);}}return d['font']=g,h;},this['GetTextMetricsByText']=function(d,e,f){let g;for(let h=0x0;h<e['length'];h++){let j=d['measureText'](e[h]);if(h===0x0)g=j;else{if(g['width']<j['width'])g=j;}}return e['length']>0x0&&(g['height']=f*1.5,g['ascent']=f+f*0.1),g;},this['DrawRectangle2D']=function(d,e,f){let g=a['Shader']['currentProgram'];g===undefined&&(a['Shader']['BeginShader'](b['Enum']['SHADER_TYPES']['BASIC2D']),a['Shader']['SetMatrix'](a['Camera']['screenProjectionMatrix'],undefined));let h=0x0,i=0x4,j=[];j[h++]=d['x'],j[h++]=d['y'],j[h++]=d['z'],j[h++]=e['x'],j[h++]=d['y'],j[h++]=d['z'],j[h++]=d['x'],j[h++]=e['y'],j[h++]=d['z'],j[h++]=e['x'],j[h++]=e['y'],j[h++]=d['z'];let k=f['glColor']();a['Shader']['SetGLColor'](k['r'],k['g'],k['b'],k['a']);const l=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],l),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(j),a['gl']['STATIC_DRAW']),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],l),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['gl']['drawArrays'](a['gl']['TRIANGLE_STRIP'],0x0,i),a['gl']['deleteBuffer'](l),g===undefined&&a['Shader']['EndShader']();},this['DrawLineRectangle2D']=function(d,e,f){let g=a['Shader']['currentProgram'];g===undefined&&(a['Shader']['BeginShader'](b['Enum']['SHADER_TYPES']['BASIC2D']),a['Shader']['SetMatrix'](a['Camera']['screenProjectionMatrix'],undefined));let h=0x0,i=0x8,j=[];{j[h++]=d['x'],j[h++]=d['y'],j[h++]=d['z'],j[h++]=e['x'],j[h++]=d['y'],j[h++]=d['z'];}{j[h++]=e['x'],j[h++]=d['y'],j[h++]=d['z'],j[h++]=e['x'],j[h++]=e['y'],j[h++]=d['z'];}{j[h++]=e['x'],j[h++]=e['y'],j[h++]=d['z'],j[h++]=d['x'],j[h++]=e['y'],j[h++]=d['z'];}{j[h++]=d['x'],j[h++]=e['y'],j[h++]=d['z'],j[h++]=d['x'],j[h++]=d['y'],j[h++]=d['z'];}let k=f['glColor']();a['Shader']['SetGLColor'](k['r'],k['g'],k['b'],k['a']);const l=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],l),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(j),a['gl']['STATIC_DRAW']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['gl']['drawArrays'](a['gl']['LINES'],0x0,i),a['gl']['deleteBuffer'](l),g===undefined&&a['Shader']['EndShader']();},this['DrawPolyLine2D']=function(d,e,f,g){let h=a['Shader']['currentProgram'];h===undefined&&(a['Shader']['BeginShader'](b['Enum']['SHADER_TYPES']['BASIC2D']),a['Shader']['SetMatrix'](new b['Matrix4']()['makeOrthographic'](0x0,a['gl']['canvas']['width'],a['gl']['canvas']['height'],0x0,-0x1,0x1),undefined));let i=e['glColor']();a['Shader']['SetGLColor'](i['r'],i['g'],i['b'],i['a']),a['Shader']['SetPointSize'](f*0x5);const j=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],j),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(d),a['gl']['STATIC_DRAW']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0);if(g)a['gl']['drawArrays'](a['gl']['POINTS'],0x0,d['length']/0x3);else a['gl']['drawArrays'](a['gl']['LINE_STRIP'],0x0,d['length']/0x3);a['gl']['deleteBuffer'](j),h===undefined&&a['Shader']['EndShader']();},this['DrawPolyLine2D_v2']=function(d,e){let f=a['Shader']['currentProgram'];f===undefined&&(a['Shader']['BeginShader'](b['Enum']['SHADER_TYPES']['BASIC2D']),a['Shader']['SetMatrix'](new b['Matrix4']()['makeOrthographic'](0x0,a['gl']['canvas']['width'],a['gl']['canvas']['height'],0x0,-0x1,0x1),undefined));let g=e['glColor']();a['Shader']['SetGLColor'](g['r'],g['g'],g['b'],g['a']);const h=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],h),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(d),a['gl']['STATIC_DRAW']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['gl']['drawArrays'](a['gl']['TRIANGLE_STRIP'],0x0,d['length']/0x3),a['gl']['deleteBuffer'](h),f===undefined&&a['Shader']['EndShader']();},this['DrawPolyLine2D_v3']=function(d,e){let f=a['Shader']['currentProgram'];f===undefined&&(a['Shader']['BeginShader'](b['Enum']['SHADER_TYPES']['BASIC2D']),a['Shader']['SetMatrix'](new b['Matrix4']()['makeOrthographic'](0x0,a['gl']['canvas']['width'],a['gl']['canvas']['height'],0x0,-0x1,0x1),undefined));let g=e['glColor']();a['Shader']['SetGLColor'](g['r'],g['g'],g['b'],g['a']);const h=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],h),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(d),a['gl']['STATIC_DRAW']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['gl']['drawArrays'](a['gl']['TRIANGLES'],0x0,d['length']/0x3),a['gl']['deleteBuffer'](h),f===undefined&&a['Shader']['EndShader']();},this['DrawOrbitLine2D']=function(d,e,f){let g=a['Shader']['currentProgram'];g===undefined&&a['Shader']['BeginShader'](b['Enum']['SHADER_TYPES']['ORBIT']);let h=0x0;f?h=0x14*0x3*0x64/e:h=0x14*0x3*0x3e8/e;const i=a['gl']['getUniformLocation'](a['Shader']['currentProgram'],'numVerts'),j=a['gl']['getUniformLocation'](a['Shader']['currentProgram'],'resolution'),k=a['gl']['getUniformLocation'](a['Shader']['currentProgram'],'lwidth'),l=a['gl']['getUniformLocation'](a['Shader']['currentProgram'],'lcolor');a['gl']['uniform1i'](i,h),a['gl']['uniform2f'](j,a['gl']['canvas']['width'],a['gl']['canvas']['height']),a['gl']['uniform1f'](k,e),a['gl']['uniform4f'](l,d['r']/0x100,d['g']/0x100,d['b']/0x100,d['a']/0x100);const m=0x0;a['gl']['drawArrays'](a['gl']['TRIANGLES'],m,h),g===undefined&&a['Shader']['EndShader']();},this['DrawOrbitCircle3D']=function(d,e,f){let g=new b['Vector3']()['copy'](e);g['normalize']();let h=new b['Vector3'](0x1,0x0,0x0);(h['dot'](g)>0.99||h['dot'](g)<-0.99)&&(h=new b['Vector3'](0x0,0x1,0x0));let j=new b['Vector3']()['crossVectors'](g,h);h=new b['Vector3']()['crossVectors'](j,g),h['normalize'](),j['normalize'](),g['normalize']();let k=0x32,l=[],m=[];for(let n=0x0;n<k+0x1;n++){let o=Math['PI']*0x2/k*n,p=new b['Vector3']()['copy'](h)['multiplyScalar'](Math['cos'](o)),q=new b['Vector3']()['copy'](p)['multiplyScalar'](f),r=new b['Vector3']()['copy'](j)['multiplyScalar'](Math['sin'](o)),s=new b['Vector3']()['copy'](r)['multiplyScalar'](f),t=new b['Vector3']()['addVectors'](d,new b['Vector3']()['addVectors'](q,s));l['push'](t['x']),l['push'](t['y']),l['push'](t['z']);let u=new b['Vector3']()['copy'](g);m['push'](u['x']),m['push'](u['y']),m['push'](u['z']),m['push'](u['x']),m['push'](u['y']),m['push'](u['z']);}{let v=Math['PI']*0x2/k,w=new b['Vector3']()['copy'](h)['multiplyScalar'](Math['cos'](v)),x=new b['Vector3']()['copy'](w)['multiplyScalar'](f),y=new b['Vector3']()['copy'](j)['multiplyScalar'](Math['sin'](v)),z=new b['Vector3']()['copy'](y)['multiplyScalar'](f),A=new b['Vector3']()['addVectors'](d,new b['Vector3']()['addVectors'](x,z));l['push'](A['x']),l['push'](A['y']),l['push'](A['z']);let B=new b['Vector3']()['copy'](g);m['push'](B['x']),m['push'](B['y']),m['push'](B['z']),m['push'](B['x']),m['push'](B['y']),m['push'](B['z']);}if(a['Shader']['positionAttributeLocation']>=0x0){const C=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],C),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(l),a['gl']['STATIC_DRAW']);const D=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],D),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(m),a['gl']['STATIC_DRAW']),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],C),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],D),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0)),a['gl']['drawArrays'](a['gl']['LINE_STRIP'],0x0,k+0x1),a['gl']['deleteBuffer'](C),a['gl']['deleteBuffer'](D);}},this['DrawCircle3D']=function(d,e,f){let g=new b['Vector3']()['copy'](e);g['normalize']();let h=new b['Vector3'](0x1,0x0,0x0);(h['dot'](g)>0.99||h['dot'](g)<-0.99)&&(h=new b['Vector3'](0x0,0x1,0x0));let j=new b['Vector3']()['crossVectors'](g,h);h=new b['Vector3']()['crossVectors'](j,g),h['normalize'](),j['normalize'](),g['normalize']();let k=0xa,l=[],m=[];for(let n=0x0;n<k+0x1;n++){let o=Math['PI']*0x2/k*n,p=new b['Vector3']()['copy'](h)['multiplyScalar'](Math['cos'](o)),q=new b['Vector3']()['copy'](p)['multiplyScalar'](f),r=new b['Vector3']()['copy'](j)['multiplyScalar'](Math['sin'](o)),s=new b['Vector3']()['copy'](r)['multiplyScalar'](f),t=new b['Vector3']()['addVectors'](d,new b['Vector3']()['addVectors'](q,s));l['push'](t['x']),l['push'](t['y']),l['push'](t['z']);let u=new b['Vector3']()['copy'](g);m['push'](u['x']),m['push'](u['y']),m['push'](u['z']),t=new b['Vector3']()['copy'](d),l['push'](t['x']),l['push'](t['y']),l['push'](t['z']),m['push'](u['x']),m['push'](u['y']),m['push'](u['z']);}{let v=Math['PI']*0x2/k,w=new b['Vector3']()['copy'](h)['multiplyScalar'](Math['cos'](v)),x=new b['Vector3']()['copy'](w)['multiplyScalar'](f),y=new b['Vector3']()['copy'](j)['multiplyScalar'](Math['sin'](v)),z=new b['Vector3']()['copy'](y)['multiplyScalar'](f),A=new b['Vector3']()['addVectors'](d,new b['Vector3']()['addVectors'](x,z));l['push'](A['x']),l['push'](A['y']),l['push'](A['z']);let B=new b['Vector3']()['copy'](g);m['push'](B['x']),m['push'](B['y']),m['push'](B['z']),A=new b['Vector3']()['copy'](d),l['push'](A['x']),l['push'](A['y']),l['push'](A['z']),m['push'](B['x']),m['push'](B['y']),m['push'](B['z']);}if(a['Shader']['positionAttributeLocation']>=0x0){const C=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],C),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(l),a['gl']['STATIC_DRAW']);const D=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],D),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(m),a['gl']['STATIC_DRAW']),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],C),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],D),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0)),a['gl']['drawArrays'](a['gl']['TRIANGLE_STRIP'],0x0,(k+0x1)*0x2),a['gl']['deleteBuffer'](C),a['gl']['deleteBuffer'](D);}},this['DrawCylinder3D']=function(d,e,f){let g=new b['Vector3']()['subVectors'](e,d);g['normalize']();let h=new b['Vector3'](0x1,0x0,0x0);(h['dot'](g)>0.99||h['dot'](g)<-0.99)&&(h=new b['Vector3'](0x0,0x1,0x0));let j=new b['Vector3']()['crossVectors'](g,h);h=new b['Vector3']()['crossVectors'](j,g),h['normalize'](),j['normalize'](),g['normalize']();let k=0xa,l=[],m=[];for(let n=0x0;n<k+0x1;n++){let o=Math['PI']*0x2/k*n,p=new b['Vector3']()['copy'](h)['multiplyScalar'](Math['cos'](o)),q=new b['Vector3']()['copy'](p)['multiplyScalar'](f),r=new b['Vector3']()['copy'](j)['multiplyScalar'](Math['sin'](o)),s=new b['Vector3']()['copy'](r)['multiplyScalar'](f),t=new b['Vector3']()['addVectors'](d,new b['Vector3']()['addVectors'](q,s));l['push'](t['x']),l['push'](t['y']),l['push'](t['z']);let u=new b['Vector3']()['addVectors'](p,r);m['push'](u['x']),m['push'](u['y']),m['push'](u['z']),t=new b['Vector3']()['addVectors'](e,new b['Vector3']()['addVectors'](q,s)),l['push'](t['x']),l['push'](t['y']),l['push'](t['z']),m['push'](u['x']),m['push'](u['y']),m['push'](u['z']);}if(a['Shader']['positionAttributeLocation']>=0x0){const v=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],v),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(l),a['gl']['STATIC_DRAW']);const w=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],w),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(m),a['gl']['STATIC_DRAW']),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],v),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],w),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0)),a['gl']['drawArrays'](a['gl']['TRIANGLE_STRIP'],0x0,(k+0x1)*0x2),a['gl']['deleteBuffer'](v),a['gl']['deleteBuffer'](w);}},this['DrawCone3D']=function(d,e,f){let g=new b['Vector3']()['subVectors'](e,d);g['normalize']();let h=new b['Vector3'](0x1,0x0,0x0);(h['dot'](g)>0.99||h['dot'](g)<-0.99)&&(h=new b['Vector3'](0x0,0x1,0x0));let j=new b['Vector3']()['crossVectors'](g,h);h=new b['Vector3']()['crossVectors'](j,g),h['normalize'](),j['normalize'](),g['normalize']();let k=0xa,l=[],m=[];for(let p=0x0;p<k+0x1;p++){let q=Math['PI']*0x2/k*p,r=Math['PI']*0x2/k*(p+0x1),s=new b['Vector3']()['copy'](h)['multiplyScalar'](Math['cos'](q)),t=new b['Vector3']()['copy'](s)['multiplyScalar'](f),u=new b['Vector3']()['copy'](j)['multiplyScalar'](Math['sin'](q)),v=new b['Vector3']()['copy'](u)['multiplyScalar'](f),w=new b['Vector3']()['addVectors'](d,new b['Vector3']()['addVectors'](t,v));l['push'](w['x']),l['push'](w['y']),l['push'](w['z']),w=new b['Vector3']()['copy'](e),l['push'](w['x']),l['push'](w['y']),l['push'](w['z']);let x=new b['Vector3']()['copy'](h)['multiplyScalar'](Math['cos'](r)),y=new b['Vector3']()['copy'](j)['multiplyScalar'](Math['sin'](r)),z=new b['Vector3']()['subVectors'](new b['Vector3']()['addVectors'](x,y),new b['Vector3']()['addVectors'](s,u)),A=new b['Vector3']()['addVectors'](s,u);A['normalize'](),m['push'](A['x']),m['push'](A['y']),m['push'](A['z']),m['push'](A['x']),m['push'](A['y']),m['push'](A['z']);}const n=a['gl']['createBuffer'](),o=a['gl']['createBuffer']();a['Shader']['positionAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],n),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(l),a['gl']['STATIC_DRAW']),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],o),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(m),a['gl']['STATIC_DRAW']),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],n),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],o),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0)),a['gl']['drawArrays'](a['gl']['TRIANGLE_STRIP'],0x0,(k+0x1)*0x2));l=[],m=[];for(let B=0x0;B<k+0x1;B++){let C=Math['PI']*0x2/k*B,D=Math['PI']*0x2/k*(B+0x1),E=new b['Vector3']()['copy'](h)['multiplyScalar'](Math['cos'](C)),F=new b['Vector3']()['copy'](E)['multiplyScalar'](f),G=new b['Vector3']()['copy'](j)['multiplyScalar'](Math['sin'](C)),H=new b['Vector3']()['copy'](G)['multiplyScalar'](f),I=new b['Vector3']()['addVectors'](d,new b['Vector3']()['addVectors'](F,H));l['push'](I['x']),l['push'](I['y']),l['push'](I['z']),I=new b['Vector3']()['copy'](d),l['push'](I['x']),l['push'](I['y']),l['push'](I['z']);let J=new b['Vector3']()['copy'](g);m['push'](J['x']),m['push'](J['y']),m['push'](J['z']),m['push'](J['x']),m['push'](J['y']),m['push'](J['z']);}a['Shader']['positionAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],n),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(l),a['gl']['STATIC_DRAW']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],o),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(m),a['gl']['STATIC_DRAW']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0)),a['gl']['drawArrays'](a['gl']['TRIANGLE_STRIP'],0x0,(k+0x1)*0x2)),a['gl']['deleteBuffer'](n),a['gl']['deleteBuffer'](o);},this['DrawSphere3D']=function(d,e){let f=new b['Vector3'](0x1,0x0,0x0),g=new b['Vector3'](0x0,0x1,0x0),h=new b['Vector3'](0x0,0x0,0x1),k=0xa;const l=a['gl']['createBuffer'](),m=a['gl']['createBuffer']();let n=new b['Vector3'](0x0,0x0,0x1);for(let o=0x0;o<k;o++){let p=Math['PI']*0x2/k*o,q=Math['PI']*0x2/k*(o+0x1),r=[],s=[];for(let t=0x0;t<k+0x1;t++){let u=Math['PI']*0x2/k*t,v=new b['Vector3']()['copy'](f)['multiplyScalar'](Math['cos'](u)),w=new b['Vector3']()['copy'](v)['multiplyScalar'](e),x=new b['Vector3']()['copy'](g)['multiplyScalar'](Math['sin'](u)),y=new b['Vector3']()['copy'](x)['multiplyScalar'](e),z=new b['Vector3']()['addVectors'](w,y);z['normalize']();let A=new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](n)['multiplyScalar'](Math['cos'](p)),new b['Vector3']()['copy'](z)['multiplyScalar'](Math['sin'](p)));A['normalize']();let B=new b['Vector3']()['addVectors'](d,new b['Vector3']()['copy'](A)['multiplyScalar'](e));r['push'](B['x']),r['push'](B['y']),r['push'](B['z']),s['push'](A['x']),s['push'](A['y']),s['push'](A['z']);let C=new b['Vector3']()['addVectors'](new b['Vector3']()['copy'](n)['multiplyScalar'](Math['cos'](q)),new b['Vector3']()['copy'](z)['multiplyScalar'](Math['sin'](q)));C['normalize']();let D=new b['Vector3']()['addVectors'](d,new b['Vector3']()['copy'](C)['multiplyScalar'](e));r['push'](D['x']),r['push'](D['y']),r['push'](D['z']),s['push'](C['x']),s['push'](C['y']),s['push'](C['z']);}a['Shader']['positionAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],l),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(r),a['gl']['STATIC_DRAW']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(s),a['gl']['STATIC_DRAW']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0)),a['gl']['drawArrays'](a['gl']['TRIANGLE_STRIP'],0x0,(k+0x1)*0x2));}a['gl']['deleteBuffer'](l),a['gl']['deleteBuffer'](m);},this['DrawRectangle3D']=function(d,e,f,g,h){let j=[],k=0x0,l=[],m=0x0;j[k]=d['x'],k++,j[k]=d['y'],k++,j[k]=d['z'],k++,j[k]=e['x'],k++,j[k]=e['y'],k++,j[k]=e['z'],k++,j[k]=f['x'],k++,j[k]=f['y'],k++,j[k]=f['z'],k++,j[k]=g['x'],k++,j[k]=g['y'],k++,j[k]=g['z'],k++,j[k]=d['x'],k++,j[k]=d['y'],k++,j[k]=d['z'],k++;if(h===undefined){let n=new b['Vector3']()['subVectors'](e,d),o=new b['Vector3']()['subVectors'](f,d);h=new b['Vector3'](),h['crossVectors'](n,o),h['normalize']();}if(h!==undefined)for(let p=0x0;p<0x5;p++){l[m]=h['x'],m++,l[m]=h['y'],m++,l[m]=h['z'],m++;}if(a['Shader']['positionAttributeLocation']>=0x0){const q=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],q),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(j),a['gl']['STATIC_DRAW']);const r=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(l),a['gl']['STATIC_DRAW']),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],q),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0)),a['gl']['drawArrays'](a['gl']['TRIANGLE_STRIP'],0x0,0x4),a['gl']['deleteBuffer'](q),a['gl']['deleteBuffer'](r);}},this['DrawBoundBox3D']=function(d,e){let f=a['Util']['GetBBox2Vertex'](d),g=[[0x0,0x4,0x4,0x5,0x5,0x1,0x1,0x0],[0x2,0x6,0x6,0x7,0x7,0x3,0x3,0x2],[0x0,0x2],[0x4,0x6],[0x1,0x3],[0x5,0x7]],h=a['gl']['createBuffer'](),l=[];a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],h);let m=0x0;for(let n=0x0;n<g['length'];n++){for(let o=0x0;o<g[n]['length'];o+=0x2){let p=a['Util']['Get2DLineFromWidth'](f[g[n][o]],f[g[n][o+0x1]],e);for(let q=0x0;q<p['length']-0x2;q++){l[m]=p[q]['x'],m++,l[m]=p[q]['y'],m++,l[m]=p[q]['z'],m++,l[m]=p[q+0x1]['x'],m++,l[m]=p[q+0x1]['y'],m++,l[m]=p[q+0x1]['z'],m++,l[m]=p[q+0x2]['x'],m++,l[m]=p[q+0x2]['y'],m++,l[m]=p[q+0x2]['z'],m++;}}}a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(l),a['gl']['STATIC_DRAW']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['gl']['drawArrays'](a['gl']['TRIANGLES'],0x0,l['length']),a['gl']['deleteBuffer'](h);},this['DrawLines3D']=function(d,e){let f=a['gl']['createBuffer'](),g=[];a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],f);let h=0x0;for(let j=0x0;j<d['length'];j+=0x2){let l=a['Util']['Get2DLineFromWidth'](d[j],d[j+0x1],e);for(let m=0x0;m<l['length']-0x2;m++){g[h]=l[m]['x'],h++,g[h]=l[m]['y'],h++,g[h]=l[m]['z'],h++,g[h]=l[m+0x1]['x'],h++,g[h]=l[m+0x1]['y'],h++,g[h]=l[m+0x1]['z'],h++,g[h]=l[m+0x2]['x'],h++,g[h]=l[m+0x2]['y'],h++,g[h]=l[m+0x2]['z'],h++;}}a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(g),a['gl']['STATIC_DRAW']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['gl']['drawArrays'](a['gl']['TRIANGLES'],0x0,g['length']),a['gl']['deleteBuffer'](f);},this['PivotAxisLine3D']=function(d,e,f){let g=0xa;{let h=new b['Matrix4']()['copy'](a['Camera']['matMVP']),i=new b['Vector3']()['copy'](a['Camera']['pivot']),j=a['Camera']['world2ScreenWithMatrix'](h,i),k=j['add'](new b['Vector3'](g,0x0,0x0));i=a['Camera']['screen2WorldWithMatrix'](h,k),g=new b['Vector3']()['subVectors'](a['Camera']['pivot'],i)['length']();}{let l=a['Data']['GetBBox'](),m=d,n=m['glColor'](),o=g/0xa;if(a['Configuration']['Render']['Pivot']['GuideLine']['Thickness']>0x0)o*=a['Configuration']['Render']['Pivot']['GuideLine']['Thickness'];a['Shader']['SetGLColor'](n['r'],n['g'],n['b'],n['a']),c['DrawCylinder3D'](new b['Vector3'](l['min']['x']-l['radius'],a['Camera']['pivot']['y'],a['Camera']['pivot']['z']),new b['Vector3'](l['max']['x']+l['radius'],a['Camera']['pivot']['y'],a['Camera']['pivot']['z']),o),m=e,n=m['glColor'](),a['Shader']['SetGLColor'](n['r'],n['g'],n['b'],n['a']),c['DrawCylinder3D'](new b['Vector3'](a['Camera']['pivot']['x'],l['min']['y']-l['radius'],a['Camera']['pivot']['z']),new b['Vector3'](a['Camera']['pivot']['x'],l['max']['y']+l['radius'],a['Camera']['pivot']['z']),o),m=f,n=m['glColor'](),a['Shader']['SetGLColor'](n['r'],n['g'],n['b'],n['a']),c['DrawCylinder3D'](new b['Vector3'](a['Camera']['pivot']['x'],a['Camera']['pivot']['y'],l['min']['z']-l['radius']),new b['Vector3'](a['Camera']['pivot']['x'],a['Camera']['pivot']['y'],l['max']['z']+l['radius']),o);}},this['OrbitAxisLine']=function(d,e,f,g){if(f>0x0){let h=a['Renderer']['GetSizeWidth'](),k=a['Renderer']['GetSizeHeight'](),l=h/0x2,m=k/0x2,n=Math['min'](l*0.6,m*0.6);c['DrawOrbitLine2D'](d,f,g);const o=a['Renderer']['GetOrbitMousePos']();let p=(o['y']-m)/n;if(p<-0x1)p=-0x1;if(p>0x1)p=0x1;let q=Math['asin'](p),r=Math['cos'](q)*n,s=(o['x']-l)/r;if(s<-0x1)s=-0x1;if(s>0x1)s=0x1;let t=Math['asin'](s);if(!g){let u=[];for(let w=-0x14;w<=0x14;w+=0x5){let x=q+w/0xb4*Math['PI'];r=Math['cos'](x)*n,u['push'](l+Math['sin'](t)*r*(0x1-f*0.01)),u['push'](m-Math['sin'](x)*n*(0x1-f*0.01)),u['push'](0x0),u['push'](l+Math['sin'](t)*r*(0x1+f*0.01)),u['push'](m-Math['sin'](x)*n*(0x1+f*0.01)),u['push'](0x0);}c['DrawPolyLine2D'](u,e,f,g),c['DrawPolyLine2D_v2'](u,e);let v=[];r=Math['cos'](q)*n;for(let y=-0x14;y<=0x14;y+=0x5){let z=t+y/0xb4*Math['PI'];v['push'](l+Math['sin'](z)*r*(0x1-f*0.01)),v['push'](m-Math['sin'](q)*n*(0x1-f*0.01)),v['push'](0x0),v['push'](l+Math['sin'](z)*r*(0x1+f*0.01)),v['push'](m-Math['sin'](q)*n*(0x1+f*0.01)),v['push'](0x0);}c['DrawPolyLine2D'](v,e,f,g),c['DrawPolyLine2D_v2'](v,e);}else{let A=[],B=0x5;if(f>=0x5)B=0x14;else{if(f>=2.5)B=0xa;else{if(f<=0.5)B=0x2;}}for(let D=-0x14;D<=0x14;D+=B){let E=q+D/0xb4*Math['PI'];r=Math['cos'](E)*n;for(let F=0x0;F<=0x14;F++){A['push'](l+Math['sin'](t)*r+f*n/0x3c*Math['cos'](F*0x2*Math['PI']/0x14)),A['push'](m-Math['sin'](E)*n+f*n/0x3c*Math['sin'](F*0x2*Math['PI']/0x14)),A['push'](0x0),A['push'](l+Math['sin'](t)*r+f*n/0x3c*Math['cos']((F+0x1)*0x2*Math['PI']/0x14)),A['push'](m-Math['sin'](E)*n+f*n/0x3c*Math['sin']((F+0x1)*0x2*Math['PI']/0x14)),A['push'](0x0),A['push'](l+Math['sin'](t)*r),A['push'](m-Math['sin'](E)*n),A['push'](0x0);}}c['DrawPolyLine2D_v3'](A,e);let C=[];r=Math['cos'](q)*n;for(let G=-0x14;G<=0x14;G+=B){let H=t+G/0xb4*Math['PI'];for(let I=0x0;I<=0x14;I++){C['push'](l+Math['sin'](H)*r+f*n/0x3c*Math['cos'](I*0x2*Math['PI']/0x14)),C['push'](m-Math['sin'](q)*n+f*n/0x3c*Math['sin'](I*0x2*Math['PI']/0x14)),C['push'](0x0),C['push'](l+Math['sin'](H)*r+f*n/0x3c*Math['cos']((I+0x1)*0x2*Math['PI']/0x14)),C['push'](m-Math['sin'](q)*n+f*n/0x3c*Math['sin']((I+0x1)*0x2*Math['PI']/0x14)),C['push'](0x0),C['push'](l+Math['sin'](H)*r),C['push'](m-Math['sin'](q)*n),C['push'](0x0);}}c['DrawPolyLine2D_v3'](C,e);}}if(![]){let J=new b['Matrix4']()['copy'](a['Camera']['matMVP']),K=new b['Vector3']()['copy'](a['Camera']['pivot']),L=a['Camera']['world2ScreenWithMatrix'](J,K),M=a['Renderer']['GetSizeWidth'](),N=a['Renderer']['GetSizeHeight']();center=new b['Vector3'](M/0x2,N/0x2,0x0);const O=a['Renderer']['GetOrbitMousePos']();mouse=new b['Vector3'](O['x'],O['y'],0x0),mouse2=a['Camera']['screen2WorldWithMatrix'](J,mouse);let P=Math['min'](center['x']*0.8,center['y']*0.8),Q=L['add'](new b['Vector3'](P,0x0,0x0));K=a['Camera']['screen2WorldWithMatrix'](J,Q);let R=L;R['x']=M*0.5,R['y']=N*0.5,vRotPivot=a['Camera']['screen2WorldWithMatrix'](J,R),dir=new b['Vector3']()['subVectors'](mouse2,vRotPivot)['length'](),sphereRadius=new b['Vector3']()['subVectors'](a['Camera']['pivot'],K)['length']();let S=new b['Vector3'](0x0,0x1,0x0),T=new b['Vector3'](0x1,0x0,0x0),U=new b['Vector3'](0x0,0x0,0x1),V=xColor,W=V['glColor']();a['Shader']['SetGLColor'](W['r'],W['g'],W['b'],W['a']),c['DrawOrbitCircle3D'](vRotPivot,S,sphereRadius);let X=sphereRadius/0x64;if(a['Configuration']['Render']['Pivot']['GuideLine']['Thickness']>0x0)X*=a['Configuration']['Render']['Pivot']['GuideLine']['Thickness'];c['DrawSphere3D'](mouse2,X),V=yColor,W=V['glColor'](),a['Shader']['SetGLColor'](W['r'],W['g'],W['b'],W['a']),c['DrawOrbitCircle3D'](vRotPivot,T,sphereRadius),V=zColor,W=V['glColor'](),a['Shader']['SetGLColor'](W['r'],W['g'],W['b'],W['a']),c['DrawOrbitCircle3D'](vRotPivot,U,sphereRadius);}if(![]){let Y=a['Data']['GetBBox'](),Z=xColor,a0=Z['glColor'](),a1=sphereRadius/0xa;if(a['Configuration']['Render']['Pivot']['GuideLine']['Thickness']>0x0)a1*=a['Configuration']['Render']['Pivot']['GuideLine']['Thickness'];a['Shader']['SetGLColor'](a0['r'],a0['g'],a0['b'],a0['a']),c['DrawCylinder3D'](new b['Vector3'](Y['min']['x']-Y['radius'],vRotPivot['y'],vRotPivot['z']),new b['Vector3'](Y['max']['x']+Y['radius'],vRotPivot['y'],vRotPivot['z']),a1),Z=yColor,a0=Z['glColor'](),a['Shader']['SetGLColor'](a0['r'],a0['g'],a0['b'],a0['a']),c['DrawCylinder3D'](new b['Vector3'](vRotPivot['x'],Y['min']['y']-Y['radius'],vRotPivot['z']),new b['Vector3'](vRotPivot['x'],Y['max']['y']+Y['radius'],vRotPivot['z']),a1),Z=zColor,a0=Z['glColor'](),a['Shader']['SetGLColor'](a0['r'],a0['g'],a0['b'],a0['a']),c['DrawCylinder3D'](new b['Vector3'](vRotPivot['x'],vRotPivot['y'],Y['min']['z']-Y['radius']),new b['Vector3'](vRotPivot['x'],vRotPivot['y'],Y['max']['z']+Y['radius']),a1);}},this['TextureByScreenCoord']=function(d,e,f,g,h,i){let j=a['Shader']['currentProgram'];if(j===undefined){a['Shader']['BeginShader'](b['Enum']['SHADER_TYPES']['BASIC2D']);const s=new b['Matrix4']();a['Shader']['SetMatrix'](s,undefined),a['Shader']['SetGLColor'](0x1,0x1,0x1,0x1);}const k=(d['x']-e/0x2)/a['Camera']['clientWidth']*0x2-0x1,l=(d['x']+e/0x2)/a['Camera']['clientWidth']*0x2-0x1,m=0x1-(d['y']-f/0x2)/a['Camera']['clientHeight']*0x2,n=0x1-(d['y']+f/0x2)/a['Camera']['clientHeight']*0x2;let o=[k,m,0x0,l,m,0x0,k,n,0x0,l,n,0x0],p=[h['x'],h['y'],i['x'],h['y'],h['x'],i['y'],i['x'],i['y']];a['Shader']['SetCurrentTexture']('u_Texture',a['gl']['TEXTURE_2D'],g);const q=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],q),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(o),a['gl']['STATIC_DRAW']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0);const r=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(p),a['gl']['STATIC_DRAW']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0),a['gl']['drawArrays'](a['gl']['TRIANGLE_STRIP'],0x0,0x4),a['gl']['deleteBuffer'](q),a['gl']['deleteBuffer'](r),j===undefined&&a['Shader']['EndShader']();},this['GetScreenPositionByMatrix']=function(d,e){let f=new b['Matrix4']()['transformVector'](d['elements'],[e['x'],e['y'],e['z'],0x1]);f[0x0]/=f[0x3],f[0x1]/=f[0x3];let g=(f[0x0]*0.5+0.5)*a['Camera']['clientWidth'],h=(f[0x1]*-0.5+0.5)*a['Camera']['clientHeight'],i=new b['Vector2'](g,h);return i;},this['DrawText2D']=function(d,e,f,g){d['font']=0xc+'pt\x20'+'Arial';const i=c['GetTextMetricsByText'](d,e,0xc);let j=new b['Vector2'](f['x'],f['y']),k=i['width'],l=i['height'];j['x']-=k*0.5,j['y']-=l*0.5,d['fillStyle']='rgba('+g['r']+','+g['g']+','+g['b']+','+g['glAlpha']()+')',!![]&&(d['shadowColor']='rgba(0,\x200,\x200,\x200.2)',d['shadowOffsetX']=0x1,d['shadowOffsetY']=0x1,d['shadowBlur']=0x2),d['fillText'](e,j['x'],j['y']+i['ascent']),!![]&&(d['shadowOffsetX']=0x0,d['shadowOffsetY']=0x0,d['shadowBlur']=0x0);},this['DrawRoundRect']=function(d,e,f,g,i,j,k,l){d['beginPath'](),d['moveTo'](e+j,f),d['lineTo'](e+g-j,f),d['quadraticCurveTo'](e+g,f,e+g,f+j),d['lineTo'](e+g,f+i-j),d['quadraticCurveTo'](e+g,f+i,e+g-j,f+i),d['lineTo'](e+j,f+i),d['quadraticCurveTo'](e,f+i,e,f+i-j),d['lineTo'](e,f+j),d['quadraticCurveTo'](e,f,e+j,f),d['closePath']();if(k)d['fill']();if(l)d['stroke']();},this['DrawRoundRect_Custom']=function(d,e,f,g,i,j,k,l,m,n,o,p){d['beginPath']();m?(d['moveTo'](e,f+j),d['quadraticCurveTo'](e,f,e+j,f)):(d['moveTo'](e,f-j),d['lineTo'](e,f),d['lineTo'](e+j,f));d['lineTo'](e-j+g,f);n?d['quadraticCurveTo'](e+g,f,e+g,f+j):(d['lineTo'](e+j+g+j,f),d['lineTo'](e+j+g+j,f+j));d['lineTo'](e+g,f+i-j);p?d['quadraticCurveTo'](e+g,f+i,e+g-j,f+i):(d['lineTo'](e+g,f+i),d['lineTo'](e+g-j,f+i));d['lineTo'](e+j,f+i);o?d['quadraticCurveTo'](e,f+i,e,f+i-j):(d['lineTo'](e,f+i),d['lineTo'](e,f+i-j));d['lineTo'](e,f-j),d['closePath']();if(k)d['fill']();if(l)d['stroke']();},this['DrawRect']=function(d,e,f,g,i,j,k){if(j)d['fillRect'](e,f,g,i);if(k)d['strokeRect'](e,f,g,i);},this['DrawLine']=function(d,e,f,g,h){d['beginPath'](),d['moveTo'](e,f),d['lineTo'](g,h),d['stroke']();},this['DrawLineDash']=function(d,e,f,g,h,i){d['beginPath'](),d['setLineDash'](i),d['moveTo'](e,f),d['lineTo'](g,h),d['stroke'](),d['setLineDash']([]);},this['DrawLines']=function(d,e){d['beginPath'](),d['moveTo'](e[0x0]['x'],e[0x0]['y']);for(let f=0x1;f<e['length'];f++){d['lineTo'](e[f]['x'],e[f]['y']);}d['stroke']();},this['DrawArrow']=function(d,e,f,g,h,i){let j=new b['Vector3'](e,f,0x0),k=new b['Vector3'](g,h,0x0),l=new b['Vector3']()['subVectors'](k,j);l['normalize']();let m=new b['Vector3'](0x0,0x0,0x1);m['cross'](l),m['normalize'](),d['beginPath'](),d['moveTo'](e+l['x']*i/0x2,f+l['y']*i/0x2),d['lineTo'](g,h),d['stroke']();let n=e+l['x']*i,o=f+l['y']*i;d['beginPath'](),d['moveTo'](e,f),d['lineTo'](n+m['x']*i/0x2,o+m['y']*i/0x2),d['lineTo'](n-m['x']*i/0x2,o-m['y']*i/0x2),d['stroke'](),d['fill']();},this['DrawTriangle']=function(d,e,f,g,h,i){let j=new b['Vector3'](e,f,0x0),k=new b['Vector3'](g,h,0x0),l=new b['Vector3']()['subVectors'](k,j);l['normalize']();let m=new b['Vector3'](0x0,0x0,0x1);m['cross'](l),m['normalize']();let n=e+l['x']*i,o=f+l['y']*i;d['beginPath'](),d['moveTo'](e,f),d['lineTo'](n+m['x']*i/0x2,o+m['y']*i/0x2),d['lineTo'](n-m['x']*i/0x2,o-m['y']*i/0x2),d['stroke'](),d['fill']();},this['DrawTrianglesFan']=function(d,e){for(let f=0x0;f<e['length']-0x2;f++){d['beginPath'](),d['moveTo'](e[0x0]['x'],e[0x0]['y']),d['lineTo'](e[f+0x1]['x'],e[f+0x1]['y']),d['lineTo'](e[f+0x2]['x'],e[f+0x2]['y']),d['stroke'](),d['fill']();}},this['DrawAngle']=function(d,e,f,g,h,j){const k=new b['Matrix4']();k['copy'](a['Camera']['cameraMatrix']);const l=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],k);let m,n,o,p;o=new b['Vector3']()['subVectors'](f,e),p=new b['Vector3']()['subVectors'](g,e);let q=Math['min'](o['length'](),p['length']())/0x3,r,s,t;r=new b['Vector3']()['copy'](o),s=new b['Vector3']()['copy'](p),t=new b['Vector3']()['crossVectors'](r,s),s=new b['Vector3']()['crossVectors'](r,t),r['normalize'](),s['normalize'](),o['normalize'](),p['normalize']();let u=Math['acos'](o['dot'](p));j&&(u=(Math['PI']*0x2-u)*-0x1);let v=[],w=0x1e;for(let x=0x0;x<=w;x++){let y=-(x/w)*u,z=new b['Vector3']()['copy'](r)['multiplyScalar'](Math['cos'](y))['multiplyScalar'](q),A=new b['Vector3']()['copy'](s)['multiplyScalar'](Math['sin'](y))['multiplyScalar'](q),B=new b['Vector3']()['addVectors'](z,A);v[x]=B['add'](e);}d['beginPath']();for(let C=0x0;C<=w;C++){let D=new b['Matrix4']()['transformVector'](l['elements'],[v[C]['x'],v[C]['y'],v[C]['z'],0x1]);D[0x0]/=D[0x3],D[0x1]/=D[0x3];let E=(D[0x0]*0.5+0.5)*a['Camera']['clientWidth'],F=(D[0x1]*-0.5+0.5)*a['Camera']['clientHeight'];if(C===0x0)d['moveTo'](E,F);else d['lineTo'](E,F);}d['stroke']();{let G=new b['Matrix4']()['transformVector'](l['elements'],[v[0x0]['x'],v[0x0]['y'],v[0x0]['z'],0x1]),H=new b['Matrix4']()['transformVector'](l['elements'],[v[0x1]['x'],v[0x1]['y'],v[0x1]['z'],0x1]);G[0x0]/=G[0x3],G[0x1]/=G[0x3],H[0x0]/=H[0x3],H[0x1]/=H[0x3];let I=(G[0x0]*0.5+0.5)*a['Camera']['clientWidth'],J=(G[0x1]*-0.5+0.5)*a['Camera']['clientHeight'],K=(H[0x0]*0.5+0.5)*a['Camera']['clientWidth'],L=(H[0x1]*-0.5+0.5)*a['Camera']['clientHeight'];c['DrawArrow'](d,I,J,K,L,h);}{let M=new b['Matrix4']()['transformVector'](l['elements'],[v[w]['x'],v[w]['y'],v[w]['z'],0x1]),N=new b['Matrix4']()['transformVector'](l['elements'],[v[w-0x1]['x'],v[w-0x1]['y'],v[w-0x1]['z'],0x1]);M[0x0]/=M[0x3],M[0x1]/=M[0x3],N[0x0]/=N[0x3],N[0x1]/=N[0x3];let O=(M[0x0]*0.5+0.5)*a['Camera']['clientWidth'],P=(M[0x1]*-0.5+0.5)*a['Camera']['clientHeight'],Q=(N[0x0]*0.5+0.5)*a['Camera']['clientWidth'],R=(N[0x1]*-0.5+0.5)*a['Camera']['clientHeight'];c['DrawArrow'](d,O,P,Q,R,h);}return v[w/0x2];},this['DrawPoint']=function(d,e,f,g){d['beginPath'](),d['arc'](e,f,g,0x0,Math['PI']*0x2),d['fill']();},this['DrawCircle']=function(d,e,f,g){const h=new b['Matrix4']()['copy'](a['Camera']['matMVP']);let i=new b['Vector3']()['copy'](f);i['normalize']();let k=new b['Vector3'](0x1,0x0,0x0);(k['dot'](i)>0.99||k['dot'](i)<-0.99)&&(k=new b['Vector3'](0x0,0x1,0x0));let l=new b['Vector3']()['crossVectors'](i,k);k=new b['Vector3']()['crossVectors'](l,i),k['normalize'](),l['normalize'](),i['normalize']();let m=0x0,n=0x168;d['beginPath']();for(let o=m;o<=n;o+=0xa){let p=o/0xb4*3.141592654,q=new b['Vector3']()['copy'](k)['multiplyScalar'](Math['cos'](p))['multiplyScalar'](g),r=new b['Vector3']()['copy'](l)['multiplyScalar'](Math['sin'](p))['multiplyScalar'](g),s=new b['Vector3']()['addVectors'](q,r);s=s['add'](e);let t=c['GetScreenPositionByMatrix'](h,s);if(o===0x0)d['moveTo'](t['x'],t['y']);else d['lineTo'](t['x'],t['y']);}d['stroke']();},this['DrawToolTipRoundRect']=function(d,e,f,g,i,j,k,l){let m=0x5;if(g<m)g=m;d['beginPath'](),d['moveTo'](e+j,f),d['lineTo'](e+g-j,f),d['quadraticCurveTo'](e+g,f,e+g,f+j),d['lineTo'](e+g,f+i-j),d['quadraticCurveTo'](e+g,f+i,e+g-j,f+i),d['lineTo'](e+m,f+i),d['lineTo'](e,f+i+m),d['lineTo'](e,f+i),d['lineTo'](e,f+j),d['quadraticCurveTo'](e,f,e+j,f),d['closePath']();if(k)d['fill']();if(l)d['stroke']();},this['SetReviewArrowOption']=function(d,e){d['strokeStyle']='rgba('+e['style']['line']['color']['r']+','+e['style']['line']['color']['g']+','+e['style']['line']['color']['b']+','+e['style']['line']['color']['glAlpha']()+')',d['lineWidth']=e['style']['line']['thickness'],d['fillStyle']='rgba('+e['style']['arrow']['color']['r']+','+e['style']['arrow']['color']['g']+','+e['style']['arrow']['color']['b']+','+e['style']['arrow']['color']['glAlpha']()+')';},this['SetReviewLineOption']=function(d,e){d['strokeStyle']='rgba('+e['style']['line']['color']['r']+','+e['style']['line']['color']['g']+','+e['style']['line']['color']['b']+','+e['style']['line']['color']['glAlpha']()+')',d['lineWidth']=e['style']['line']['thickness'];},this['GetLineOptionKey']=function(d){let e='rgba('+d['style']['line']['color']['r']+','+d['style']['line']['color']['g']+','+d['style']['line']['color']['b']+','+d['style']['line']['color']['glAlpha']()+')'+d['style']['line']['thickness'];return e;},this['SetReviewAxisLineOption']=function(d,e,f){if(f===0x0)d['strokeStyle']='rgba(255,\x200,\x200,\x201)';else{if(f===0x1)d['strokeStyle']='rgba(0,\x20255,\x200,\x201)';else f===0x2&&(d['strokeStyle']='rgba(100,\x20100,\x20255,\x201)');}d['lineWidth']=e['style']['line']['thickness'];},this['SetReviewPointOption']=function(d,e){d['fillStyle']='rgba('+e['style']['point']['color']['r']+','+e['style']['point']['color']['g']+','+e['style']['point']['color']['b']+','+e['style']['point']['color']['glAlpha']()+')';},this['SetReviewBgOption']=function(d,e){e['style']['background']['enable']?d['fillStyle']='rgba('+e['style']['background']['color']['r']+','+e['style']['background']['color']['g']+','+e['style']['background']['color']['b']+','+e['style']['background']['color']['glAlpha']()+')':d['fillStyle']='rgba('+e['style']['background']['color']['r']+','+e['style']['background']['color']['g']+','+e['style']['background']['color']['b']+','+0x0+')',e['style']['border']['enable']?(d['strokeStyle']='rgba('+e['style']['border']['color']['r']+','+e['style']['border']['color']['g']+','+e['style']['border']['color']['b']+','+e['style']['border']['color']['glAlpha']()+')',d['lineWidth']=e['style']['border']['thickness']):(d['strokeStyle']='rgba('+e['style']['border']['color']['r']+','+e['style']['border']['color']['g']+','+e['style']['border']['color']['b']+','+0x0+')',d['lineWidth']=e['style']['border']['thickness']);},this['SetReviewFontOption']=function(d,e){let f='';if(e['style']['font']['bold'])f+='bold\x20';if(e['style']['font']['italic'])f+='italic\x20';d['font']=f+e['style']['font']['size']+'pt\x20'+e['style']['font']['face'],d['fillStyle']='rgba('+e['style']['font']['color']['r']+','+e['style']['font']['color']['g']+','+e['style']['font']['color']['b']+','+e['style']['font']['color']['glAlpha']()+')';},this['SetReviewTriangleOption']=function(d,e){d['strokeStyle']='rgba('+e['style']['triangle']['color']['r']+','+e['style']['triangle']['color']['g']+','+e['style']['triangle']['color']['b']+','+e['style']['triangle']['color']['glAlpha']()+')',d['lineWidth']=0x1,d['fillStyle']='rgba('+e['style']['triangle']['color']['r']+','+e['style']['triangle']['color']['g']+','+e['style']['triangle']['color']['b']+','+e['style']['triangle']['color']['glAlpha']()+')';};}}export default RenderUtil;